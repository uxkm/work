(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _appeaserComponentBase = require('./../../../js/base/appeaser-component-base.js');

var _appeaserComponentBase2 = _interopRequireDefault(_appeaserComponentBase);

var _Logger = require('./../../../js/base/logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../../themes/stories/enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

var _scrollY = -1;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ABackDrop = function (_AppeaserComponentBas) {
    _inherits(ABackDrop, _AppeaserComponentBas);

    /**
     * Constructor, will run before page loaded
     */
    function ABackDrop() {
        _classCallCheck(this, ABackDrop);

        var _this = _possibleConstructorReturn(this, (ABackDrop.__proto__ || Object.getPrototypeOf(ABackDrop)).apply(this, arguments));

        _Logger2.default.INFO(_this.constructor.name, ':: Constructor');

        _this._jQueryScopeBinding();
        _this._declareConstants();
        _this.subscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed
        return _this;
    }

    /**
     * Destructor, will run after page unload (or destroy)
     */


    _createClass(ABackDrop, [{
        key: 'destroy',
        value: function destroy() {
            this._detachDOMListeners();
            this._detachSubscribers();

            _get(ABackDrop.prototype.__proto__ || Object.getPrototypeOf(ABackDrop.prototype), 'destroy', this).call(this);
        }

        /************************************************************************************************************
         ******************************************** Internal functions ********************************************
         ************************************************************************************************************/

        /**
         * Declare class constants here
         * @private
         */

    }, {
        key: '_declareConstants',
        value: function _declareConstants() {}

        /**
         * Runs on DOM Ready
         * Should be used to attach DOM listeners etc
         * @private
         */

    }, {
        key: '_onDOMReady',
        value: function _onDOMReady() {
            _Logger2.default.INFO(this.constructor.name, ':: onDOMReady');

            this._attachSubscribers();
            this._attachDOMListeners();
        }

        /**
         * Scopes "this" to use the "this" of the outside function
         * Since JQuery creates a new function with a new "this"
         * Attach all functions that needs to be binded here
         * @private
         */

    }, {
        key: '_jQueryScopeBinding',
        value: function _jQueryScopeBinding() {
            this._onDOMReady = this._onDOMReady.bind(this);
            this._setGradient = this._setGradient.bind(this);
            this._show = this._show.bind(this);
            this._hide = this._hide.bind(this);
        }

        /**
         * Attach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_attachSubscribers',
        value: function _attachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');

            this.subscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
            this.subscribe(_Enums2.default.ACTION.SET_BACKDROP, this._setGradient);
            this.subscribe(_Enums2.default.ACTION.SHOW_BACKDROP, this._show);
            this.subscribe(_Enums2.default.ACTION.HIDE_BACKDROP, this._hide);
            this.subscribe(_Enums2.default.ACTION.ANIMATE_BACKDROP, this._animate);
        }

        /**
         * Detach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_detachSubscribers',
        value: function _detachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');

            this.unsubscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
            this.unsubscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady);
            this.unsubscribe(_Enums2.default.ACTION.SET_BACKDROP, this._setGradient);
            this.unsubscribe(_Enums2.default.ACTION.SHOW_BACKDROP, this._show);
            this.unsubscribe(_Enums2.default.ACTION.HIDE_BACKDROP, this._hide);
            this.unsubscribe(_Enums2.default.ACTION.ANIMATE_BACKDROP, this._animate);
        }

        /**
         * At this point the framework is ready.
         * Add all publish events here (if any)
         * @private
         */

    }, {
        key: '_onFrameworkReady',
        value: function _onFrameworkReady() {}

        /**
         * Attach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_attachDOMListeners',
        value: function _attachDOMListeners() {}

        /**
         * Detach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_detachDOMListeners',
        value: function _detachDOMListeners() {}

        /************************************************************************************************************
         ****************************************** Implementation functions ****************************************
         ************************************************************************************************************/

        /**
         * Sets the backdrop gradient
         * @param args {gradientClass: NAME_OF_CLASS, gradientHex: HEX_VALUES}
         * @private
         */

    }, {
        key: '_setGradient',
        value: function _setGradient(args) {
            if (args.gradientClass) {
                this.$el.addClass(args.gradientClass);
            }

            if (args.gradientHex) {
                this.$el.css('background', args.gradientHex);
            }
        }

        /**
         * Show the backdrop
         * @private
         */

    }, {
        key: '_show',
        value: function _show() {
            this.$el.addClass(_Enums2.default.CLASS.IS_VISIBLE_STATE);
        }

        /**
         * Hide the backdrop
         * @private
         */

    }, {
        key: '_hide',
        value: function _hide() {
            this.$el.removeClass(_Enums2.default.CLASS.IS_VISIBLE_STATE);
        }

        /**
         * Animates the backdrop gradient
         * @param args {gradientClass: NAME_OF_CLASS, gradientHex: HEX_VALUES}
         * @private
         */

    }, {
        key: '_animate',
        value: function _animate(args) {
            _Logger2.default.INFO(this.constructor.name, ':: _animate');

            if (args) {
                if (!this.$el.hasClass(args.gradientClass) && this.$el.css('background') != args.gradientHex) {
                    var $clone = this.$el.eq(0).clone();
                    var $parent = this.$el.parent();
                    var hexClass = args.gradientClass || '';

                    $clone.css('opacity', 1);

                    this.$el.addClass('is-fading-out').css('opacity', 1).delay(600).queue(function (next) {
                        $(this).remove();next();
                    });

                    $clone.prop('class', 'a-backdrop ' + _Enums2.default.CLASS.IS_VISIBLE_STATE + ' ' + hexClass).css('background', args.gradientHex || '');
                    $parent.prepend($clone);

                    this.$el = $clone;
                }
            }
        }
    }]);

    return ABackDrop;
}(_appeaserComponentBase2.default);

// Export this so we can pick it up and import in main.js


module.exports = ABackDrop;

},{"./../../../js/base/appeaser-component-base.js":39,"./../../../js/base/logger.js":44,"./../../../themes/stories/enums.js":54}],2:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _appeaserComponentBase = require('./../../../js/base/appeaser-component-base.js');

var _appeaserComponentBase2 = _interopRequireDefault(_appeaserComponentBase);

var _Logger = require('./../../../js/base/logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../../themes/stories/enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ABackgroundImage = function (_AppeaserComponentBas) {
    _inherits(ABackgroundImage, _AppeaserComponentBas);

    function ABackgroundImage() {
        _classCallCheck(this, ABackgroundImage);

        var _this = _possibleConstructorReturn(this, (ABackgroundImage.__proto__ || Object.getPrototypeOf(ABackgroundImage)).apply(this, arguments));

        _Logger2.default.INFO(_this.constructor.name, ':: Constructor');

        _this._jQueryScopeBinding();
        _this._declareConstants();
        _this.subscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady);
        return _this;
    }

    _createClass(ABackgroundImage, [{
        key: 'destroy',
        value: function destroy() {
            _Logger2.default.INFO(this.constructor.name, ':: Destructor');

            this._detachSubscribers();

            _get(ABackgroundImage.prototype.__proto__ || Object.getPrototypeOf(ABackgroundImage.prototype), 'destroy', this).call(this);
        }

        /************************************************************************************************************
         ******************************************** Internal functions ********************************************
         ************************************************************************************************************/

        /**
         * Declare class constants here
         * @private
         */

    }, {
        key: '_declareConstants',
        value: function _declareConstants() {
            this.DATA_BACKGROUND = 'data-background';
        }

        /**
         * Runs on DOM Ready
         * Should be used to attach DOM listeners etc
         * @private
         */

    }, {
        key: '_onDOMReady',
        value: function _onDOMReady() {

            _Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');

            this._attachSubscribers();
            this._setBackground();
        }

        /**
         * Scopes "this" to use the "this" of the outside function
         * Since JQuery creates a new function with a new "this"
         * Attach all functions that needs to be binded here
         * @private
         */

    }, {
        key: '_jQueryScopeBinding',
        value: function _jQueryScopeBinding() {
            this._onDOMReady = this._onDOMReady.bind(this);
        }

        /**
         * Attach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_attachSubscribers',
        value: function _attachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');

            this.subscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
        }

        /**
         * Detach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_detachSubscribers',
        value: function _detachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');

            this.unsubscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady);
            this.unsubscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
        }

        /**
         * At this point the framework is ready.
         * Add all publish events here (if any)
         * @private
         */

    }, {
        key: '_onFrameworkReady',
        value: function _onFrameworkReady() {}

        /************************************************************************************************************
         ****************************************** Implementation functions ****************************************
         ************************************************************************************************************/

    }, {
        key: '_setBackground',
        value: function _setBackground() {

            var url = this.$el.attr(this.DATA_BACKGROUND);

            if (url) {
                this.$el.css("background-image", "url(" + url + ")");
            }
        }
    }]);

    return ABackgroundImage;
}(_appeaserComponentBase2.default);

module.exports = ABackgroundImage;

},{"./../../../js/base/appeaser-component-base.js":39,"./../../../js/base/logger.js":44,"./../../../themes/stories/enums.js":54}],3:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _appeaserComponentBase = require('./../../../js/base/appeaser-component-base.js');

var _appeaserComponentBase2 = _interopRequireDefault(_appeaserComponentBase);

var _Logger = require('./../../../js/base/logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../../themes/stories/enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var AOverlay = function (_AppeaserComponentBas) {
    _inherits(AOverlay, _AppeaserComponentBas);

    /**
     * Constructor, will run before page loaded
     */
    function AOverlay() {
        _classCallCheck(this, AOverlay);

        var _this = _possibleConstructorReturn(this, (AOverlay.__proto__ || Object.getPrototypeOf(AOverlay)).apply(this, arguments));

        _Logger2.default.INFO(_this.constructor.name, ':: Constructor');

        _this._jQueryScopeBinding();
        _this._declareConstants();
        _this.subscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed
        return _this;
    }

    /**
     * Destructor, will run after page unload (or destroy)
     */


    _createClass(AOverlay, [{
        key: 'destroy',
        value: function destroy() {
            _Logger2.default.INFO(this.constructor.name, ':: Destructor');

            this._detachDOMListeners();
            this._detachSubscribers();

            _get(AOverlay.prototype.__proto__ || Object.getPrototypeOf(AOverlay.prototype), 'destroy', this).call(this);
        }

        /************************************************************************************************************
         ******************************************** Internal functions ********************************************
         ************************************************************************************************************/

        /**
         * Declare class constants here
         * @private
         */

    }, {
        key: '_declareConstants',
        value: function _declareConstants() {
            this.CLASS_IS_CLOSING = 'is-closing';
        }

        /**
         * Runs on DOM Ready
         * Should be used to attach DOM listeners etc
         * @private
         */

    }, {
        key: '_onDOMReady',
        value: function _onDOMReady() {
            _Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');

            this.rmClasses = null;
            this._attachSubscribers();
            this._attachDOMListeners();
        }

        /**
         * Scopes "this" to use the "this" of the outside function
         * Since JQuery creates a new function with a new "this"
         * Attach all functions that needs to be binded here
         * @private
         */

    }, {
        key: '_jQueryScopeBinding',
        value: function _jQueryScopeBinding() {
            this._onDOMReady = this._onDOMReady.bind(this);
            this._show = this._show.bind(this);
            this._hide = this._hide.bind(this);
            this._onClick = this._onClick.bind(this);
        }

        /**
         * Attach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_attachSubscribers',
        value: function _attachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');

            this.subscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
            this.subscribe(_Enums2.default.ACTION.SHOW_OVERLAY, this._show);
            this.subscribe(_Enums2.default.ACTION.HIDE_OVERLAY, this._hide);
        }

        /**
         * Detach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_detachSubscribers',
        value: function _detachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');

            this.unsubscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
            this.unsubscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
            this.unsubscribe(_Enums2.default.ACTION.SHOW_OVERLAY, this._show);
            this.unsubscribe(_Enums2.default.ACTION.HIDE_OVERLAY, this._hide);
        }

        /**
         * At this point the framework is ready.
         * Add all publish events here (if any)
         * @private
         */

    }, {
        key: '_onFrameworkReady',
        value: function _onFrameworkReady() {}

        /**
         * Attach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_attachDOMListeners',
        value: function _attachDOMListeners() {
            this.$el.on('click', this._onClick);
        }

        /**
         * Detach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_detachDOMListeners',
        value: function _detachDOMListeners() {
            this.$el.off('click', this._onClick);
        }

        /************************************************************************************************************
         ****************************************** Implementation functions ****************************************
         ************************************************************************************************************/

        /**
         *
         * @param options - not mandatory
         * @private
         */

    }, {
        key: '_show',
        value: function _show() {
            var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { keepScroll: false, scrollCompensation: 0 };

            // In case we delayed the closing for animation purposes we need to close hard now
            this.$el.removeClass(this.rmClasses).removeClass(this.CLASS_IS_CLOSING);
            clearTimeout(this.delayTimer);

            this.$el.addClass(_Enums2.default.CLASS.IS_VISIBLE_STATE);

            if (options.classes) {
                this.rmClasses = options.classes;
                this.$el.addClass(options.classes);
            }

            if (!options.keepScroll) {
                this.publish(_Enums2.default.ACTION.DISABLE_SCROLL, { scrollCompensation: options.scrollCompensation });
            }

            this.publish(_Enums2.default.EVENT.ON_OVERLAY_SHOW);
        }

        /**
         *
         * @private
         */

    }, {
        key: '_hide',
        value: function _hide() {
            var _this2 = this;

            var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};


            if (options.animating) {
                this.$el.addClass(this.CLASS_IS_CLOSING).removeClass(options.opacityClass);

                this.delayTimer = setTimeout(function () {
                    _this2.$el.removeClass(_this2.CLASS_IS_CLOSING);

                    _this2._close();
                }, options.delay);
            } else {
                this._close();
            }

            this.publish(_Enums2.default.ACTION.ENABLE_SCROLL);
            this.publish(_Enums2.default.EVENT.ON_OVERLAY_HIDE);
        }

        /**
         * Closes the overlay and removes any added classes
         * @private
         */

    }, {
        key: '_close',
        value: function _close() {
            this.$el.removeClass(_Enums2.default.CLASS.IS_VISIBLE_STATE);
            if (this.rmClasses) {
                this.$el.removeClass(this.rmClasses);
                this.rmClasses = null;
            }
        }

        /**
         *
         * @private
         */

    }, {
        key: '_onClick',
        value: function _onClick() {
            this.publish(_Enums2.default.EVENT.ON_OVERLAY_CLICKED);
        }
    }]);

    return AOverlay;
}(_appeaserComponentBase2.default);

// Export this so we can pick it up and import in main.js


module.exports = AOverlay;

},{"./../../../js/base/appeaser-component-base.js":39,"./../../../js/base/logger.js":44,"./../../../themes/stories/enums.js":54}],4:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _appeaserComponentBase = require('./../../../js/base/appeaser-component-base.js');

var _appeaserComponentBase2 = _interopRequireDefault(_appeaserComponentBase);

var _Logger = require('./../../../js/base/logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../../themes/stories/enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var APicture = function (_AppeaserComponentBas) {
	_inherits(APicture, _AppeaserComponentBas);

	/**
  * Constructor, will run before page loaded
  */
	function APicture() {
		_classCallCheck(this, APicture);

		var _this = _possibleConstructorReturn(this, (APicture.__proto__ || Object.getPrototypeOf(APicture)).apply(this, arguments));

		_Logger2.default.INFO(_this.constructor.name, ':: Constructor');

		_this._declareConstants();
		_this._jQueryScopeBinding();
		_this.subscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed
		return _this;
	}

	/**
  * Destructor, will run after page unload (or destroy)
  */


	_createClass(APicture, [{
		key: 'destroy',
		value: function destroy() {
			_Logger2.default.INFO(this.constructor.name, ':: Destructor');

			this._detachDOMListeners();
			this._detachSubscribers();

			_get(APicture.prototype.__proto__ || Object.getPrototypeOf(APicture.prototype), 'destroy', this).call(this);
		}

		/************************************************************************************************************
   ******************************************** Internal functions ********************************************
   ************************************************************************************************************/

		/**
   * Declare class constants here
   * @private
   */

	}, {
		key: '_declareConstants',
		value: function _declareConstants() {

			this.BACKGROUND = '.a-image';
		}

		/**
   * Runs on DOM Ready
   * Should be used to attach DOM listeners etc
   * @private
   */

	}, {
		key: '_onDOMReady',
		value: function _onDOMReady() {
			_Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');

			this._cacheDOMElements();
			this._attachSubscribers();
			this._attachDOMListeners();
			this._onImageLoad();
		}
	}, {
		key: '_cacheDOMElements',
		value: function _cacheDOMElements() {

			this.$background = this.$el.find(this.BACKGROUND);
		}

		/**
   * Scopes "this" to use the "this" of the outside function
   * Since JQuery creates a new function with a new "this"
   * Attach all functions that needs to be binded here
   * @private
   */

	}, {
		key: '_jQueryScopeBinding',
		value: function _jQueryScopeBinding() {
			this._onDOMReady = this._onDOMReady.bind(this);

			this._onImageLoad = this._onImageLoad.bind(this);
		}

		/**
   * Attach Event Subscribers within JS (Enums.js)
   * @private
   */

	}, {
		key: '_attachSubscribers',
		value: function _attachSubscribers() {
			_Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');

			this.subscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
		}

		/**
   * Detach Event Subscribers within JS (Enums.js)
   * @private
   */

	}, {
		key: '_detachSubscribers',
		value: function _detachSubscribers() {
			_Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');

			this.unsubscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
			this.unsubscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
		}

		/**
   * At this point the framework is ready.
   * Add all publish events here (if any)
   * @private
   */

	}, {
		key: '_onFrameworkReady',
		value: function _onFrameworkReady() {}

		/**
   * Attach EventListeners in the DOM
   * @private
   */

	}, {
		key: '_attachDOMListeners',
		value: function _attachDOMListeners() {
			this.$background.on("load", this._onImageLoad);
		}

		/**
   * Detach EventListeners in the DOM
   * @private
   */

	}, {
		key: '_detachDOMListeners',
		value: function _detachDOMListeners() {
			this.$background.off("load", this._onImageLoad);
		}

		/************************************************************************************************************
   ****************************************** Implementation functions ****************************************
   ************************************************************************************************************/

		/**
   * When the responsive image changes source we update to use the same in our background css
   * @private
      */

	}, {
		key: '_onImageLoad',
		value: function _onImageLoad() {

			var backgroundHolder = this.$el.data("background");

			if (backgroundHolder) {

				var imageUrl = this.$background.get(0).currentSrc || this.$background.attr("srcset") || this.$background.attr("src");
				this.$el.closest('.' + backgroundHolder).css("background-image", "url(" + imageUrl + ")");
			}
		}
	}]);

	return APicture;
}(_appeaserComponentBase2.default);

// Export this so we can pick it up and import in main.js


module.exports = APicture;

},{"./../../../js/base/appeaser-component-base.js":39,"./../../../js/base/logger.js":44,"./../../../themes/stories/enums.js":54}],5:[function(require,module,exports){
(function (global){
'use strict';

var _stickyComponent = require('./../js/base/sticky-component.js');

var _stickyComponent2 = _interopRequireDefault(_stickyComponent);

var _index = require('./atoms/a-overlay/index');

var _index2 = _interopRequireDefault(_index);

var _index3 = require('./atoms/a-backdrop/index');

var _index4 = _interopRequireDefault(_index3);

var _index5 = require('./atoms/a-background-image/index');

var _index6 = _interopRequireDefault(_index5);

var _index7 = require('./atoms/a-picture/index');

var _index8 = _interopRequireDefault(_index7);

var _index9 = require('./molecules/m-input/index');

var _index10 = _interopRequireDefault(_index9);

var _index11 = require('./molecules/m-link-toggle/index');

var _index12 = _interopRequireDefault(_index11);

var _index13 = require('./molecules/m-tablist/index');

var _index14 = _interopRequireDefault(_index13);

var _index15 = require('./molecules/m-swatches/index');

var _index16 = _interopRequireDefault(_index15);

var _index17 = require('./molecules/m-copy-link/index');

var _index18 = _interopRequireDefault(_index17);

var _index19 = require('./molecules/m-product-image/index');

var _index20 = _interopRequireDefault(_index19);

var _index21 = require('./molecules/m-radio-button-selector/index');

var _index22 = _interopRequireDefault(_index21);

var _index23 = require('./organisms/o-page/index');

var _index24 = _interopRequireDefault(_index23);

var _index25 = require('./organisms/o-page-content/index');

var _index26 = _interopRequireDefault(_index25);

var _index27 = require('./organisms/o-example/index');

var _index28 = _interopRequireDefault(_index27);

var _index29 = require('./organisms/o-remove-confirm/index');

var _index30 = _interopRequireDefault(_index29);

var _index31 = require('./organisms/o-address-box-edit/index');

var _index32 = _interopRequireDefault(_index31);

var _index33 = require('./organisms/o-form/index');

var _index34 = _interopRequireDefault(_index33);

var _index35 = require('./organisms/o-cart-discount-code/index');

var _index36 = _interopRequireDefault(_index35);

var _index37 = require('./organisms/o-filter-badges/index');

var _index38 = _interopRequireDefault(_index37);

var _index39 = require('./organisms/o-account-change-details/index');

var _index40 = _interopRequireDefault(_index39);

var _index41 = require('./organisms/o-grid-controller/index');

var _index42 = _interopRequireDefault(_index41);

var _index43 = require('./organisms/o-blog-hero/index');

var _index44 = _interopRequireDefault(_index43);

var _index45 = require('./organisms/o-map/index');

var _index46 = _interopRequireDefault(_index45);

var _index47 = require('./organisms/o-add-element/index');

var _index48 = _interopRequireDefault(_index47);

var _index49 = require('./organisms/o-payment-checkout/index');

var _index50 = _interopRequireDefault(_index49);

var _index51 = require('./organisms/o-olapic-gallery/index');

var _index52 = _interopRequireDefault(_index51);

var _index53 = require('./organisms/o-olapic-slider/index');

var _index54 = _interopRequireDefault(_index53);

var _index55 = require('./organisms/o-olapic-slide/index');

var _index56 = _interopRequireDefault(_index55);

var _index57 = require('./organisms/o-lightbox/index');

var _index58 = _interopRequireDefault(_index57);

var _index59 = require('./organisms/o-my-details/index');

var _index60 = _interopRequireDefault(_index59);

var _index61 = require('./organisms/o-address-box-add/index');

var _index62 = _interopRequireDefault(_index61);

var _index63 = require('./organisms/o-pickup-location/index');

var _index64 = _interopRequireDefault(_index63);

var _index65 = require('./organisms/o-home-delivery/index');

var _index66 = _interopRequireDefault(_index65);

var _index67 = require('./organisms/o-checkout/index');

var _index68 = _interopRequireDefault(_index67);

var _index69 = require('./organisms/o-lazy-load/index');

var _index70 = _interopRequireDefault(_index69);

var _index71 = require('./organisms/o-slider-cofs/index');

var _index72 = _interopRequireDefault(_index71);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Add common imports


// Project molecules


// Shared components utils
global.commonImports = {
    OPage: _index24.default,
    OPageContent: _index26.default,
    AOverlay: _index2.default,
    oExample: _index28.default,
    ABackDrop: _index4.default,
    MInput: _index10.default,
    MLinkToggle: _index12.default,
    ORemoveConfirm: _index30.default,
    OAddressBoxEdit: _index32.default,
    MTablist: _index14.default,
    MSwatches: _index16.default,
    MCopyLink: _index18.default,
    ABackgroundImage: _index6.default,
    MProductImage: _index20.default,
    OForm: _index34.default,
    APicture: _index8.default,
    OCartDiscountCode: _index36.default,
    MRadioButtonSelector: _index22.default,
    OFilterBadges: _index38.default,
    StickyComponent: _stickyComponent2.default,
    OAccountChangeDetails: _index40.default,
    OGridController: _index42.default,
    OBlogHero: _index44.default,
    OMap: _index46.default,
    OAddElement: _index48.default,
    OlapicGalleryBase: _index52.default,
    OOlapicStyleSlider: _index54.default,
    OOlapicStyleSlide: _index56.default,
    OPaymentCheckout: _index50.default,
    OLightbox: _index58.default,
    OMyDetails: _index60.default,
    OAddressBoxAdd: _index62.default,
    OPickupLocation: _index64.default,
    OHomeDelivery: _index66.default,
    OCheckout: _index68.default,
    OLazyLoad: _index70.default,
    OSliderCofs: _index72.default
};

/**
 * Log function for handlebars
 * @usage {{log data}}
 */


// Project organisms
// import each component (remember to register with ComponentLoader below)
Handlebars.registerHelper("log", function (message) {
    console.log(message);
});

/**
 * Stringify data for handlebars
 * @usage {{stringify data}}
 */
Handlebars.registerHelper("stringify", function (data) {
    return JSON.stringify(data);
});

Handlebars.registerHelper('if_eq', function (a, b, opts) {
    if (a == b) {
        return opts.fn(this);
    } else {
        return opts.inverse(this);
    }
});

/** toLowerCase **/
Handlebars.registerHelper('toLowerCase', function (text) {
    return text.toLowerCase();
});

/** toUpperCase **/
Handlebars.registerHelper('toUpperCase', function (text) {
    return text.toUpperCase();
});

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"./../js/base/sticky-component.js":47,"./atoms/a-backdrop/index":1,"./atoms/a-background-image/index":2,"./atoms/a-overlay/index":3,"./atoms/a-picture/index":4,"./molecules/m-copy-link/index":6,"./molecules/m-input/index":7,"./molecules/m-link-toggle/index":8,"./molecules/m-product-image/index":9,"./molecules/m-radio-button-selector/index":10,"./molecules/m-swatches/index":11,"./molecules/m-tablist/index":12,"./organisms/o-account-change-details/index":13,"./organisms/o-add-element/index":14,"./organisms/o-address-box-add/index":15,"./organisms/o-address-box-edit/index":16,"./organisms/o-blog-hero/index":17,"./organisms/o-cart-discount-code/index":18,"./organisms/o-checkout/index":19,"./organisms/o-example/index":20,"./organisms/o-filter-badges/index":21,"./organisms/o-form/index":22,"./organisms/o-grid-controller/index":23,"./organisms/o-home-delivery/index":24,"./organisms/o-lazy-load/index":25,"./organisms/o-lightbox/index":26,"./organisms/o-map/index":27,"./organisms/o-my-details/index":28,"./organisms/o-olapic-gallery/index":29,"./organisms/o-olapic-slide/index":30,"./organisms/o-olapic-slider/index":31,"./organisms/o-page-content/index":32,"./organisms/o-page/index":33,"./organisms/o-payment-checkout/index":34,"./organisms/o-pickup-location/index":35,"./organisms/o-remove-confirm/index":36,"./organisms/o-slider-cofs/index":37}],6:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _appeaserComponentBase = require('./../../../js/base/appeaser-component-base.js');

var _appeaserComponentBase2 = _interopRequireDefault(_appeaserComponentBase);

var _Logger = require('./../../../js/base/logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../../themes/stories/enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var MCopyLink = function (_AppeaserComponentBas) {
    _inherits(MCopyLink, _AppeaserComponentBas);

    /**
     * Constructor, will run before page loaded
     */
    function MCopyLink() {
        _classCallCheck(this, MCopyLink);

        var _this = _possibleConstructorReturn(this, (MCopyLink.__proto__ || Object.getPrototypeOf(MCopyLink)).apply(this, arguments));

        _Logger2.default.INFO(_this.constructor.name, ':: Constructor');

        _this._jQueryScopeBinding();
        _this._declareConstants();
        _this.subscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed
        return _this;
    }

    /**
     * Destructor, will run after page unload (or destroy)
     */


    _createClass(MCopyLink, [{
        key: 'destroy',
        value: function destroy() {
            _Logger2.default.INFO(this.constructor.name, ':: Destructor');

            this._detachDOMListeners();
            this._detachSubscribers();

            _get(MCopyLink.prototype.__proto__ || Object.getPrototypeOf(MCopyLink.prototype), 'destroy', this).call(this);
        }

        /************************************************************************************************************
         ******************************************** Internal functions ********************************************
         ************************************************************************************************************/

        /**
         * Declare class constants here
         * @private
         */

    }, {
        key: '_declareConstants',
        value: function _declareConstants() {
            this.SELECTOR_COPYLINK = '.js-copylink';
            this.SELECTOR_COPYTEXT = '.js-copytext';
            this.SELECTOR_TOOLTIP = '.js-tooltip';
        }

        /**
         * Runs on DOM Ready
         * Should be used to attach DOM listeners etc
         * @private
         */

    }, {
        key: '_onDOMReady',
        value: function _onDOMReady() {
            _Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');

            this.$copylink = this.$el.find(this.SELECTOR_COPYLINK);
            this.$copytext = this.$el.find(this.SELECTOR_COPYTEXT);
            this.$tooltip = this.$el.find(this.SELECTOR_TOOLTIP);

            this._attachSubscribers();
            this._attachDOMListeners();
        }

        /**
         * Scopes "this" to use the "this" of the outside function
         * Since JQuery creates a new function with a new "this"
         * Attach all functions that needs to be binded here
         * @private
         */

    }, {
        key: '_jQueryScopeBinding',
        value: function _jQueryScopeBinding() {
            this._onDOMReady = this._onDOMReady.bind(this);

            this._onCopyLinkClick = this._onCopyLinkClick.bind(this);
            this._onLinkMouseleave = this._onLinkMouseleave.bind(this);
        }

        /**
         * Attach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_attachSubscribers',
        value: function _attachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');

            this.subscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
        }

        /**
         * Detach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_detachSubscribers',
        value: function _detachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');

            this.unsubscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
            this.unsubscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
        }

        /**
         * At this point the framework is ready.
         * Add all publish events here (if any)
         * @private
         */

    }, {
        key: '_onFrameworkReady',
        value: function _onFrameworkReady() {}

        /**
         * Attach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_attachDOMListeners',
        value: function _attachDOMListeners() {
            this.$copylink.on('click', this._onCopyLinkClick);
            this.$copylink.on('mouseleave', this._onLinkMouseleave);
        }

        /**
         * Detach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_detachDOMListeners',
        value: function _detachDOMListeners() {
            this.$copylink.off('click', this._onCopyLinkClick);
            this.$copylink.off('mouseleave', this._onLinkMouseleave);
        }

        /************************************************************************************************************
         ****************************************** Implementation functions ****************************************
         ************************************************************************************************************/

        /**
         * Callback function onCopyLinkClick
         * @param e
         * @private
         */

    }, {
        key: '_onCopyLinkClick',
        value: function _onCopyLinkClick(e) {

            this.$copytext.select();

            try {
                var successful = document.execCommand('copy');
                var msg = successful ? 1 : 0;

                if (msg == 1) {
                    this.$tooltip.addClass('is-clicked');
                    this.$tooltip.attr('data-title', 'Link copied!');
                } else {
                    this.$tooltip.attr('data-title', 'Press Ctrl+C to copy');
                }
            } catch (err) {
                this.$tooltip.attr('data-title', 'Sorry, unable to copy');
            }
        }

        /**
         * Callback function onLinkMouseleave
         * @private
         */

    }, {
        key: '_onLinkMouseleave',
        value: function _onLinkMouseleave() {
            this.$tooltip.attr('data-title', 'Copy link to clipboard');
            this.$tooltip.removeClass('is-clicked');
        }
    }]);

    return MCopyLink;
}(_appeaserComponentBase2.default);

// Export this so we can pick it up and import in main.js


module.exports = MCopyLink;

},{"./../../../js/base/appeaser-component-base.js":39,"./../../../js/base/logger.js":44,"./../../../themes/stories/enums.js":54}],7:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _appeaserComponentBase = require('./../../../js/base/appeaser-component-base.js');

var _appeaserComponentBase2 = _interopRequireDefault(_appeaserComponentBase);

var _Logger = require('./../../../js/base/logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../../themes/stories/enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var MInput = function (_AppeaserComponentBas) {
    _inherits(MInput, _AppeaserComponentBas);

    /**
     * Constructor, will run before page loaded
     */
    function MInput() {
        _classCallCheck(this, MInput);

        var _this = _possibleConstructorReturn(this, (MInput.__proto__ || Object.getPrototypeOf(MInput)).apply(this, arguments));

        _Logger2.default.INFO(_this.constructor.name, ':: Constructor');

        _this._jQueryScopeBinding();
        _this._declareConstants();
        _this.subscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed
        return _this;
    }

    /**
     * Destructor, will run after page unload (or destroy)
     */


    _createClass(MInput, [{
        key: 'destroy',
        value: function destroy() {
            _Logger2.default.INFO(this.constructor.name, ':: Destructor');

            this._detachDOMListeners();
            this._detachSubscribers();

            _get(MInput.prototype.__proto__ || Object.getPrototypeOf(MInput.prototype), 'destroy', this).call(this);
        }

        /************************************************************************************************************
         ******************************************** Internal functions ********************************************
         ************************************************************************************************************/

        /**
         * Declare class constants here
         * @private
         */

    }, {
        key: '_declareConstants',
        value: function _declareConstants() {
            this.SELECTOR_INPUT = '.js-a-input';
            this.SELECTOR_PLACEHOLDER = '.a-label:last-child';
        }

        /**
         * Runs on DOM Ready
         * Should be used to attach DOM listeners etc
         * @private
         */

    }, {
        key: '_onDOMReady',
        value: function _onDOMReady() {
            _Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');

            this.$input = this.$el.find(this.SELECTOR_INPUT);
            this.$placeholder = this.$el.find(this.SELECTOR_PLACEHOLDER);
            this.placeholderVal = this.$placeholder.text();
            this.hasBeenFocused = false;

            if (this.$input.length && this.$input.val()) {
                this.$el.addClass(_Enums2.default.CLASS.IS_FILLED);
            }

            if (this.$el.data("validation-match-field")) {
                this.$matchField = $("#" + this.$el.data("validation-match-field") + " " + this.SELECTOR_INPUT);
            }

            this._attachSubscribers();
            this._attachDOMListeners();
        }

        /**
         * Scopes "this" to use the "this" of the outside function
         * Since JQuery creates a new function with a new "this"
         * Attach all functions that needs to be binded here
         * @private
         */

    }, {
        key: '_jQueryScopeBinding',
        value: function _jQueryScopeBinding() {
            this._onDOMReady = this._onDOMReady.bind(this);
            this._onFocus = this._onFocus.bind(this);
            this._onBlur = this._onBlur.bind(this);
            this._onInvalid = this._onInvalid.bind(this);
        }

        /**
         * Attach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_attachSubscribers',
        value: function _attachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');

            this.subscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
            this.subscribe(_Enums2.default.ACTION.SET_INPUT_ERROR_MESSAGE, this._onSetErrorMessage);
        }

        /**
         * Detach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_detachSubscribers',
        value: function _detachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');

            this.unsubscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
            this.unsubscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
            this.unsubscribe(_Enums2.default.ACTION.SET_INPUT_ERROR_MESSAGE, this._onSetErrorMessage);
        }

        /**
         * At this point the framework is ready.
         * Add all publish events here (if any)
         * @private
         */

    }, {
        key: '_onFrameworkReady',
        value: function _onFrameworkReady() {}

        /**
         * Attach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_attachDOMListeners',
        value: function _attachDOMListeners() {
            this.$input.on("focus", this._onFocus);
            this.$input.on("blur", this._onBlur);
            this.$input.on("invalid", this._onInvalid);
        }

        /**
         * Detach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_detachDOMListeners',
        value: function _detachDOMListeners() {
            this.$input.off("focus", this._onFocus);
            this.$input.off("blur", this._onBlur);
            this.$input.off("invalid", this._onInvalid);

            if (this.$matchField) {
                this.$matchField.off("blur", this._onBlur);
            }
        }

        /************************************************************************************************************
         ****************************************** Implementation functions ****************************************
         ************************************************************************************************************/

        /**
         * Callback for the event SET_INPUT_ERROR_MESSAGE
         * @param args Object with name of input and the error message {inputName: NAME_OF_INPUT, message: MESSAGE}
         * @private
         */

    }, {
        key: '_onSetErrorMessage',
        value: function _onSetErrorMessage(args) {
            if (this.$input.attr('name') == args.inputName) {
                this.$el.addClass(_Enums2.default.CLASS.HAS_ERROR);
                this._displayErrorMessage(args.message);
            }
        }

        /**
         * Callback for when input field is focused
         * @private
         */

    }, {
        key: '_onFocus',
        value: function _onFocus() {

            if (!this.hasBeenFocused) {
                //The first time a input for repeating password is focused, attach listener to the matching password input.
                if (this.$matchField) {
                    this.$matchField.on("blur", this._onBlur);
                }
                this.hasBeenFocused = true;
            }
            this.subscribe(_Enums2.default.EVENT.ON_KEY_DOWN, this._onKeyPress);
            this.$el.addClass(_Enums2.default.CLASS.IS_ACTIVE_STATE);
        }

        /**
         * Callback function when input field is blurred
         * @private
         */

    }, {
        key: '_onBlur',
        value: function _onBlur() {
            this.unsubscribe(_Enums2.default.EVENT.ON_KEY_DOWN, this._onKeyPress);
            if (!this.$input.val() && !this.$input.attr('readonly')) {
                this.$el.removeClass(_Enums2.default.CLASS.IS_ACTIVE_STATE);
                this.$el.removeClass(_Enums2.default.CLASS.IS_FILLED);
            } else if (this.$input.val()) {
                this.$el.removeClass(_Enums2.default.CLASS.IS_ACTIVE_STATE);
                this.$el.addClass(_Enums2.default.CLASS.IS_FILLED);
            }
            if (this._checkIfInvalid()) {
                this.$el.addClass(_Enums2.default.CLASS.HAS_ERROR);
            } else {
                this.$el.removeClass(_Enums2.default.CLASS.HAS_ERROR);
            }
        }
    }, {
        key: '_onInvalid',
        value: function _onInvalid(event) {
            event.preventDefault();

            if (this._checkIfInvalid()) {
                this.$el.addClass(_Enums2.default.CLASS.HAS_ERROR);
            } else {
                this.$el.removeClass(_Enums2.default.CLASS.HAS_ERROR);
            }
        }

        /**
         * Callback function when starts to type in an input field
         * @private
         */

    }, {
        key: '_onKeyPress',
        value: function _onKeyPress() {
            this.$el.removeClass(_Enums2.default.CLASS.HAS_ERROR);
        }

        /**
         * Checks if input has invalid state and if so provides the appropriate feedback message.
         * @return true if there is a validation error
         * @private
         */

    }, {
        key: '_checkIfInvalid',
        value: function _checkIfInvalid() {
            // REQUIRED
            if (this.$input[0].validity.valueMissing) {
                this._displayErrorMessage(this.$input.data('validation-required-text'));
            }
            // MATCH ANOTHER FIELD
            else if (this.$matchField && this.$input.val() != this.$matchField.val()) {
                    this.$input[0].setCustomValidity("error");
                    this._displayErrorMessage(this.$input.data('validation-match-field-text'));
                }
                // MATCH A REGEX PATTERN OR TYPE
                else if (this.$input[0].validity.patternMismatch || this.$input[0].validity.typeMismatch) {
                        this._displayErrorMessage(this.$input.data('validation-pattern-text'));
                    }
                    // MAX LENGTH
                    else if (this.$input[0].validity.tooLong) {
                            this._displayErrorMessage(this.$input.data('validation-maxlen-text'));
                        }
                        // MIN VALUE
                        else if (this.$input[0].validity.rangeUnderflow) {
                                this._displayErrorMessage(this.$input.data('validation-maxval-text'));
                            }
                            // MAX VALUE
                            else if (this.$input[0].validity.rangeOverflow) {
                                    this._displayErrorMessage(this.$input.data('validation-minval-text'));
                                }
                                // NO VALIDATION ERRORS FOUND
                                else {
                                        // Clear any custom validation
                                        this.$input[0].setCustomValidity("");

                                        this.$placeholder.html(this.placeholderVal);
                                        return false;
                                    }

            return true;
        }
    }, {
        key: '_displayErrorMessage',
        value: function _displayErrorMessage(errormessage) {
            this.$placeholder.html(errormessage);
        }
    }]);

    return MInput;
}(_appeaserComponentBase2.default);

// Export this so we can pick it up and import in main.js


module.exports = MInput;

},{"./../../../js/base/appeaser-component-base.js":39,"./../../../js/base/logger.js":44,"./../../../themes/stories/enums.js":54}],8:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _appeaserComponentBase = require('./../../../js/base/appeaser-component-base.js');

var _appeaserComponentBase2 = _interopRequireDefault(_appeaserComponentBase);

var _Logger = require('./../../../js/base/logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../../themes/stories/enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var MLinkToggle = function (_AppeaserComponentBas) {
  _inherits(MLinkToggle, _AppeaserComponentBas);

  /**
   * Constructor, will run before page loaded
   */
  function MLinkToggle() {
    _classCallCheck(this, MLinkToggle);

    var _this = _possibleConstructorReturn(this, (MLinkToggle.__proto__ || Object.getPrototypeOf(MLinkToggle)).apply(this, arguments));

    _Logger2.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();
    _this._declareConstants();
    _this.subscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed
    return _this;
  }

  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(MLinkToggle, [{
    key: 'destroy',
    value: function destroy() {
      _Logger2.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();
      this._detachSubscribers();

      _get(MLinkToggle.prototype.__proto__ || Object.getPrototypeOf(MLinkToggle.prototype), 'destroy', this).call(this);
    }

    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: '_declareConstants',
    value: function _declareConstants() {
      this.SELECTOR_LINK = '.js-a-link';
    }

    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: '_onDOMReady',
    value: function _onDOMReady() {
      _Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');

      this.$link = this.$el.find(this.SELECTOR_LINK);

      this._attachSubscribers();
      this._attachDOMListeners();
    }

    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: '_jQueryScopeBinding',
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._onClick = this._onClick.bind(this);
    }

    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: '_attachSubscribers',
    value: function _attachSubscribers() {
      _Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }

    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: '_detachSubscribers',
    value: function _detachSubscribers() {
      _Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
      this.unsubscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }

    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: '_onFrameworkReady',
    value: function _onFrameworkReady() {}

    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: '_attachDOMListeners',
    value: function _attachDOMListeners() {
      this.$link.on('click', this._onClick);
    }

    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: '_detachDOMListeners',
    value: function _detachDOMListeners() {
      this.$link.off('click', this._onClick);
    }

    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * @param event - standard JS event listener param.
     * @private
     */

  }, {
    key: '_onClick',
    value: function _onClick(event) {
      event.preventDefault();

      this.$el.toggleClass(_Enums2.default.CLASS.IS_VISIBLE_STATE);
    }
  }]);

  return MLinkToggle;
}(_appeaserComponentBase2.default);

// Export this so we can pick it up and import in main.js


module.exports = MLinkToggle;

},{"./../../../js/base/appeaser-component-base.js":39,"./../../../js/base/logger.js":44,"./../../../themes/stories/enums.js":54}],9:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _appeaserComponentBase = require('./../../../js/base/appeaser-component-base.js');

var _appeaserComponentBase2 = _interopRequireDefault(_appeaserComponentBase);

var _Logger = require('./../../../js/base/logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../../themes/stories/enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var MProductImage = function (_AppeaserComponentBas) {
  _inherits(MProductImage, _AppeaserComponentBas);

  /**
   * Constructor, will run before page loaded
   */
  function MProductImage() {
    _classCallCheck(this, MProductImage);

    var _this = _possibleConstructorReturn(this, (MProductImage.__proto__ || Object.getPrototypeOf(MProductImage)).apply(this, arguments));

    _Logger2.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();
    _this._declareConstants();
    _this.subscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed
    return _this;
  }

  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(MProductImage, [{
    key: 'destroy',
    value: function destroy() {
      _Logger2.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();
      this._detachSubscribers();

      _get(MProductImage.prototype.__proto__ || Object.getPrototypeOf(MProductImage.prototype), 'destroy', this).call(this);
    }

    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: '_declareConstants',
    value: function _declareConstants() {}

    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: '_onDOMReady',
    value: function _onDOMReady() {
      _Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._attachSubscribers();
      this._attachDOMListeners();
    }

    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: '_jQueryScopeBinding',
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._onClick = this._onClick.bind(this);
      this._onMouseDown = this._onMouseDown.bind(this);
      this._onMouseMove = this._onMouseMove.bind(this);
    }

    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: '_attachSubscribers',
    value: function _attachSubscribers() {
      _Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }

    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: '_detachSubscribers',
    value: function _detachSubscribers() {
      _Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
      this.unsubscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }

    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: '_onFrameworkReady',
    value: function _onFrameworkReady() {}

    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: '_attachDOMListeners',
    value: function _attachDOMListeners() {
      this.$el.on('mousedown', this._onMouseDown);
      this.$el.on('mousemove', this._onMouseMove);
      this.$el.on('mouseup', this._onClick);
    }

    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: '_detachDOMListeners',
    value: function _detachDOMListeners() {
      this.$el.off('mousedown', this._onMouseDown);
      this.$el.off('mousemove', this._onMouseMove);
      this.$el.off('mouseup', this._onClick);
    }

    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * On mouse down event
     * @private
     */

  }, {
    key: '_onMouseDown',
    value: function _onMouseDown() {
      this.isDragging = false;
    }

    /**
     * On mouse move listener to catch drag
     * @private
     */

  }, {
    key: '_onMouseMove',
    value: function _onMouseMove() {
      this.isDragging = true;
    }

    /**
     * @param event - standard JS event listener param.
     * @private
     */

  }, {
    key: '_onClick',
    value: function _onClick(event) {
      event.preventDefault();

      if (!this.isDragging) {
        this.publish(_Enums2.default.ACTION.SHOW_ZOOMED_IMAGE, this.$el.attr('data-zoom-image-src'));
      }
    }
  }]);

  return MProductImage;
}(_appeaserComponentBase2.default);

// Export this so we can pick it up and import in main.js


module.exports = MProductImage;

},{"./../../../js/base/appeaser-component-base.js":39,"./../../../js/base/logger.js":44,"./../../../themes/stories/enums.js":54}],10:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _appeaserComponentBase = require('./../../../js/base/appeaser-component-base.js');

var _appeaserComponentBase2 = _interopRequireDefault(_appeaserComponentBase);

var _Logger = require('./../../../js/base/logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../../themes/stories/enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var MRadioButtonSelector = function (_AppeaserComponentBas) {
    _inherits(MRadioButtonSelector, _AppeaserComponentBas);

    /**
     * Constructor, will run before page loaded
     */
    function MRadioButtonSelector() {
        _classCallCheck(this, MRadioButtonSelector);

        var _this = _possibleConstructorReturn(this, (MRadioButtonSelector.__proto__ || Object.getPrototypeOf(MRadioButtonSelector)).apply(this, arguments));

        _Logger2.default.INFO(_this.constructor.name, ':: Constructor');

        _this._jQueryScopeBinding();
        _this._declareConstants();
        _this.subscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed
        return _this;
    }

    /**
     * Destructor, will run after page unload (or destroy)
     */


    _createClass(MRadioButtonSelector, [{
        key: 'destroy',
        value: function destroy() {
            _Logger2.default.INFO(this.constructor.name, ':: Destructor');

            this._detachDOMListeners();
            this._detachSubscribers();

            _get(MRadioButtonSelector.prototype.__proto__ || Object.getPrototypeOf(MRadioButtonSelector.prototype), 'destroy', this).call(this);
        }

        /************************************************************************************************************
         ******************************************** Internal functions ********************************************
         ************************************************************************************************************/

        /**
         * Declare class constants here
         * @private
         */

    }, {
        key: '_declareConstants',
        value: function _declareConstants() {
            this.SHOW_ANIMATION_DELAY = 20;

            this.HIDE_ANIMATION_DELAY = 500;
            this.SELECTOR_RADIO_BUTTON = '.a-radio-button';
            this.SELECTOR_CUSTOM_RADIO_BUTTONS = '.custom-radio, .label-text';

            this.CLASS_SHOW = 'show';
            this.CLASS_FADE_IN = 'fade-in';
        }

        /**
         * Runs on DOM Ready
         * Should be used to attach DOM listeners etc
         * @private
         */

    }, {
        key: '_onDOMReady',
        value: function _onDOMReady() {
            _Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');

            this._cacheDOMElements();
            this._attachSubscribers();
            this._attachDOMListeners();
        }

        /**
         * Caching DOM elements for performance
         * @private
         */

    }, {
        key: '_cacheDOMElements',
        value: function _cacheDOMElements() {
            var _this2 = this;

            this.$radioButtons = this.$el.find(this.SELECTOR_CUSTOM_RADIO_BUTTONS);

            this.toggleElements = [];
            this.$radioButtons.each(function (index, element) {
                _this2.toggleElements.push($($(element).siblings(_this2.SELECTOR_RADIO_BUTTON).data("toggle")));
            });
        }

        /**
         * Scopes "this" to use the "this" of the outside function
         * Since JQuery creates a new function with a new "this"
         * Attach all functions that needs to be binded here
         * @private
         */

    }, {
        key: '_jQueryScopeBinding',
        value: function _jQueryScopeBinding() {
            this._onDOMReady = this._onDOMReady.bind(this);
            this._onRadioButtonClick = this._onRadioButtonClick.bind(this);
        }

        /**
         * Attach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_attachSubscribers',
        value: function _attachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');

            this.subscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
        }

        /**
         * Detach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_detachSubscribers',
        value: function _detachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');

            this.unsubscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
            this.unsubscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
        }

        /**
         * At this point the framework is ready.
         * Add all publish events here (if any)
         * @private
         */

    }, {
        key: '_onFrameworkReady',
        value: function _onFrameworkReady() {}

        /**
         * Attach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_attachDOMListeners',
        value: function _attachDOMListeners() {
            this.$radioButtons.on("click", this._onRadioButtonClick);
        }

        /**
         * Detach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_detachDOMListeners',
        value: function _detachDOMListeners() {
            this.$radioButtons.off("click", this._onRadioButtonClick);
        }

        /************************************************************************************************************
         ****************************************** Implementation functions ****************************************
         ************************************************************************************************************/

    }, {
        key: '_onRadioButtonClick',
        value: function _onRadioButtonClick(event) {
            var _this3 = this;

            var $target = $(event.currentTarget),
                $currentRadio = $target.siblings(this.SELECTOR_RADIO_BUTTON);

            if (!$currentRadio.prop('disabled')) {
                (function () {
                    _this3.toggleElements.forEach(function (element) {
                        element.removeClass(_this3.CLASS_SHOW).removeClass(_this3.CLASS_FADE_IN);
                    });

                    var $elementToShow = $($currentRadio.data("toggle"));
                    $elementToShow.addClass(_this3.CLASS_SHOW);
                    setTimeout(function () {
                        $elementToShow.addClass(_this3.CLASS_FADE_IN);
                    }, _this3.SHOW_ANIMATION_DELAY);
                })();
            }
        }
    }]);

    return MRadioButtonSelector;
}(_appeaserComponentBase2.default);

// Export this so we can pick it up and import in main.js


module.exports = MRadioButtonSelector;

},{"./../../../js/base/appeaser-component-base.js":39,"./../../../js/base/logger.js":44,"./../../../themes/stories/enums.js":54}],11:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _appeaserComponentBase = require('./../../../js/base/appeaser-component-base.js');

var _appeaserComponentBase2 = _interopRequireDefault(_appeaserComponentBase);

var _Logger = require('./../../../js/base/logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../../themes/stories/enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var MSwatches = function (_AppeaserComponentBas) {
  _inherits(MSwatches, _AppeaserComponentBas);

  /**
   * Constructor, will run before page loaded
   */
  function MSwatches() {
    _classCallCheck(this, MSwatches);

    var _this = _possibleConstructorReturn(this, (MSwatches.__proto__ || Object.getPrototypeOf(MSwatches)).apply(this, arguments));

    _Logger2.default.INFO(_this.constructor.name, ':: Constructor');

    _this._declareConstants();
    _this._jQueryScopeBinding();
    _this.subscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed
    return _this;
  }

  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(MSwatches, [{
    key: 'destroy',
    value: function destroy() {
      _Logger2.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();
      this._detachSubscribers();

      _get(MSwatches.prototype.__proto__ || Object.getPrototypeOf(MSwatches.prototype), 'destroy', this).call(this);
    }

    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: '_declareConstants',
    value: function _declareConstants() {

      //SELECTORS
      this.SELECTOR_SWATCH = '.js-swatch';
    }

    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: '_jQueryScopeBinding',
    value: function _jQueryScopeBinding() {

      this._onDOMReady = this._onDOMReady.bind(this);
      this._onSwatchClick = this._onSwatchClick.bind(this);
    }

    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: '_onDOMReady',
    value: function _onDOMReady() {
      _Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');

      //ELEMENTS
      this.$swatch = this.$el.find(this.SELECTOR_SWATCH);

      this._attachSubscribers();
      this._attachDOMListeners();
    }

    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: '_attachSubscribers',
    value: function _attachSubscribers() {
      _Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }

    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: '_detachSubscribers',
    value: function _detachSubscribers() {
      _Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
      this.unsubscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
    }

    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: '_onFrameworkReady',
    value: function _onFrameworkReady() {}

    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: '_attachDOMListeners',
    value: function _attachDOMListeners() {

      this.$swatch.on('click', this._onSwatchClick);
    }

    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: '_detachDOMListeners',
    value: function _detachDOMListeners() {

      this.$swatch.off('click', this._onSwatchClick);
    }

    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

  }, {
    key: '_onSwatchClick',
    value: function _onSwatchClick(e) {

      var $target = $(e.currentTarget);

      if (!$target.hasClass(_Enums2.default.CLASS.IS_DISABLED_STATE)) {

        this.$swatch.removeClass(_Enums2.default.CLASS.IS_SELECTED);
        $target.addClass(_Enums2.default.CLASS.IS_SELECTED);
      }
    }
  }]);

  return MSwatches;
}(_appeaserComponentBase2.default);

// Export this so we can pick it up and import in main.js


module.exports = MSwatches;

},{"./../../../js/base/appeaser-component-base.js":39,"./../../../js/base/logger.js":44,"./../../../themes/stories/enums.js":54}],12:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _appeaserComponentBase = require('./../../../js/base/appeaser-component-base.js');

var _appeaserComponentBase2 = _interopRequireDefault(_appeaserComponentBase);

var _Logger = require('./../../../js/base/logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../../themes/stories/enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var MTablist = function (_AppeaserComponentBas) {
  _inherits(MTablist, _AppeaserComponentBas);

  /**
   * Constructor, will run before page loaded
   */
  function MTablist() {
    _classCallCheck(this, MTablist);

    var _this = _possibleConstructorReturn(this, (MTablist.__proto__ || Object.getPrototypeOf(MTablist)).apply(this, arguments));

    _Logger2.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();
    _this._declareConstants();
    _this.subscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed
    return _this;
  }

  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(MTablist, [{
    key: 'destroy',
    value: function destroy() {
      _Logger2.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();
      this._detachSubscribers();

      _get(MTablist.prototype.__proto__ || Object.getPrototypeOf(MTablist.prototype), 'destroy', this).call(this);
    }

    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: '_declareConstants',
    value: function _declareConstants() {
      this.SELECTOR_TABLIST_CONTENT = '.tablist-content';
      this.SELECTOR_CONTENT = '.content';
      this.SELECTOR_TAB = 'li';
    }

    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: '_onDOMReady',
    value: function _onDOMReady() {
      _Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');
      var connectionID = this.$el.data('tablist-for');

      this.$listItems = this.$el.find(this.SELECTOR_TAB);
      this.$tablistContentBox = $(this.SELECTOR_TABLIST_CONTENT + '[data-content-for="' + connectionID + '"]');

      this._onPageloadShowActiveTabContent();

      this._attachSubscribers();
      this._attachDOMListeners();
    }

    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: '_jQueryScopeBinding',
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._onListItemClick = this._onListItemClick.bind(this);
    }

    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: '_attachSubscribers',
    value: function _attachSubscribers() {
      _Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }

    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: '_detachSubscribers',
    value: function _detachSubscribers() {
      _Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
      this.unsubscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
    }

    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: '_onFrameworkReady',
    value: function _onFrameworkReady() {}

    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: '_attachDOMListeners',
    value: function _attachDOMListeners() {
      this.$listItems.on('click', this._onListItemClick);
    }

    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: '_detachDOMListeners',
    value: function _detachDOMListeners() {
      this.$listItems.off('click', this._onListItemClick);
    }

    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * @param e - standard JS event param.
     * @private
     */

  }, {
    key: '_onListItemClick',
    value: function _onListItemClick(e) {
      e.preventDefault();

      var $currentTarget = $(e.currentTarget);
      this._toggleTabs($currentTarget.attr('data-toggle'));
      $currentTarget.addClass(_Enums2.default.CLASS.IS_ACTIVE_STATE);
    }

    /**
     * Shows active tabs
     * @param id
     * @private
     */

  }, {
    key: '_toggleTabs',
    value: function _toggleTabs(id) {
      this.$listItems.removeClass(_Enums2.default.CLASS.IS_ACTIVE_STATE);
      this.$tablistContentBox.find(this.SELECTOR_CONTENT).removeClass(_Enums2.default.CLASS.IS_ACTIVE_STATE);
      this.$tablistContentBox.find(id).addClass(_Enums2.default.CLASS.IS_ACTIVE_STATE);
    }

    /**
     * Sets active tablist on pageload based on browser url hashtag
     * @private
     */

  }, {
    key: '_onPageloadShowActiveTabContent',
    value: function _onPageloadShowActiveTabContent() {
      var hashTag = location.hash;
      if (hashTag !== "") {
        var $activeTab = this.$el.find(this.SELECTOR_TAB + '[data-toggle="' + hashTag + '"]');
        if ($activeTab.length) {
          this._toggleTabs(hashTag);
          $activeTab.addClass(_Enums2.default.CLASS.IS_ACTIVE_STATE);
        }
      }
    }
  }]);

  return MTablist;
}(_appeaserComponentBase2.default);

// Export this so we can pick it up and import in main.js


module.exports = MTablist;

},{"./../../../js/base/appeaser-component-base.js":39,"./../../../js/base/logger.js":44,"./../../../themes/stories/enums.js":54}],13:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _appeaserComponentBase = require('./../../../js/base/appeaser-component-base.js');

var _appeaserComponentBase2 = _interopRequireDefault(_appeaserComponentBase);

var _Logger = require('./../../../js/base/logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../../themes/stories/enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OAccountChangeDetails = function (_AppeaserComponentBas) {
    _inherits(OAccountChangeDetails, _AppeaserComponentBas);

    /**
     * Constructor, will run before page loaded
     */
    function OAccountChangeDetails() {
        _classCallCheck(this, OAccountChangeDetails);

        var _this = _possibleConstructorReturn(this, (OAccountChangeDetails.__proto__ || Object.getPrototypeOf(OAccountChangeDetails)).apply(this, arguments));

        _Logger2.default.INFO(_this.constructor.name, ':: Constructor');

        _this._jQueryScopeBinding();
        _this._declareConstants();
        _this.subscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed
        return _this;
    }

    /**
     * Destructor, will run after page unload (or destroy)
     */


    _createClass(OAccountChangeDetails, [{
        key: 'destroy',
        value: function destroy() {
            _Logger2.default.INFO(this.constructor.name, ':: Destructor');

            this._detachDOMListeners();
            this._detachSubscribers();

            _get(OAccountChangeDetails.prototype.__proto__ || Object.getPrototypeOf(OAccountChangeDetails.prototype), 'destroy', this).call(this);
        }

        /************************************************************************************************************
         ******************************************** Internal functions ********************************************
         ************************************************************************************************************/

        /**
         * Declare class constants here
         * @private
         */

    }, {
        key: '_declareConstants',
        value: function _declareConstants() {
            this.SELECTOR_CTA = '.m-cta';
            this.SELECTOR_CTA_TEXT = '.m-cta .text';
            this.SELECTOR_INPUT = '.m-input input';
            this.SELECTOR_EMAIL_FIELD = '.email-field .js-a-input';
            this.SELECTOR_PASSWORD_FIELD = '.password-field';

            this.CLASS_PASSWORD_FIELD = "is-hidden password-field";

            this.HANDLEBAR_SOURCE = "#m-input-password";
            this.HANDLEBAR_DATA = { label: "You need to enter your password in order to change your email address", placeholder: "Password" };
        }

        /**
         * Runs on DOM Ready
         * Should be used to attach DOM listeners etc
         * @private
         */

    }, {
        key: '_onDOMReady',
        value: function _onDOMReady() {
            _Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');

            this.$cta = this.$el.find(this.SELECTOR_CTA);
            this.$ctaTextSpan = this.$el.find(this.SELECTOR_CTA_TEXT);
            this.$input = this.$el.find(this.SELECTOR_INPUT);
            this.$emailInput = this.$el.find(this.SELECTOR_EMAIL_FIELD);
            this.$passwordInputTemplate = $(this.HANDLEBAR_SOURCE).html();

            this._attachDOMListeners();
            this._attachSubscribers();
            this._setEmailInputValue();
        }

        /**
         * Scopes "this" to use the "this" of the outside function
         * Since JQuery creates a new function with a new "this"
         * Attach all functions that needs to be binded here
         * @private
         */

    }, {
        key: '_jQueryScopeBinding',
        value: function _jQueryScopeBinding() {
            this._onInputInput = this._onInputInput.bind(this);
            this._onEmailInputChange = this._onEmailInputChange.bind(this);
        }

        /**
         * Attach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_attachSubscribers',
        value: function _attachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');

            this.subscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
        }

        /**
         * Detach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_detachSubscribers',
        value: function _detachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');

            this.unsubscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
            this.unsubscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
        }

        /**
         * At this point the framework is ready.
         * Add all publish events here (if any)
         * @private
         */

    }, {
        key: '_onFrameworkReady',
        value: function _onFrameworkReady() {}

        /**
         * Attach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_attachDOMListeners',
        value: function _attachDOMListeners() {
            this.$input.on('input', this._onInputInput);
            this.$emailInput.on('change', this._onEmailInputChange);
        }

        /**
         * Detach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_detachDOMListeners',
        value: function _detachDOMListeners() {
            this.$input.off('input', this._onInputInput);
            this.$emailInput.off('change', this._onEmailInputChange);
        }

        /************************************************************************************************************
         ****************************************** Implementation functions ****************************************
         ************************************************************************************************************/

        /**
         * onInputFocus callback function
         * @private
         */

    }, {
        key: '_onInputInput',
        value: function _onInputInput() {
            if (this.$cta.hasClass(_Enums2.default.CLASS.IS_HOVER_STATE)) {
                this.$cta.removeClass(_Enums2.default.CLASS.IS_HOVER_STATE);

                //The current solution for setting the CTA text is storing the text values in data-attributes.
                //This solution might need some improvement.
                this.$ctaTextSpan.html(this.$cta.data('default-state-text'));
            }
        }

        /**
         * Fills the email input with the signed in email address
         * @private
         */

    }, {
        key: '_setEmailInputValue',
        value: function _setEmailInputValue() {
            this.currentEmail = this.$emailInput.val();
        }

        /**
         * Callback when email is changed
         * @private
         */

    }, {
        key: '_onEmailInputChange',
        value: function _onEmailInputChange() {
            var _this2 = this;

            if (this.$emailInput.val() != this.currentEmail) {
                if (!this.emailChanged) {
                    var template = Handlebars.compile(this.$passwordInputTemplate);
                    $(template(this.HANDLEBAR_DATA)).insertAfter(this.$emailInput.parent()).addClass(this.CLASS_PASSWORD_FIELD).slideDown('fast');
                    this.scan({ pjax: true });
                    this.emailChanged = true;
                }
            } else {
                (function () {
                    var $passwordInput = _this2.$el.find(_this2.SELECTOR_PASSWORD_FIELD);
                    $passwordInput.slideUp("fast", function () {
                        $passwordInput.remove();
                    });
                    _this2.emailChanged = false;
                })();
            }
        }
    }]);

    return OAccountChangeDetails;
}(_appeaserComponentBase2.default);

// Export this so we can pick it up and import in main.js


module.exports = OAccountChangeDetails;

},{"./../../../js/base/appeaser-component-base.js":39,"./../../../js/base/logger.js":44,"./../../../themes/stories/enums.js":54}],14:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _appeaserComponentBase = require('./../../../js/base/appeaser-component-base.js');

var _appeaserComponentBase2 = _interopRequireDefault(_appeaserComponentBase);

var _Logger = require('./../../../js/base/logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../../themes/stories/enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OAddElement = function (_AppeaserComponentBas) {
    _inherits(OAddElement, _AppeaserComponentBas);

    /**
     * Constructor, will run before page loaded
     */
    function OAddElement() {
        _classCallCheck(this, OAddElement);

        var _this = _possibleConstructorReturn(this, (OAddElement.__proto__ || Object.getPrototypeOf(OAddElement)).apply(this, arguments));

        _Logger2.default.INFO(_this.constructor.name, ':: Constructor');

        _this._jQueryScopeBinding();
        _this._declareConstants();
        _this.subscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed
        return _this;
    }

    /**
     * Destructor, will run after page unload (or destroy)
     */


    _createClass(OAddElement, [{
        key: 'destroy',
        value: function destroy() {
            _Logger2.default.INFO(this.constructor.name, ':: Destructor');

            this._detachDOMListeners();
            this._detachSubscribers();

            _get(OAddElement.prototype.__proto__ || Object.getPrototypeOf(OAddElement.prototype), 'destroy', this).call(this);
        }

        /************************************************************************************************************
         ******************************************** Internal functions ********************************************
         ************************************************************************************************************/

        /**
         * Declare class constants here
         * @private
         */

    }, {
        key: '_declareConstants',
        value: function _declareConstants() {
            this.SELECTOR_ADD_ELEMENT_BUTTON = '.o-add-element-button';
            this.SELECTOR_EDIT_BLOCK = '.edit-block';
            this.SELECTOR_CANCEL = '.js-cancel';
            this.SELECTOR_INPUT = '.a-input';
        }

        /**
         * Runs on DOM Ready
         * Should be used to attach DOM listeners etc
         * @private
         */

    }, {
        key: '_onDOMReady',
        value: function _onDOMReady() {
            _Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');

            this.$addButton = this.$el.find(this.SELECTOR_ADD_ELEMENT_BUTTON);
            this.$editBlock = this.$el.find(this.SELECTOR_EDIT_BLOCK);
            this.$inputs = this.$el.find(this.SELECTOR_INPUT);

            this._attachSubscribers();
            this._attachDOMListeners();
        }

        /**
         * Scopes "this" to use the "this" of the outside function
         * Since JQuery creates a new function with a new "this"
         * Attach all functions that needs to be binded here
         * @private
         */

    }, {
        key: '_jQueryScopeBinding',
        value: function _jQueryScopeBinding() {
            this._onDOMReady = this._onDOMReady.bind(this);
            this._onClickAddNewElement = this._onClickAddNewElement.bind(this);
            this._onClickCancel = this._onClickCancel.bind(this);
            this._onRadioClicked = this._onRadioClicked.bind(this);
        }

        /**
         * Attach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_attachSubscribers',
        value: function _attachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');

            this.subscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
            this.subscribe(_Enums2.default.ACTION.HIDE_ADDRESS_BOX_ADD, this._close);
        }

        /**
         * Detach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_detachSubscribers',
        value: function _detachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');

            this.unsubscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
            this.unsubscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
            this.unsubscribe(_Enums2.default.ACTION.HIDE_ADDRESS_BOX_ADD, this._close);
        }

        /**
         * At this point the framework is ready.
         * Add all publish events here (if any)
         * @private
         */

    }, {
        key: '_onFrameworkReady',
        value: function _onFrameworkReady() {}

        /**
         * Attach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_attachDOMListeners',
        value: function _attachDOMListeners() {
            this.$addButton.on('click', this._onClickAddNewElement);
            this.$el.on('click', this.SELECTOR_CANCEL, this._onClickCancel);
        }

        /**
         * Detach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_detachDOMListeners',
        value: function _detachDOMListeners() {
            this.$addButton.on('click', this._onClickAddNewElement);
            this.$el.off('click', this.SELECTOR_CANCEL, this._onClickCancel);
        }

        /************************************************************************************************************
         ****************************************** Implementation functions ****************************************
         ************************************************************************************************************/

    }, {
        key: '_onClickAddNewElement',
        value: function _onClickAddNewElement(e) {
            this._open();
        }
    }, {
        key: '_onClickCancel',
        value: function _onClickCancel(e) {
            e.preventDefault();
            this._close();
        }
    }, {
        key: '_onRadioClicked',
        value: function _onRadioClicked() {
            if (!this.$addButton.prop("checked")) {
                this._close();
            }
        }
    }, {
        key: '_open',
        value: function _open() {

            this.$editBlock.slideDown().removeClass(_Enums2.default.CLASS.IS_HIDDEN_STATE).addClass(_Enums2.default.CLASS.IS_OPEN_STATE);

            this.$addButton.addClass(_Enums2.default.CLASS.IS_HIDDEN_STATE);
            this.$inputs.removeAttr('disabled');
        }
    }, {
        key: '_close',
        value: function _close() {

            this.$editBlock.slideUp().removeClass(_Enums2.default.CLASS.IS_OPEN_STATE).addClass(_Enums2.default.CLASS.IS_HIDDEN_STATE);

            this.$addButton.removeClass(_Enums2.default.CLASS.IS_HIDDEN_STATE);
            this.$inputs.attr('disabled', 'disabled');
        }
    }]);

    return OAddElement;
}(_appeaserComponentBase2.default);

// Export this so we can pick it up and import in main.js


module.exports = OAddElement;

},{"./../../../js/base/appeaser-component-base.js":39,"./../../../js/base/logger.js":44,"./../../../themes/stories/enums.js":54}],15:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _appeaserComponentBase = require('./../../../js/base/appeaser-component-base.js');

var _appeaserComponentBase2 = _interopRequireDefault(_appeaserComponentBase);

var _Logger = require('./../../../js/base/logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../../themes/stories/enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OAddressBoxAdd = function (_AppeaserComponentBas) {
    _inherits(OAddressBoxAdd, _AppeaserComponentBas);

    /**
     * Constructor, will run before page loaded
     */
    function OAddressBoxAdd() {
        _classCallCheck(this, OAddressBoxAdd);

        var _this = _possibleConstructorReturn(this, (OAddressBoxAdd.__proto__ || Object.getPrototypeOf(OAddressBoxAdd)).apply(this, arguments));

        _Logger2.default.INFO(_this.constructor.name, ':: Constructor');

        _this._jQueryScopeBinding();
        _this._declareConstants();
        _this.subscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed
        return _this;
    }

    /**
     * Destructor, will run after page unload (or destroy)
     */


    _createClass(OAddressBoxAdd, [{
        key: 'destroy',
        value: function destroy() {
            _Logger2.default.INFO(this.constructor.name, ':: Destructor');

            this._detachDOMListeners();
            this._detachSubscribers();

            _get(OAddressBoxAdd.prototype.__proto__ || Object.getPrototypeOf(OAddressBoxAdd.prototype), 'destroy', this).call(this);
        }

        /************************************************************************************************************
         ******************************************** Internal functions ********************************************
         ************************************************************************************************************/

        /**
         * Declare class constants here
         * @private
         */

    }, {
        key: '_declareConstants',
        value: function _declareConstants() {
            this.SELECTOR_ADD_ELEMENT_BUTTON = '.o-add-element-button';
            this.SELECTOR_CANCEL = '.js-cancel';
            this.SELECTOR_INPUT = '.a-input';
            this.SELECTOR_RADIO_BUTTON = '.a-radio-button';
        }

        /**
         * Runs on DOM Ready
         * Should be used to attach DOM listeners etc
         * @private
         */

    }, {
        key: '_onDOMReady',
        value: function _onDOMReady() {
            _Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');

            this.$addRadio = this.$el.find(this.SELECTOR_ADD_ELEMENT_BUTTON);
            this.$radioButtons = this.$el.parent().find(this.SELECTOR_RADIO_BUTTON);
            this.$editBlock = this.$el.next();
            this.$inputs = this.$editBlock.find(this.SELECTOR_INPUT);

            this._attachSubscribers();
            this._attachDOMListeners();
        }

        /**
         * Scopes "this" to use the "this" of the outside function
         * Since JQuery creates a new function with a new "this"
         * Attach all functions that needs to be binded here
         * @private
         */

    }, {
        key: '_jQueryScopeBinding',
        value: function _jQueryScopeBinding() {
            this._onDOMReady = this._onDOMReady.bind(this);
            this._onRadioChanged = this._onRadioChanged.bind(this);
        }

        /**
         * Attach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_attachSubscribers',
        value: function _attachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');

            this.subscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
        }

        /**
         * Detach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_detachSubscribers',
        value: function _detachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');

            this.unsubscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
            this.unsubscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
        }

        /**
         * At this point the framework is ready.
         * Add all publish events here (if any)
         * @private
         */

    }, {
        key: '_onFrameworkReady',
        value: function _onFrameworkReady() {}

        /**
         * Attach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_attachDOMListeners',
        value: function _attachDOMListeners() {
            this.$radioButtons.on('change', this._onRadioChanged);
        }

        /**
         * Detach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_detachDOMListeners',
        value: function _detachDOMListeners() {
            this.$radioButtons.off('change', this._onRadioChanged);
        }

        /************************************************************************************************************
         ****************************************** Implementation functions ****************************************
         ************************************************************************************************************/

    }, {
        key: '_onRadioChanged',
        value: function _onRadioChanged() {
            if (!this.$addRadio.prop("checked")) {
                this._close();
            } else {
                this._open();
            }
        }
    }, {
        key: '_open',
        value: function _open() {

            this.$editBlock.slideDown().removeClass(_Enums2.default.CLASS.IS_HIDDEN_STATE).addClass(_Enums2.default.CLASS.IS_OPEN_STATE);

            this.$addRadio.addClass(_Enums2.default.CLASS.IS_HIDDEN_STATE);
            this.$inputs.removeAttr('disabled');
        }
    }, {
        key: '_close',
        value: function _close() {

            this.$editBlock.slideUp().removeClass(_Enums2.default.CLASS.IS_OPEN_STATE).addClass(_Enums2.default.CLASS.IS_HIDDEN_STATE);

            this.$addRadio.removeClass(_Enums2.default.CLASS.IS_HIDDEN_STATE);
            this.$inputs.attr('disabled', 'disabled');
        }
    }]);

    return OAddressBoxAdd;
}(_appeaserComponentBase2.default);

// Export this so we can pick it up and import in main.js


module.exports = OAddressBoxAdd;

},{"./../../../js/base/appeaser-component-base.js":39,"./../../../js/base/logger.js":44,"./../../../themes/stories/enums.js":54}],16:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _appeaserComponentBase = require('./../../../js/base/appeaser-component-base.js');

var _appeaserComponentBase2 = _interopRequireDefault(_appeaserComponentBase);

var _Logger = require('./../../../js/base/logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../../themes/stories/enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OAddressBoxEdit = function (_AppeaserComponentBas) {
	_inherits(OAddressBoxEdit, _AppeaserComponentBas);

	/**
  * Constructor, will run before page loaded
  */
	function OAddressBoxEdit() {
		_classCallCheck(this, OAddressBoxEdit);

		var _this = _possibleConstructorReturn(this, (OAddressBoxEdit.__proto__ || Object.getPrototypeOf(OAddressBoxEdit)).apply(this, arguments));

		_Logger2.default.INFO(_this.constructor.name, ':: Constructor');

		_this._declareConstants();
		_this._jQueryScopeBinding();
		_this.subscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed
		return _this;
	}

	/**
  * Destructor, will run after page unload (or destroy)
  */


	_createClass(OAddressBoxEdit, [{
		key: 'destroy',
		value: function destroy() {
			_Logger2.default.INFO(this.constructor.name, ':: Destructor');

			this._detachDOMListeners();
			this._detachSubscribers();

			_get(OAddressBoxEdit.prototype.__proto__ || Object.getPrototypeOf(OAddressBoxEdit.prototype), 'destroy', this).call(this);
		}

		/************************************************************************************************************
   ******************************************** Internal functions ********************************************
   ************************************************************************************************************/

		/**
   * Declare class constants here
   * @private
   */

	}, {
		key: '_declareConstants',
		value: function _declareConstants() {
			this.SELECTOR_ADDRESS_EDIT = '.js-address-edit';
			this.SELECTOR_CANCEL_BUTTON = '.js-cancel';
			this.SELECTOR_INPUT = '.m-input input';
			this.SELECTOR_CTA = '.m-cta';
			this.SELECTOR_CTA_TEXT = '.m-cta .text';
			this.SELECTOR_ADDRESS_FORM = '.address-form';
		}

		/**
   * Runs on DOM Ready
   * Should be used to attach DOM listeners etc
   * @private
   */

	}, {
		key: '_onDOMReady',
		value: function _onDOMReady() {
			_Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');

			this.$editBtn = this.$el.find(this.SELECTOR_ADDRESS_EDIT);
			this.$cancelBtn = this.$el.find(this.SELECTOR_CANCEL_BUTTON);
			this.$input = this.$el.find(this.SELECTOR_INPUT);
			this.$cta = this.$el.find(this.SELECTOR_CTA);
			this.$ctaTextSpan = this.$el.find(this.SELECTOR_CTA_TEXT);
			this.$addressForm = this.$el.find(this.SELECTOR_ADDRESS_FORM);

			this.isEditing = false;

			this._attachSubscribers();
			this._attachDOMListeners();
		}

		/**
   * Scopes "this" to use the "this" of the outside function
   * Since JQuery creates a new function with a new "this"
   * Attach all functions that needs to be binded here
   * @private
   */

	}, {
		key: '_jQueryScopeBinding',
		value: function _jQueryScopeBinding() {
			this._onDOMReady = this._onDOMReady.bind(this);

			this._onEditBtnClick = this._onEditBtnClick.bind(this);
			this._onCancelBtnClick = this._onCancelBtnClick.bind(this);
			this._onInputInput = this._onInputInput.bind(this);
		}

		/**
   * Attach Event Subscribers within JS (Enums.js)
   * @private
   */

	}, {
		key: '_attachSubscribers',
		value: function _attachSubscribers() {
			_Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');

			this.subscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
		}

		/**
   * Detach Event Subscribers within JS (Enums.js)
   * @private
   */

	}, {
		key: '_detachSubscribers',
		value: function _detachSubscribers() {
			_Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');

			this.unsubscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
			this.unsubscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
		}

		/**
   * At this point the framework is ready.
   * Add all publish events here (if any)
   * @private
   */

	}, {
		key: '_onFrameworkReady',
		value: function _onFrameworkReady() {}

		/**
   * Attach EventListeners in the DOM
   * @private
   */

	}, {
		key: '_attachDOMListeners',
		value: function _attachDOMListeners() {
			this.$editBtn.on('click', this._onEditBtnClick);
			this.$cancelBtn.on('click', this._onCancelBtnClick);
			this.$input.on('input', this._onInputInput);
		}

		/**
   * Detach EventListeners in the DOM
   * @private
   */

	}, {
		key: '_detachDOMListeners',
		value: function _detachDOMListeners() {
			this.$editBtn.off('click', this._onEditBtnClick);
			this.$cancelBtn.off('click', this._onCancelBtnClick);
			this.$input.off('input', this._onInputInput);
		}

		/************************************************************************************************************
   ****************************************** Implementation functions ****************************************
   ************************************************************************************************************/

		/**
   * onInputFocus Callback Function
   * @private
   */

	}, {
		key: '_onInputInput',
		value: function _onInputInput() {
			if (this.$cta.hasClass(_Enums2.default.CLASS.IS_HOVER_STATE)) {
				this.$cta.removeClass(_Enums2.default.CLASS.IS_HOVER_STATE);

				//The current solution for setting the CTA text is storing the text values in data-attributes.
				//This solution might need some improvement.
				this.$ctaTextSpan.html(this.$cta.data('default-state-text'));
			}
		}

		/**
   * onEditAddress Callback Function
   * @param e
   * @private
   */

	}, {
		key: '_onEditBtnClick',
		value: function _onEditBtnClick(e) {
			e.preventDefault();
			if (!this.isEditing) {
				this.$el.wrap("<div class='edit-block is-open'></div>");
				this.isEditing = true;
				this.$addressForm.slideToggle();
			} else {
				this._onCancelBtnClick(e);
			}
		}
	}, {
		key: '_onCancelBtnClick',
		value: function _onCancelBtnClick(e) {
			e.preventDefault();

			if (this.isEditing) {
				this.$el.unwrap();
				this.$addressForm.slideToggle();
				this.isEditing = false;
			}
		}
	}]);

	return OAddressBoxEdit;
}(_appeaserComponentBase2.default);

// Export this so we can pick it up and import in main.js


module.exports = OAddressBoxEdit;

},{"./../../../js/base/appeaser-component-base.js":39,"./../../../js/base/logger.js":44,"./../../../themes/stories/enums.js":54}],17:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _appeaserComponentBase = require('./../../../js/base/appeaser-component-base.js');

var _appeaserComponentBase2 = _interopRequireDefault(_appeaserComponentBase);

var _Logger = require('./../../../js/base/logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../../themes/stories/enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OBlogHero = function (_AppeaserComponentBas) {
  _inherits(OBlogHero, _AppeaserComponentBas);

  /**
   * Constructor, will run before page loaded
   */
  function OBlogHero() {
    _classCallCheck(this, OBlogHero);

    var _this = _possibleConstructorReturn(this, (OBlogHero.__proto__ || Object.getPrototypeOf(OBlogHero)).apply(this, arguments));

    _Logger2.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();
    _this._declareConstants();
    _this.subscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed
    return _this;
  }

  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OBlogHero, [{
    key: 'destroy',
    value: function destroy() {
      _Logger2.default.INFO(this.constructor.name, ':: Destructor');

      this._detachMQHandlers();
      this._detachDOMListeners();
      this._detachSubscribers();

      _get(OBlogHero.prototype.__proto__ || Object.getPrototypeOf(OBlogHero.prototype), 'destroy', this).call(this);
    }

    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: '_declareConstants',
    value: function _declareConstants() {
      this.SELECTOR_SLIDER = '.slider';

      this.CLASS_SLICK_ARROW_PREV = 'slick-arrow slick-prev';
      this.CLASS_SLICK_ARROW_NEXT = 'slick-arrow slick-next';
    }

    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: '_onDOMReady',
    value: function _onDOMReady() {
      _Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();

      this._initSlider();

      this._attachSubscribers();
      this._attachDOMListeners();
      this._attachMQHandlers();
    }
  }, {
    key: '_cacheDOMElements',
    value: function _cacheDOMElements() {
      this.$slider = this.$el.find(this.SELECTOR_SLIDER);
    }

    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: '_jQueryScopeBinding',
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
    }

    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: '_attachSubscribers',
    value: function _attachSubscribers() {
      _Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
      this.subscribe(_Enums2.default.EVENT.ON_PAGE_CONTENT_SHOW, this._refresh);
    }

    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: '_detachSubscribers',
    value: function _detachSubscribers() {
      _Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
      this.unsubscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
      this.unsubscribe(_Enums2.default.EVENT.ON_PAGE_CONTENT_SHOW, this._refresh);
    }

    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: '_onFrameworkReady',
    value: function _onFrameworkReady() {}

    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: '_attachDOMListeners',
    value: function _attachDOMListeners() {}

    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: '_detachDOMListeners',
    value: function _detachDOMListeners() {}

    /**
     * Attach media query handlers
     * @private
     */

  }, {
    key: '_attachMQHandlers',
    value: function _attachMQHandlers() {}

    /**
     * Detach media query handlers
     * @private
     */

  }, {
    key: '_detachMQHandlers',
    value: function _detachMQHandlers() {}

    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Initializes the slider
     * @private
     */

  }, {
    key: '_initSlider',
    value: function _initSlider() {
      this.$slider.slick({
        prevArrow: "<div class='" + this.CLASS_SLICK_ARROW_PREV + "'></div>",
        nextArrow: "<div class='" + this.CLASS_SLICK_ARROW_NEXT + "'></div>",
        speed: 300
      });

      this.slick = this.$slider.slick('getSlick');
    }
  }]);

  return OBlogHero;
}(_appeaserComponentBase2.default);

// Export this so we can pick it up and import in main.js


module.exports = OBlogHero;

},{"./../../../js/base/appeaser-component-base.js":39,"./../../../js/base/logger.js":44,"./../../../themes/stories/enums.js":54}],18:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _appeaserComponentBase = require('./../../../js/base/appeaser-component-base.js');

var _appeaserComponentBase2 = _interopRequireDefault(_appeaserComponentBase);

var _Logger = require('./../../../js/base/logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../../themes/stories/enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OCartDiscountCode = function (_AppeaserComponentBas) {
  _inherits(OCartDiscountCode, _AppeaserComponentBas);

  /**
   * Constructor, will run before page loaded
   */
  function OCartDiscountCode() {
    _classCallCheck(this, OCartDiscountCode);

    var _this = _possibleConstructorReturn(this, (OCartDiscountCode.__proto__ || Object.getPrototypeOf(OCartDiscountCode)).apply(this, arguments));

    _Logger2.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();
    _this._declareConstants();
    _this.subscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed
    return _this;
  }

  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OCartDiscountCode, [{
    key: 'destroy',
    value: function destroy() {
      _Logger2.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();
      this._detachSubscribers();
      _get(OCartDiscountCode.prototype.__proto__ || Object.getPrototypeOf(OCartDiscountCode.prototype), 'destroy', this).call(this);
    }

    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: '_declareConstants',
    value: function _declareConstants() {
      this.CLASS_HAS_ERROR = 'has-error';
      this.CLASS_HAS_DISCOUNT = 'has-discount';
      this.SELECTOR_TITLE = '.title';
      this.SELECTOR_REMOVE = '.remove';
      this.SELECTOR_M_INPUT = '.m-input';
      this.SELECTOR_INPUT = '.a-input';
      this.SELECTOR_DISCOUNT_CODE = '.discount-code .added-code';
      this.SELECTOR_CANCEL = '.cancel';
    }

    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: '_onDOMReady',
    value: function _onDOMReady() {
      _Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');

      this.$openClose = this.$el.find(this.SELECTOR_TITLE + "," + this.SELECTOR_CANCEL);
      this.$remove = this.$el.find(this.SELECTOR_REMOVE);
      this.$mInput = this.$el.find(this.SELECTOR_M_INPUT);
      this.$input = this.$el.find(this.SELECTOR_INPUT);
      this.$discountCode = this.$el.find(this.SELECTOR_DISCOUNT_CODE);

      this._attachSubscribers();
      this._attachDOMListeners();
    }

    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: '_jQueryScopeBinding',
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);

      this._toggleOpenClose = this._toggleOpenClose.bind(this);
      this._remove = this._remove.bind(this);
    }

    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: '_attachSubscribers',
    value: function _attachSubscribers() {
      _Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
      this.subscribe(_Enums2.default.EVENT.ON_VOUCHER_CODE_ADDED, this._onVoucherCodeAdded);
    }

    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: '_detachSubscribers',
    value: function _detachSubscribers() {
      _Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
      this.unsubscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
      this.unsubscribe(_Enums2.default.EVENT.ON_VOUCHER_CODE_ADDED, this._onVoucherCodeAdded);
    }

    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: '_onFrameworkReady',
    value: function _onFrameworkReady() {}

    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: '_attachDOMListeners',
    value: function _attachDOMListeners() {
    	// [customizing-jw] 프로모션클릭이벤트 제거
    	//this.$openClose.on('click', this._toggleOpenClose);
    	//this.$remove.on('click', this._remove);
    }

    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: '_detachDOMListeners',
    value: function _detachDOMListeners() {
      this.$openClose.off('click', this._toggleOpenClose);
      this.$remove.off('click', this._remove);
    }

    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * On removal of voucher code
     * @param e
     * @private
     */

  }, {
    key: '_remove',
    value: function _remove(e) {
      e.preventDefault();
      this.$mInput.removeClass(this.CLASS_HAS_ERROR);
      this.$el.removeClass(this.CLASS_HAS_DISCOUNT).removeClass(_Enums2.default.CLASS.IS_ACTIVE_STATE);
      this.$input.val('').removeClass(_Enums2.default.CLASS.IS_FILLED);
    }

    /**
     * On addition of valid voucher code
     * @param code
     * @private
     */

  }, {
    key: '_onVoucherCodeAdded',
    value: function _onVoucherCodeAdded(code) {
      this.$mInput.removeClass(_Enums2.default.CLASS.HAS_ERROR);
      this.$discountCode.text(code);
      this.$el.addClass(this.CLASS_HAS_DISCOUNT);
    }

    /**
     * Toggles the visibility of the voucher code form
     * @private
     */

  }, {
    key: '_toggleOpenClose',
    value: function _toggleOpenClose() {
      this.$el.toggleClass(_Enums2.default.CLASS.IS_ACTIVE_STATE);
    }
  }]);

  return OCartDiscountCode;
}(_appeaserComponentBase2.default);

// Export this so we can pick it up and import in main.js


module.exports = OCartDiscountCode;

},{"./../../../js/base/appeaser-component-base.js":39,"./../../../js/base/logger.js":44,"./../../../themes/stories/enums.js":54}],19:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _appeaserComponentBase = require('./../../../js/base/appeaser-component-base.js');

var _appeaserComponentBase2 = _interopRequireDefault(_appeaserComponentBase);

var _Logger = require('./../../../js/base/logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../../themes/stories/enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OCheckout = function (_AppeaserComponentBas) {
    _inherits(OCheckout, _AppeaserComponentBas);

    /**
     * Constructor, will run before page loaded
     */
    function OCheckout() {

    	_classCallCheck(this, OCheckout);

        var _this = _possibleConstructorReturn(this, (OCheckout.__proto__ || Object.getPrototypeOf(OCheckout)).apply(this, arguments));

        _Logger2.default.INFO(_this.constructor.name, ':: Constructor');

        _this._jQueryScopeBinding();
        _this._declareConstants();
        _this.subscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed
        return _this;
    }

    /**
     * Destructor, will run after page unload (or destroy)
     */


    _createClass(OCheckout, [{
        key: 'destroy',
        value: function destroy() {
            _Logger2.default.INFO(this.constructor.name, ':: Destructor');

            this._detachDOMListeners();
            this._detachSubscribers();

            _get(OCheckout.prototype.__proto__ || Object.getPrototypeOf(OCheckout.prototype), 'destroy', this).call(this);
        }

        /************************************************************************************************************
         ******************************************** Internal functions ********************************************
         ************************************************************************************************************/

        /**
         * Declare class constants here
         * @private
         */

    }, {
        key: '_declareConstants',
        value: function _declareConstants() {
            //SELECTORS
            this.SELECTOR_EDIT_LINK = '.edit';
            this.SELECTOR_CANCEL_LINK = '.cancel';
            this.SELECTOR_SECTION = '.section';
            this.SELECTOR_SCROLL_ELEMENT = 'body,html';
            this.SELECTOR_ACTIVE_SECTION = '.section:not(.' + _Enums2.default.CLASS.IS_DISABLED_STATE + '):not(.' + _Enums2.default.CLASS.IS_CLOSED_STATE + ')';

            this.CLASS_IS_CLOSED = 'is-closed';
            this.CLASS_IS_DISABLED = 'is-disabled';
            this.CLASS_IS_EDITABLE = 'is-editable';

            this.SCROLL_DURATION = 500;
            this.SCROLL_DELAY = 0;
        }

        /**
         * Runs on DOM Ready
         * Should be used to attach DOM listeners etc
         * @private
         */

    }, {
        key: '_onDOMReady',
        value: function _onDOMReady() {
            _Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');
            this._cacheDOMElements();
            this._attachSubscribers();
            this._attachDOMListeners();
        }

        /**
         * Caching DOM elements for performance
         * @private
         */

    }, {
        key: '_cacheDOMElements',
        value: function _cacheDOMElements() {
            this.$editLink = this.$el.find(this.SELECTOR_EDIT_LINK);
            this.$cancelLink = this.$el.find(this.SELECTOR_CANCEL_LINK);
            this.$scrollElement = $(this.SELECTOR_SCROLL_ELEMENT);
        }

        /**
         * Scopes "this" to use the "this" of the outside function
         * Since JQuery creates a new function with a new "this"
         * Attach all functions that needs to be binded here
         * @private
         */

    }, {
        key: '_jQueryScopeBinding',
        value: function _jQueryScopeBinding() {
            this._onDOMReady = this._onDOMReady.bind(this);
            this._onEditClick = this._onEditClick.bind(this);
            this._onCancelClick = this._onCancelClick.bind(this);
        }

        /**
         * Attach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_attachSubscribers',
        value: function _attachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');

            this.subscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
            this.subscribe(_Enums2.default.EVENT.ON_CHECKOUT_SECTION_COMPLETED, this._onSectionCompleted);
        }

        /**
         * Detach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_detachSubscribers',
        value: function _detachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');

            this.unsubscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
            this.unsubscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
            this.unsubscribe(_Enums2.default.EVENT.ON_CHECKOUT_SECTION_COMPLETED, this._onSectionCompleted);
        }

        /**
         * At this point the framework is ready.
         * Add all publish events here (if any)
         * @private
         */

    }, {
        key: '_onFrameworkReady',
        value: function _onFrameworkReady() {}

        /**
         * Attach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_attachDOMListeners',
        value: function _attachDOMListeners() {
            this.$editLink.on('click', this._onEditClick);
            this.$cancelLink.on('click', this._onCancelClick);
        }

        /**
         * Detach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_detachDOMListeners',
        value: function _detachDOMListeners() {
            this.$editLink.off('click', this._onEditClick);
            this.$cancelLink.off('click', this._onCancelClick);
        }

        /************************************************************************************************************
         ****************************************** Implementation functions ****************************************
         ************************************************************************************************************/

        /**
         * Edit link callback
         * Opens edit mode
         * @param event
         * @private
         */

    }, {
        key: '_onEditClick',
        value: function _onEditClick(e) {
            e.preventDefault();
            var $currentTarget = $(e.currentTarget),
                $currentSection = $currentTarget.closest(this.SELECTOR_SECTION);

            $currentSection.removeClass(this.CLASS_IS_CLOSED).removeClass(this.CLASS_IS_DISABLED).addClass(this.CLASS_IS_EDITABLE).nextAll(this.SELECTOR_SECTION).removeClass(this.CLASS_IS_CLOSED).removeClass(this.CLASS_IS_EDITABLE).addClass(this.CLASS_IS_DISABLED);

            this.publish(_Enums2.default.EVENT.ON_CHECKOUT_SECTION_EDIT, $currentSection);
        }

        /**
         * Cancel link callback
         * Closes edit mode
         * @param e
         * @private
         */

    }, {
        key: '_onCancelClick',
        value: function _onCancelClick(e) {
            e.preventDefault();
            var $currentTarget = $(e.currentTarget),
                $currentSection = $currentTarget.closest(this.SELECTOR_SECTION),
                $nextSection = $currentSection.next(this.SELECTOR_SECTION);

            $currentSection.removeClass(this.CLASS_IS_DISABLED).removeClass(this.CLASS_IS_EDITABLE).addClass(this.CLASS_IS_CLOSED);
            $nextSection.removeClass(this.CLASS_IS_DISABLED);

            this.publish(_Enums2.default.EVENT.ON_CHECKOUT_SECTION_CANCEL, $currentSection);
        }

        /**
         * On section completed
         * @private
         */

    }, {
        key: '_onSectionCompleted',
        value: function _onSectionCompleted() {
            var $activeSection = this.$el.find(this.SELECTOR_ACTIVE_SECTION),
                $nextSection = $activeSection.next();

            $activeSection.addClass(_Enums2.default.CLASS.IS_CLOSED_STATE);

            $nextSection.removeClass(_Enums2.default.CLASS.IS_DISABLED_STATE);

            this._scrollToSection($nextSection);
        }

        /**
         * Scrolls to a section.
         * @param $section
         * @private
         */

    }, {
        key: '_scrollToSection',
        value: function _scrollToSection($section) {
            this.$scrollElement.delay(this.SCROLL_DELAY).animate({ scrollTop: $section.offset().top - this._getCurrentScrollOffset() }, this.SCROLL_DURATION);
        }

        /**
         * @returns {number} The correct scroll offset depending on breakpoint
         * @private
         */

    }, {
        key: '_getCurrentScrollOffset',
        value: function _getCurrentScrollOffset() {
            return 0;
        }
    }]);

    return OCheckout;
}(_appeaserComponentBase2.default);

// Export this so we can pick it up and import in main.js


module.exports = OCheckout;

},{"./../../../js/base/appeaser-component-base.js":39,"./../../../js/base/logger.js":44,"./../../../themes/stories/enums.js":54}],20:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _appeaserComponentBase = require('./../../../js/base/appeaser-component-base.js');

var _appeaserComponentBase2 = _interopRequireDefault(_appeaserComponentBase);

var _Enums = require('./../../../themes/stories/enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

var _animateWithClass = require('./../../../js/utils/animate-with-class.js');

var _animateWithClass2 = _interopRequireDefault(_animateWithClass);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var oExample = function (_AppeaserComponentBas) {
	_inherits(oExample, _AppeaserComponentBas);

	/**
  * Constructor
  */
	function oExample() {
		_classCallCheck(this, oExample);

		var _this = _possibleConstructorReturn(this, (oExample.__proto__ || Object.getPrototypeOf(oExample)).apply(this, arguments));

		console.log("Example :: constructor", _this.$el);

		// Contants
		// ---------------------------------------
		// Constants should always be UPPERCASE.
		// Make sure to save strings such as selectors and classes up here,
		// so we can configure this class just by tweaking its constructor.
		_this.ANIMATE_CLASS = 'a-button-animate';

		// Elements
		// ---------------------------------------
		// this.$el is your component scope that you get for free from componentLoader.
		// This is the DOM element with the "data-component" attribute set.
		// Always stick to your component scope.
		_this.$button = _this.$el.find('.js-button'); // note the .js- prefix!


		// Bindings
		// ---------------------------------------
		// Note they start with '_' indicating that they are "private" or "protected"
		// meaning its designed not to be accessible by outside.
		// This is just a notation for ourselves.
		_this._onButtonClick = _this._onButtonClick.bind(_this);
		_this._onAnimationDone = _this._onAnimationDone.bind(_this);
		_this._animateButton = _this._animateButton.bind(_this);
		_this._onEnterViewport = _this._onEnterViewport.bind(_this);
		_this._onExitViewport = _this._onExitViewport.bind(_this);

		// Event listeners
		// ---------------------------------------
		// It's a good idea to only add the ones you really need and add additional ones later
		_this.$el.on('click', _this._onButtonClick);

		// Mediator subscriptions
		_this.subscribe(_Enums2.default.ACTION.EXAMPLE, _this._onActionExample);
		_this.subscribe(_Enums2.default.EVENT.ON_EXAMPLE, _this._onEventExample);

		// scrollMonitor
		// ---------------------------------------
		// If you need functionality to happen only when this component
		// is visible in the screen, such as an animation,
		// we use scrollMonitor to detect that.
		//
		// See: https://github.com/sakabako/scrollMonitor

		// Create a watcher with this context
		_this.scrollWatcher = scrollMonitor.create(_this.$el);

		// Pass the callbacks
		_this.scrollWatcher.enterViewport(_this._onEnterViewport);
		_this.scrollWatcher.exitViewport(_this._onExitViewport);

		// Media queries
		// ---------------------------------------
		// Say you want something specific to happen only when it reaches
		// an specific breakpoint, you can use enquire.js for this.
		//
		// See: http://wicky.nillia.ms/enquire.js/
		//
		// Note that deferSetup default to false.
		// If set to true, defers execution the setup function
		// until the media query is first matched. still triggered just once.
		//
		// Example of using enquire to register a callback on a "medium" media query match:
		_this.MQMediumHandler = {
			deferSetup: true,
			setup: _this._onMQMediumSetup,
			match: _this._onMQMediumMatch,
			unmatch: _this._onMQMediumUnmatch,
			destroy: _this._onMQMediumDestroy
		};

		enquire.register(_Enums2.default.MQ.IS_DESKTOP, _this.MQMediumHandler);
		return _this;
	}

	/**
  * Animates the button to show the animWithClass functionality.
  */


	_createClass(oExample, [{
		key: '_animateButton',
		value: function _animateButton() {
			// animateWithClass (
			// 	el: the element to be animated,
			// 	name: the class that will cause the animation,
			// 	cb: the callback to run once its done,
			// 	nowait: should the callback run immediately even before the animation is done or not? (default false),
			// 	child: child element in case it's a child of 'el'
			// )
			(0, _animateWithClass2.default)(this.$el, this.ANIMATE_CLASS, this._onAnimationDone);
		}

		/**
   * Callback for when the above animation is done.
   */

	}, {
		key: '_onAnimationDone',
		value: function _onAnimationDone() {
			alert('Done!');
		}

		/**
   * Callback to run any kind of setup just before the media query matches.
   * Triggered once immediately upon registration of the handler (unless defered).
   */

	}, {
		key: '_onMQMediumSetup',
		value: function _onMQMediumSetup() {
			// E.g:
			// Show a loading spinner?
			// Make an Ajax call?
			console.log("Example :: _onMQMediumSetup");
		}

		/**
   * Callback for when the media query is matched.
   * Triggered when the media query transitions
   * from an unmatched to a matched state.
   */

	}, {
		key: '_onMQMediumMatch',
		value: function _onMQMediumMatch() {
			// Add additional logic for this media query here
			// E.g some event additional listeners etc
			console.log("Example :: _onMQMediumMatch");
		}

		/**
   * Callback for when the media query exists and is not matched anymore.
   * If supplied, triggered when the media query transitions
   * from a matched state to an unmatched state.
   * Also may be called when handler is unregistered (if destroy is not available).
   */

	}, {
		key: '_onMQMediumUnmatch',
		value: function _onMQMediumUnmatch() {
			console.log("Example :: _onMQMediumUnmatch");
		}

		/**
   * Callback for when when handler is unregistered. Place cleanup code here.
   */

	}, {
		key: '_onMQMediumDestroy',
		value: function _onMQMediumDestroy() {
			console.log("Example :: _onMQMediumDestroy");
		}

		/**
   * Callback for when the button gets clicked so we can do stuff...
   */

	}, {
		key: '_onButtonClick',
		value: function _onButtonClick() {

			console.log("_onButtonClick!!");

			this._animateButton();

			// Let's also publish an event to our componentLoader,
			// just because.
			this.publish(_Enums2.default.EVENT.ON_EXAMPLE);
		}

		/**
   * onEventExample happens because...
   * @param  {Object} data Data passed with the event
   */

	}, {
		key: '_onEventExample',
		value: function _onEventExample(data) {
			// Somebody published an EVENT through the mediator,
			// this is the callback for it.
			console.log("Example :: _onEventExample", data);
		}

		/**
   * onActionExample happens because...
   * @param  {Object} data Data passed with the event
   */

	}, {
		key: '_onActionExample',
		value: function _onActionExample(data) {
			// Somebody published an ACTION through the mediator,
			// this is the callback for it.
			console.log("Example :: _onActionExample", data);
		}

		/**
   * onEnterViewport gets called when this component is visible in the viewport.
   */

	}, {
		key: '_onEnterViewport',
		value: function _onEnterViewport() {
			console.log("Example :: _onEnterViewport");
		}

		/**
   * onExitViewport gets called when this component is not visible in the viewport anymore.
   */

	}, {
		key: '_onExitViewport',
		value: function _onExitViewport() {
			console.log("Example :: _onExitViewport");
		}

		/**
   * Destructor
   */

	}, {
		key: 'destroy',
		value: function destroy() {
			// Call our base component to be destroyed
			_get(oExample.prototype.__proto__ || Object.getPrototypeOf(oExample.prototype), 'destroy', this).call(this);

			// Remove event listeners
			this.$el.off('click', this._onButtonClick);
			this.unsubscribe(_Enums2.default.ACTION.EXAMPLE, this._onActionExample);
			this.unsubscribe(_Enums2.default.EVENT.ON_EXAMPLE, this._onEventExample);

			// Destroy our watcher
			if (this.scrollWatcher) this.scrollWatcher.destroy();

			enquire.unregister(_Enums2.default.MQ.IS_DESKTOP, this.MQMediumHandler);
		}
	}]);

	return oExample;
}(_appeaserComponentBase2.default);

// Export this so we can pick it up and import in main.js


module.exports = oExample;

},{"./../../../js/base/appeaser-component-base.js":39,"./../../../js/utils/animate-with-class.js":53,"./../../../themes/stories/enums.js":54}],21:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _appeaserComponentBase = require('./../../../js/base/appeaser-component-base.js');

var _appeaserComponentBase2 = _interopRequireDefault(_appeaserComponentBase);

var _Logger = require('./../../../js/base/logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../../themes/stories/enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OFilterBadges = function (_AppeaserComponentBas) {
  _inherits(OFilterBadges, _AppeaserComponentBas);

  /**
   * Constructor, will run before page loaded
   */
  function OFilterBadges() {
    _classCallCheck(this, OFilterBadges);

    var _this = _possibleConstructorReturn(this, (OFilterBadges.__proto__ || Object.getPrototypeOf(OFilterBadges)).apply(this, arguments));

    _Logger2.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();
    _this._declareConstants();
    _this.subscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed
    return _this;
  }

  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OFilterBadges, [{
    key: 'destroy',
    value: function destroy() {
      _Logger2.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();
      this._detachSubscribers();

      _get(OFilterBadges.prototype.__proto__ || Object.getPrototypeOf(OFilterBadges.prototype), 'destroy', this).call(this);
    }

    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: '_declareConstants',
    value: function _declareConstants() {
      this.HANDLEBAR_SOURCE = "#m-filter-badge";

      this.SELECTOR_FILTER_BADGE = '.m-filter-badge';

      this.CLASS_IS_CATEGORY = 'is-category';
    }

    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: '_onDOMReady',
    value: function _onDOMReady() {
      _Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();
      this._attachSubscribers();
      this._attachDOMListeners();
    }

    /**
     * Caching DOM elements for performance
     * @private
     */

  }, {
    key: '_cacheDOMElements',
    value: function _cacheDOMElements() {
      this.$filterBadgeTemplate = $(this.HANDLEBAR_SOURCE).html();
    }

    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: '_jQueryScopeBinding',
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._onFilterBadgeClick = this._onFilterBadgeClick.bind(this);
    }

    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: '_attachSubscribers',
    value: function _attachSubscribers() {
      _Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');
      this.subscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }

    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: '_detachSubscribers',
    value: function _detachSubscribers() {
      _Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
      this.unsubscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }

    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: '_onFrameworkReady',
    value: function _onFrameworkReady() {}

    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: '_attachDOMListeners',
    value: function _attachDOMListeners() {
      this.$el.on('click', this.SELECTOR_FILTER_BADGE, this._onFilterBadgeClick);
    }

    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: '_detachDOMListeners',
    value: function _detachDOMListeners() {
      this.$el.off('click', this.SELECTOR_FILTER_BADGE, this._onFilterBadgeClick);
    }

    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Callback for filter badge click
     * @param e
     * @private
     */

  }, {
    key: '_onFilterBadgeClick',
    value: function _onFilterBadgeClick(e) {
      var $target = $(e.currentTarget);

      if ($target.hasClass(this.CLASS_IS_CATEGORY)) {
        this.publish(_Enums2.default.EVENT.ON_FILTER_BADGE_REMOVE, { clearAll: true });
      } else {
        this.publish(_Enums2.default.EVENT.ON_FILTER_BADGE_REMOVE, { filterId: $target.attr('id').replace('badge-', '') });
      }
    }
  }]);

  return OFilterBadges;
}(_appeaserComponentBase2.default);

// Export this so we can pick it up and import in main.js


module.exports = OFilterBadges;

},{"./../../../js/base/appeaser-component-base.js":39,"./../../../js/base/logger.js":44,"./../../../themes/stories/enums.js":54}],22:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _appeaserComponentBase = require('./../../../js/base/appeaser-component-base.js');

var _appeaserComponentBase2 = _interopRequireDefault(_appeaserComponentBase);

var _Logger = require('./../../../js/base/logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../../themes/stories/enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OForm = function (_AppeaserComponentBas) {
    _inherits(OForm, _AppeaserComponentBas);

    /**
     * Constructor
     */
    function OForm() {
        _classCallCheck(this, OForm);

        var _this = _possibleConstructorReturn(this, (OForm.__proto__ || Object.getPrototypeOf(OForm)).apply(this, arguments));

        _Logger2.default.INFO(_this.constructor.name, ':: Constructor');

        _this._declareConstants();
        _this._jQueryScopeBinding();
        _this.subscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed
        return _this;
    }

    /**
     * Destructor, will run after page unload (or destroy)
     */


    _createClass(OForm, [{
        key: 'destroy',
        value: function destroy() {
            _Logger2.default.INFO(this.constructor.name, ':: Destructor');

            this._detachDOMListeners();
            this._detachSubscribers();

            _get(OForm.prototype.__proto__ || Object.getPrototypeOf(OForm.prototype), 'destroy', this).call(this);
        }

        /************************************************************************************************************
         ******************************************** Internal functions ********************************************
         ************************************************************************************************************/

        /**
         * Declare class constants here
         * @private
         */

    }, {
        key: '_declareConstants',
        value: function _declareConstants() {
            // CONSTANTS
            this.SELECTOR_FORM_BUTTON = 'button[type="submit"]';
            this.CLASS_IS_TOUCHED = 'is-touched';
            this.CLASS_NAV_BY_TAB = 'nav-by-tab';
            this.SELECTOR_TABINDEX = 'label[tabindex]';
            this.SELECTOR_NAV_BY_TAB = '.nav-by-tab';
            this.SELECTOR_BODY = 'body';
        }

        /**
         * Runs on DOM Ready
         * Should be used to attach DOM listeners etc
         * @private
         */

    }, {
        key: '_onDOMReady',
        value: function _onDOMReady() {
            _Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');

            this.notifyOnLeave = this.$el.data("notify-unsaved-changes");

            this._attachTabIndexes();

            this._cacheDOMElements();
            this._attachSubscribers();
            this._attachDOMListeners();
        }

        /**
         * Caching DOM elements for performance
         * @private
         */

    }, {
        key: '_cacheDOMElements',
        value: function _cacheDOMElements() {
            this.$cta = this.$el.find(this.SELECTOR_FORM_BUTTON);
            this.$tabIndexes = this.$el.find(this.SELECTOR_TABINDEX);
            this.$body = $(this.SELECTOR_BODY);
        }

        /**
         * Scopes "this" to use the "this" of the outside function
         * Since JQuery creates a new function with a new "this"
         * Attach all functions that needs to be binded here
         * @private
         */

    }, {
        key: '_jQueryScopeBinding',
        value: function _jQueryScopeBinding() {
            this._onDOMReady = this._onDOMReady.bind(this);
            this._onSubmitClick = this._onSubmitClick.bind(this);
            this._onFormSubmit = this._onFormSubmit.bind(this);
            this._onKeyUp = this._onKeyUp.bind(this);
            this._onReset = this._onReset.bind(this);
            this._checkSpaceBar = this._checkSpaceBar.bind(this);
        }

        /**
         * Attach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_attachSubscribers',
        value: function _attachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');

            this.subscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
        }

        /**
         * Detach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_detachSubscribers',
        value: function _detachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');

            this.unsubscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
            this.unsubscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
        }

        /**
         * At this point the framework is ready.
         * Add all publish events here (if any)
         * @private
         */

    }, {
        key: '_onFrameworkReady',
        value: function _onFrameworkReady() {}

        /**
         * Attach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_attachDOMListeners',
        value: function _attachDOMListeners() {
            this.$cta.on('click', this._onSubmitClick);
            this.$el.on('submit', this._onFormSubmit);
            this.$el.on('keyup', this._onKeyUp);
            this.$el.on('reset', this._onReset);
            this.$tabIndexes.on('keyup', this._checkSpaceBar);
        }

        /**
         * Detach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_detachDOMListeners',
        value: function _detachDOMListeners() {
            this.$cta.off('click', this._onSubmitClick);
            this.$el.off('submit', this._onFormSubmit);
            this.$el.off('keyup', this._onKeyUp);
            this.$el.off('reset', this._onReset);
            this.$tabIndexes.off('keyup', this._checkSpaceBar);
        }

        /************************************************************************************************************
         ****************************************** Implementation functions ****************************************
         ************************************************************************************************************/

        /**
         * Checks if form is invalid on submit button click and if so takes an appropriate action
         * @private
         */

    }, {
        key: '_onSubmitClick',
        value: function _onSubmitClick(e) {
            e.preventDefault();
            $(e.currentTarget).closest("form").submit();
        }
    }, {
        key: '_onFormSubmit',
        value: function _onFormSubmit(e, forceSubmission) {
            var form = $(e.currentTarget);

            if (form.data("manually-submit")) {
                $(window).off("beforeunload");
                if (!forceSubmission) {
                    e.preventDefault();
                    e.stopPropagation();
                    this.publish(_Enums2.default.EVENT.ON_FORM_SUBMISSION, e, form);
                }
            } else {

                this.publish(_Enums2.default.ACTION.FORM_VALIDATION, form, function (isValid) {
                    if (!isValid) {
                        e.preventDefault();
                        e.stopPropagation();
                    } else {
                        $(window).off("beforeunload");
                    }
                });
            }
        }

        /**
         * Check if the form is empty or filled
         * @private
         */

    }, {
        key: '_onKeyUp',
        value: function _onKeyUp() {
            this.$el.addClass(this.CLASS_IS_TOUCHED);

            if (this.notifyOnLeave) {
                $(window).on("beforeunload", this._onBeforeLeave);
            }

            this.$el.off('keyup', this._onKeyUp);
        }

        /**
         * On form reset handler
         * @private
         */

    }, {
        key: '_onReset',
        value: function _onReset() {
            this.$el.removeClass(this.CLASS_IS_TOUCHED);

            $(window).off("beforeunload", this._onBeforeLeave);

            this.$el.on('keyup', this._onKeyUp);
        }
    }, {
        key: '_onBeforeLeave',
        value: function _onBeforeLeave(e) {
            e.returnValue = "Your changes will be lost if you close this section. to save your information click on the save button before closing";

            return e.returnValue;
        }

        /**
         * function used on label[tabindex] to check if space is pressed, it also tags the element by nav-by-tab class for proper highlighting
         * @param e
         * @private
         */

    }, {
        key: '_checkSpaceBar',
        value: function _checkSpaceBar(e) {
            var $currentTarget = $(e.currentTarget);
            $(this.SELECTOR_NAV_BY_TAB).removeClass(this.CLASS_NAV_BY_TAB); // clear all selected
            $currentTarget.addClass(this.CLASS_NAV_BY_TAB); // mark this since we navigated here by tab

            if (e.keyCode === _Enums2.default.KEYSTROKE.SPACEBAR) {
                $currentTarget.trigger('click');
            }
        }

        /**
         * Attaches correct tabindex to all forms on the page,
         * saves the amount of forms processed on body data object
         * @private
         */

    }, {
        key: '_attachTabIndexes',
        value: function _attachTabIndexes() {
            var $body = $(this.SELECTOR_BODY);
            var currentForm = parseInt($body.data('forms')) + 1 || 1;
            this.$el.attr('tabindex', currentForm);

            this.$el.find('input, label.custom-box, [type=submit]').each(function (i) {
                $(this).attr('tabindex', currentForm * 100 + i);
            });

            // keep track of forms
            $body.data('forms', currentForm);
        }
    }]);

    return OForm;
}(_appeaserComponentBase2.default);

// Export this so we can pick it up and import in main.js


module.exports = OForm;

},{"./../../../js/base/appeaser-component-base.js":39,"./../../../js/base/logger.js":44,"./../../../themes/stories/enums.js":54}],23:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _appeaserComponentBase = require('./../../../js/base/appeaser-component-base.js');

var _appeaserComponentBase2 = _interopRequireDefault(_appeaserComponentBase);

var _Logger = require('./../../../js/base/logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../../themes/stories/enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

var _animateWithClass = require('./../../../js/utils/animate-with-class.js');

var _animateWithClass2 = _interopRequireDefault(_animateWithClass);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OGridController = function (_AppeaserComponentBas) {
    _inherits(OGridController, _AppeaserComponentBas);

    /**
     * Constructor, will run before page loaded
     */
    function OGridController() {
        _classCallCheck(this, OGridController);

        var _this = _possibleConstructorReturn(this, (OGridController.__proto__ || Object.getPrototypeOf(OGridController)).apply(this, arguments));

        _Logger2.default.INFO(_this.constructor.name, ':: Constructor');

        _this._declareConstants();
        _this._jQueryScopeBinding();
        _this.subscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed
        return _this;
    }

    /**
     * Destructor, will run after page unload (or destroy)
     */


    _createClass(OGridController, [{
        key: 'destroy',
        value: function destroy() {
            _Logger2.default.INFO(this.constructor.name, ':: Destructor');

            this._detachDOMListeners();
            this._detachSubscribers();

            _get(OGridController.prototype.__proto__ || Object.getPrototypeOf(OGridController.prototype), 'destroy', this).call(this);
        }

        /************************************************************************************************************
         ******************************************** Internal functions ********************************************
         ************************************************************************************************************/

        /**
         * Declare class constants here
         * @private
         */

    }, {
        key: '_declareConstants',
        value: function _declareConstants() {}

        /**
         * Runs on DOM Ready
         * Should be used to attach DOM listeners etc
         * @private
         */

    }, {
        key: '_onDOMReady',
        value: function _onDOMReady() {
            _Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');

            if (this.$el.hasClass('overlay')) {
                this._cacheDOMElements();
                this._attachDOMListeners();

                this.originalPosition = parseInt(this.$teaser.css('margin-top'));

                this.scrollTop = this.$window.scrollTop();
                this._checkPosition();

                // make sure everything is initialized
                this._onResize();
            }

            this._attachSubscribers();
        }
    }, {
        key: '_cacheDOMElements',
        value: function _cacheDOMElements() {
            this.$teaser = this.$el.find('.m-free-tile');
            this.teaser_offset = this.$teaser.offset().top;
            this.scrollTop = 0;
            this.$window = $(window);
            this.position = this.$window.height() - this.teaser_offset;
            this.$holder = this.$teaser.parent();
        }

        /**
         * Scopes "this" to use the "this" of the outside function
         * Since JQuery creates a new function with a new "this"
         * Attach all functions that needs to be binded here
         * @private
         */

    }, {
        key: '_jQueryScopeBinding',
        value: function _jQueryScopeBinding() {
            this._onDOMReady = this._onDOMReady.bind(this);

            this._onScroll = this._onScroll.bind(this);
            this._onResize = this._onResize.bind(this);
        }

        /**
         * Attach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_attachSubscribers',
        value: function _attachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');

            this.subscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
        }

        /**
         * Detach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_detachSubscribers',
        value: function _detachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');

            this.unsubscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
            this.unsubscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
        }

        /**
         * At this point the framework is ready.
         * Add all publish events here (if any)
         * @private
         */

    }, {
        key: '_onFrameworkReady',
        value: function _onFrameworkReady() {}

        /**
         * Attach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_attachDOMListeners',
        value: function _attachDOMListeners() {
            this.$window.on('scroll resize', this._onScroll);
            this.$window.on('resize', this._onResize);
        }

        /**
         * Detach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_detachDOMListeners',
        value: function _detachDOMListeners() {
            this.$window.off('scroll', this._onScroll);
            this.$window.off('resize', this._onResize);
        }

        /************************************************************************************************************
         ****************************************** Implementation functions ****************************************
         ************************************************************************************************************/

        /**
         * CheckPosition of element on screen according to how we scroll (parallalax)
         * @private
         */

    }, {
        key: '_checkPosition',
        value: function _checkPosition() {
            var newPos = this.originalPosition + this.scrollTop - this.position - 20;
            var newValue = 0;

            // check if we're close to the actual element
            if (this.scrollTop > 0) {
                newValue = newPos > 0 ? 0 : newPos * .6;
                // if not make sure we reposition even if we scroll fast
            } else {
                newValue = newPos < this.originalPosition ? this.originalPosition : newPos > 0 ? 0 : newPos * .6;
            }

            this._rePosition(newValue);
        }

        /**
         * Reposition the element
         * @private
         */

    }, {
        key: '_rePosition',
        value: function _rePosition(value) {
            // set new position
            if (parseInt(this.$teaser.css('margin-top')) != value) {
                this.$teaser.css('margin-top', value);
            }

            if (value < 0) this.$teaser.addClass('is-animating');else this.$teaser.removeClass('is-animating');
        }

        /**
         * Listen to the onScroll event
         * @private
         */

    }, {
        key: '_onScroll',
        value: function _onScroll() {
            this.scrollTop = this.$window.scrollTop();

            if (this.scrollTop < this.teaser_offset) {
                this._checkPosition();
            } else {
                this._rePosition(0);
            }
        }
    }, {
        key: '_onResize',
        value: function _onResize() {
            this.$holder.height(this.$teaser.height());
        }
    }]);

    return OGridController;
}(_appeaserComponentBase2.default);

// Export this so we can pick it up and import in main.js


module.exports = OGridController;

},{"./../../../js/base/appeaser-component-base.js":39,"./../../../js/base/logger.js":44,"./../../../js/utils/animate-with-class.js":53,"./../../../themes/stories/enums.js":54}],24:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _appeaserComponentBase = require('./../../../js/base/appeaser-component-base.js');

var _appeaserComponentBase2 = _interopRequireDefault(_appeaserComponentBase);

var _Logger = require('./../../../js/base/logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../../themes/stories/enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OHomeDelivery = function (_AppeaserComponentBas) {
    _inherits(OHomeDelivery, _AppeaserComponentBas);

    /**
     * Constructor, will run before page loaded
     */
    function OHomeDelivery() {
        _classCallCheck(this, OHomeDelivery);

        var _this = _possibleConstructorReturn(this, (OHomeDelivery.__proto__ || Object.getPrototypeOf(OHomeDelivery)).apply(this, arguments));

        _Logger2.default.INFO(_this.constructor.name, ':: Constructor');

        _this._jQueryScopeBinding();
        _this._declareConstants();
        _this.subscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed
        return _this;
    }

    /**
     * Destructor, will run after page unload (or destroy)
     */


    _createClass(OHomeDelivery, [{
        key: 'destroy',
        value: function destroy() {
            _Logger2.default.INFO(this.constructor.name, ':: Destructor');

            this._detachDOMListeners();
            this._detachSubscribers();

            _get(OHomeDelivery.prototype.__proto__ || Object.getPrototypeOf(OHomeDelivery.prototype), 'destroy', this).call(this);
        }

        /************************************************************************************************************
         ******************************************** Internal functions ********************************************
         ************************************************************************************************************/

        /**
         * Declare class constants here
         * @private
         */

    }, {
        key: '_declareConstants',
        value: function _declareConstants() {
            this.SELECTOR_CHANGE_ADDRESS_LINK = '.change-address';
            this.SELECTOR_CANCEL_CHANGE_ADDRESS_LINK = '.js-cancel-change';
            this.SELECTOR_ADD_ADDRESS_BUTTON = '.o-add-element-button';
            this.SELECTOR_NEW_ADDRESS_RADIO = '.o-address-box-add .a-radio-button';
            this.SELECTOR_ADDRESS_RADIO = '.o-account-box .a-radio-button';
            this.SELECTOR_CHANGE_ADDRESS_SECTION = '.delivery-change-address-section';
            this.SELECTOR_SAVE_NEW_ADDRESS_BUTTON = this.SELECTOR_CHANGE_ADDRESS_SECTION + ' .a-button.is-primary';
            this.SELECTOR_TEXT_INPUT = '.m-input';

            this.CLASS_IS_CHANGING_ADDRESS = 'is-changing-address';
        }

        /**
         * Runs on DOM Ready
         * Should be used to attach DOM listeners etc
         * @private
         */

    }, {
        key: '_onDOMReady',
        value: function _onDOMReady() {
            _Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');

            this._cacheDOMElements();
            this._attachSubscribers();
            this._attachDOMListeners();
        }

        /**
         * Caching DOM elements for performance
         * @private
         */

    }, {
        key: '_cacheDOMElements',
        value: function _cacheDOMElements() {
            this.$changeAddressLink = this.$el.find(this.SELECTOR_CHANGE_ADDRESS_LINK);
            this.$cancelLink = this.$el.find(this.SELECTOR_CANCEL_CHANGE_ADDRESS_LINK);
            this.$addAddressButton = this.$el.find(this.SELECTOR_ADD_ADDRESS_BUTTON);
            this.$newAddressRadio = this.$el.find(this.SELECTOR_NEW_ADDRESS_RADIO);
            this.$addressRadio = this.$el.find(this.SELECTOR_ADDRESS_RADIO);
            this.$saveNewAddressBtn = this.$el.find(this.SELECTOR_SAVE_NEW_ADDRESS_BUTTON);
        }

        /**
         * Scopes "this" to use the "this" of the outside function
         * Since JQuery creates a new function with a new "this"
         * Attach all functions that needs to be binded here
         * @private
         */

    }, {
        key: '_jQueryScopeBinding',
        value: function _jQueryScopeBinding() {
            this._onDOMReady = this._onDOMReady.bind(this);
            this._onChangeAddressLinkClick = this._onChangeAddressLinkClick.bind(this);
            this._onCancelLinkClick = this._onCancelLinkClick.bind(this);
            this._onAddressButtonClick = this._onAddressButtonClick.bind(this);
            this._onAddressRadioChange = this._onAddressRadioChange.bind(this);
            this._onSaveAddress = this._onSaveAddress.bind(this);
        }

        /**
         * Attach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_attachSubscribers',
        value: function _attachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');

            this.subscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
        }

        /**
         * Detach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_detachSubscribers',
        value: function _detachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');

            this.unsubscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
            this.unsubscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
        }

        /**
         * At this point the framework is ready.
         * Add all publish events here (if any)
         * @private
         */

    }, {
        key: '_onFrameworkReady',
        value: function _onFrameworkReady() {}

        /**
         * Attach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_attachDOMListeners',
        value: function _attachDOMListeners() {

            this.$changeAddressLink.on('click', this._onChangeAddressLinkClick);
            this.$cancelLink.on('click', this._onCancelLinkClick);
            this.$addAddressButton.on('click', this._onAddressButtonClick);
            this.$addressRadio.on('change', this._onAddressRadioChange);
            this.$saveNewAddressBtn.on('click', this._onSaveAddress);
        }

        /**
         * Detach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_detachDOMListeners',
        value: function _detachDOMListeners() {

            this.$changeAddressLink.off('click', this._onChangeAddressLinkClick);
            this.$cancelLink.off('click', this._onCancelLinkClick);
            this.$addAddressButton.off('click', this._onAddressButtonClick);
            this.$addressRadio.off('change', this._onAddressRadioChange);
            this.$saveNewAddressBtn.off('click', this._onSaveAddress);
        }

        /************************************************************************************************************
         ****************************************** Implementation functions ****************************************
         ************************************************************************************************************/

        /**
         * Callback for when user wants to save a address.
         */

    }, {
        key: '_onSaveAddress',
        value: function _onSaveAddress() {
            var _this2 = this;

            var inputs = this.$el.find(this.SELECTOR_CHANGE_ADDRESS_SECTION + ' ' + this.SELECTOR_TEXT_INPUT + ' input');

            inputs.each(function (index, element) {
                if (!element.checkValidity()) {
                    var $element = $(element);
                    $element.closest(_this2.SELECTOR_TEXT_INPUT).addClass(_Enums2.default.CLASS.HAS_ERROR);
                    _this2.publish(_Enums2.default.ACTION.SCROLL_TO_FORM_ERROR_MSG, $element.closest('.o-form'));
                    return false;
                }
            });
        }
    }, {
        key: '_onAddressRadioChange',
        value: function _onAddressRadioChange() {
            if (!this.$newAddressRadio.prop('checked')) {
                this.publish(_Enums2.default.ACTION.HIDE_ADDRESS_BOX_ADD);
            }
        }
    }, {
        key: '_onAddressButtonClick',
        value: function _onAddressButtonClick() {
            this.$newAddressRadio.prop('checked', true);
        }
    }, {
        key: '_onCancelLinkClick',
        value: function _onCancelLinkClick(e) {
            e.preventDefault();
            this.publish(_Enums2.default.ACTION.ENABLE_DELIVERY_CONTINUE_BUTTON);
            this.$el.removeClass(this.CLASS_IS_CHANGING_ADDRESS);
        }
    }, {
        key: '_onChangeAddressLinkClick',
        value: function _onChangeAddressLinkClick(e) {
            e.preventDefault();
            this.publish(_Enums2.default.ACTION.DISABLE_DELIVERY_CONTINUE_BUTTON);
            this.$el.addClass(this.CLASS_IS_CHANGING_ADDRESS);
        }
    }]);

    return OHomeDelivery;
}(_appeaserComponentBase2.default);

// Export this so we can pick it up and import in main.js


module.exports = OHomeDelivery;

},{"./../../../js/base/appeaser-component-base.js":39,"./../../../js/base/logger.js":44,"./../../../themes/stories/enums.js":54}],25:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _appeaserComponentBase = require('./../../../js/base/appeaser-component-base.js');

var _appeaserComponentBase2 = _interopRequireDefault(_appeaserComponentBase);

var _Logger = require('./../../../js/base/logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../../themes/stories/enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OLazyLoad = function (_AppeaserComponentBas) {
  _inherits(OLazyLoad, _AppeaserComponentBas);

  /**
   * Constructor, will run before page loaded
   */
  function OLazyLoad() {
    _classCallCheck(this, OLazyLoad);

    var _this = _possibleConstructorReturn(this, (OLazyLoad.__proto__ || Object.getPrototypeOf(OLazyLoad)).apply(this, arguments));

    _Logger2.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();
    _this._declareConstants();
    _this.subscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed
    return _this;
  }

  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OLazyLoad, [{
    key: 'destroy',
    value: function destroy() {
      _Logger2.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();
      this._detachSubscribers();

      _get(OLazyLoad.prototype.__proto__ || Object.getPrototypeOf(OLazyLoad.prototype), 'destroy', this).call(this);
    }

    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: '_declareConstants',
    value: function _declareConstants() {}

    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: '_onDOMReady',
    value: function _onDOMReady() {
      _Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();
      this._attachSubscribers();
      this._attachDOMListeners();
    }
  }, {
    key: '_cacheDOMElements',
    value: function _cacheDOMElements() {
      this.$window = $(window);
    }

    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: '_jQueryScopeBinding',
    value: function _jQueryScopeBinding() {
      _Logger2.default.INFO(this.constructor.name, ':: _jQueryScopeBinding');

      this._onDOMReady = this._onDOMReady.bind(this);
      this._onScroll = this._onScroll.bind(this);
    }

    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: '_attachSubscribers',
    value: function _attachSubscribers() {
      _Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
      this.subscribe(_Enums2.default.ACTION.SHOW_SPINNER, this._onShowSpinner);
      this.subscribe(_Enums2.default.EVENT.ON_CONTENT_LOADED, this._onContentLoaded);
      this.subscribe(_Enums2.default.ACTION.HIDE_SPINNER, this._onHideSpinner);
    }

    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: '_detachSubscribers',
    value: function _detachSubscribers() {
      _Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
      this.unsubscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
      this.unsubscribe(_Enums2.default.ACTION.SHOW_SPINNER, this._onShowSpinner);
      this.unsubscribe(_Enums2.default.EVENT.ON_CONTENT_LOADED, this._onContentLoaded);
      this.unsubscribe(_Enums2.default.ACTION.HIDE_SPINNER, this._onHideSpinner);
    }

    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: '_onFrameworkReady',
    value: function _onFrameworkReady() {}

    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: '_attachDOMListeners',
    value: function _attachDOMListeners() {
      this.$window.on('scroll', this._onScroll);
    }

    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: '_detachDOMListeners',
    value: function _detachDOMListeners() {
      this.$window.off('scroll', this._onScroll);
    }

    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Triggers scroll logic and shows spinner
     * @private
     */

  }, {
    key: '_onShowSpinner',
    value: function _onShowSpinner() {
      this.$el.addClass(_Enums2.default.CLASS.IS_VISIBLE_STATE);
    }

    /**
     * Stops scroll logic and hides spinner
     * @private
     */

  }, {
    key: '_onHideSpinner',
    value: function _onHideSpinner() {
      this.$el.removeClass(_Enums2.default.CLASS.IS_VISIBLE_STATE);
    }
  }, {
    key: '_onContentLoaded',
    value: function _onContentLoaded() {
      this.eventPublished = false;
    }

    /**
     * Checks if we should publish a load more event
     * @private
     */

  }, {
    key: '_onScroll',
    value: function _onScroll() {
      if (this.$window.scrollTop() + this.$window.height() > this.$el.offset().top && !this.eventPublished) {
        this.publish(_Enums2.default.ACTION.LOAD_MORE_CONTENT);
        this.eventPublished = true;
      }
    }
  }]);

  return OLazyLoad;
}(_appeaserComponentBase2.default);

// Export this so we can pick it up and import in main.js


module.exports = OLazyLoad;

},{"./../../../js/base/appeaser-component-base.js":39,"./../../../js/base/logger.js":44,"./../../../themes/stories/enums.js":54}],26:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _appeaserComponentBase = require('./../../../js/base/appeaser-component-base.js');

var _appeaserComponentBase2 = _interopRequireDefault(_appeaserComponentBase);

var _Logger = require('./../../../js/base/logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../../themes/stories/enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OLightbox = function (_AppeaserComponentBas) {
    _inherits(OLightbox, _AppeaserComponentBas);

    /**
     * Constructor, will run before page loaded
     */
    function OLightbox() {
        _classCallCheck(this, OLightbox);

        var _this = _possibleConstructorReturn(this, (OLightbox.__proto__ || Object.getPrototypeOf(OLightbox)).apply(this, arguments));

        _Logger2.default.INFO(_this.constructor.name, ':: Constructor');
        _this._jQueryScopeBinding();
        _this._declareConstants();

        _this.subscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed
/* [더현대닷컴 H&M Hmall 입점] 최혁준  뉴스레터 지금신청 관련추가. 시작 */
        window.OLightbox = _this;
/* [더현대닷컴 H&M Hmall 입점] 최혁준  뉴스레터 지금신청 관련추가. 끝 */
        return _this;
    }

    /**
     * Destructor, will run after page unload (or destroy)
     */


    _createClass(OLightbox, [{
        key: 'destroy',
        value: function destroy() {
            _Logger2.default.INFO(this.constructor.name, ':: Destructor');

            this._detachDOMListeners();
            this._detachSubscribers();

            _get(OLightbox.prototype.__proto__ || Object.getPrototypeOf(OLightbox.prototype), 'destroy', this).call(this);
        }

        /************************************************************************************************************
         ******************************************** Internal functions ********************************************
         ************************************************************************************************************/

        /**
         * Declare class constants here
         * @private
         */

    }, {
        key: '_declareConstants',
        value: function _declareConstants() {
            this.SELECTOR_CONTENT = '.js-content';
            this.SELECTOR_BODY = 'body';
            this.SELECTOR_CLOSE_BUTTON = '.js-close-button';
            this.SELECTOR_LIGHTBOX_HEADER = '.lightbox-header';

            this.ANIMATION_DELAY = 270;
            this.ANIMATION_DELAY_OVERLAY = 500;
            this.ANIMATING_OVERLAY = true;
            this.IS_NAVIGATION_OPEN = false;
            this.OVERLAY_CLASSES = 'q-opacity-95 q-bg-grey-light';
            this.contentHistory = [];

            this.CLASS_NO_PADDING = 'no-padding';
        }

        /**
         * Runs on DOM Ready
         * Should be used to attach DOM listeners etc
         * @private
         */

    }, {
        key: '_onDOMReady',
        value: function _onDOMReady() {
            _Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');

            this.rmClasses = null;
            this.$content = this.$el.find(this.SELECTOR_CONTENT);
            this.$window = $(window);

            this._attachSubscribers();
            this._attachDOMListeners();
            this._cacheDOMElements();
        }

        /**
         * Scopes "this" to use the "this" of the outside function
         * Since JQuery creates a new function with a new "this"
         * Attach all functions that needs to be binded here
         * @private
         */

    }, {
        key: '_jQueryScopeBinding',
        value: function _jQueryScopeBinding() {
            this._onDOMReady = this._onDOMReady.bind(this);

            this._show = this._show.bind(this);
            this._hide = this._hide.bind(this);
            this._onCloseButtonClick = this._onCloseButtonClick.bind(this);
        }

        /**
         * Attach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_attachSubscribers',
        value: function _attachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');

            this.subscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
            this.subscribe(_Enums2.default.ACTION.SHOW_LIGHTBOX, this._show);
            this.subscribe(_Enums2.default.ACTION.HIDE_LIGHTBOX, this._hide);
            this.subscribe(_Enums2.default.EVENT.ON_NAVIGATION_MENU_OPEN, this._setNavigationState);
            this.subscribe(_Enums2.default.EVENT.ON_NAVIGATION_MENU_CLOSE, this._setNavigationState);
        }

        /**
         * Detach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_detachSubscribers',
        value: function _detachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');

            this.unsubscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
            this.unsubscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
            this.unsubscribe(_Enums2.default.ACTION.SHOW_LIGHTBOX, this._show);
            this.unsubscribe(_Enums2.default.ACTION.HIDE_LIGHTBOX, this._hide);
            this.unsubscribe(_Enums2.default.EVENT.ON_NAVIGATION_MENU_OPEN, this._setNavigationState);
            this.unsubscribe(_Enums2.default.EVENT.ON_NAVIGATION_MENU_CLOSE, this._setNavigationState);
        }

        /**
         * At this point the framework is ready.
         * Add all publish events here (if any)
         * @private
         */

    }, {
        key: '_onFrameworkReady',
        value: function _onFrameworkReady() {}

        /**
         * Called on onDomReady, cache DOM elements
         * @private
         */

    }, {
        key: '_cacheDOMElements',
        value: function _cacheDOMElements() {
            this.$body = $(this.SELECTOR_BODY);
            this.$cachedLightbox = $(this.SELECTOR_CONTENT).clone(true);

            $(this.SELECTOR_CONTENT).remove();
        }

        /**
         * Attach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_attachDOMListeners',
        value: function _attachDOMListeners() {
            this.$el.on('click', this._onClick);
            this.$el.on("click", this.SELECTOR_CLOSE_BUTTON, this._onCloseButtonClick);
        }

        /**
         * Detach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_detachDOMListeners',
        value: function _detachDOMListeners() {
            this.$el.off('click', this._onClick);
            this.$el.off("click", this.SELECTOR_CLOSE_BUTTON, this._onCloseButtonClick);
        }

        /************************************************************************************************************
         ****************************************** Implementation functions ****************************************
         ************************************************************************************************************/

    }, {
        key: '_setNavigationState',
        value: function _setNavigationState() {
            this.IS_NAVIGATION_OPEN = !this.IS_NAVIGATION_OPEN;
        }

        /**
         * Callback when close button is clicked
         * @private
         */

    }, {
        key: '_onCloseButtonClick',
        value: function _onCloseButtonClick() {
            this._hide();
        }
    }, {
        key: '_clearContent',


        /**
         * Empties lightbox content
         * @private
         */
        value: function _clearContent() {
            if (!this.contentHistory || this.contentHistory.length === 0) {
                return;
            }

            var currentContentOptions = this.contentHistory[this.contentHistory.length - 1],
                $currentContent = this.$el.find(this.SELECTOR_CONTENT + '[data-template="' + currentContentOptions.template + '"]');

            this.contentHistory.pop();

            // Trigger _destroyBlock based on passed in element, to destroy all classes used by the element
            this.__mediator.destroy($currentContent[0]);
            $currentContent.remove();

            this.$content.css('height', '').css('width', '');
        }

        /**
         * Closes lightbox
         * @private
         */

    }, {
        key: '_hide',
        value: function _hide(data) {
            var _this2 = this;

            if (this.contentHistory.length > 1) {
                this._clearContent();
                this._performContentSwitch();
            } else {
                this.unsubscribe(_Enums2.default.EVENT.ON_OVERLAY_CLICKED, this._hide);

                // change classes
                this.$el.removeClass(_Enums2.default.CLASS.IS_OPEN_STATE).addClass(_Enums2.default.CLASS.IS_CLOSED_STATE);

                // remove saved classes
                setTimeout(function () {
                    _this2.$el.removeClass(_this2.rmClasses).removeClass(_Enums2.default.CLASS.IS_CLOSED_STATE);
                }, this.ANIMATION_DELAY);

                // publish that we've closed
                this.publish(_Enums2.default.EVENT.ON_LIGHTBOX_CLOSE, data);
                this.publish(_Enums2.default.EVENT.ON_LIGHTBOX_LEVEL_CHANGED, this.contentHistory.length);

                // remove the overlay
                this.publish(_Enums2.default.ACTION.HIDE_OVERLAY, {
                    animating: this.ANIMATING_OVERLAY,
                    delay: this.ANIMATION_DELAY_OVERLAY,
                    opacityClass: "q-opacity-95"
                });

                // Empty the content after the close animation is finished.
                setTimeout(function () {
                    _this2._clearContent();
                }, this.ANIMATION_DELAY);
            }
        }

        /**
         * Opens lightbox, template can be used to fetch the html script type/html and populate lightbox
         * @param options - Lightbox configurations: { $element: [LIGHTBOX_CONTENT], classes: [LIGHTBOX_CLASSES], template: 'tmpl-name' }
         * @private
         */

    }, {
        key: '_show',
        value: function _show(options) {
            this.contentHistory.push(options);

            // [customizing-jw] o-lightbox height clear
            $('.o-lightbox').css('height', '');

            if (this.contentHistory.length > 1) {
                this._performContentSwitch(options);
            } else {
                this.subscribe(_Enums2.default.EVENT.ON_OVERLAY_CLICKED, this._hide);

                this._openLightbox(options);

                // publish that we've opened
                this.publish(_Enums2.default.EVENT.ON_LIGHTBOX_OPEN);
                this.publish(_Enums2.default.EVENT.ON_LIGHTBOX_LEVEL_CHANGED, this.contentHistory.length);
            }

            // [AOS] @Description : o-lightbox is-large height 짝수 전환 안되는 현상 수정. @date:2017-11-22 @version : M2. @author : 정병준 – 시작
            // [customizing-bj] o-lightbox 한글 깨짐 수정 - height 짝수 전환
            // [customizing-jw] 높이 사이즈를 변경하고 싶지 않은 경우 'no-change-size' class 추가
            if (Number($('.o-lightbox').css('height').replace(/[^-\d\.]/g, '')) % 2 == 1 && $('.lightbox-content > .no-change-size').length == 0) {
            	if ($('.o-lightbox').hasClass('is-large')) {
            		$('.o-lightbox').attr('style', 'height: ' + (Number($('.o-lightbox').css('height').replace(/[^-\d\.]/g, '')) + 1) + 'px !important');
            	} else {
            		$('.o-lightbox').css('height', (Number($('.o-lightbox').css('height').replace(/[^-\d\.]/g, '')) + 1));
            	}
            }
            // [AOS] @Description : o-lightbox is-large height 짝수 전환 안되는 현상 수정. @date:2017-11-22 @version : M2. @author : 정병준 – 끝
        }

        /**
         * Performs content switch logic
         * @param options
         * @private
         */

    }, {
        key: '_performContentSwitch',
        value: function _performContentSwitch() {
            var _this3 = this;

            // change classes
            this.$el.removeClass(_Enums2.default.CLASS.IS_OPEN_STATE).addClass(_Enums2.default.CLASS.IS_CLOSED_STATE);

            var currentContentOptions = this.contentHistory[this.contentHistory.length - 1];

            setTimeout(function () {
                _this3.$el.removeClass(_this3.rmClasses);

                _this3._openLightbox(currentContentOptions);

                _this3.publish(_Enums2.default.EVENT.ON_LIGHTBOX_LEVEL_CHANGED, _this3.contentHistory.length);
            }, this.ANIMATION_DELAY);
        }

        /**
         * Performs logic for opening the lightbox
         * @private
         */

    }, {
        key: '_openLightbox',
        value: function _openLightbox(options) {
            if (typeof options.template !== 'undefined') {
            	// [customizing-bj] 장바구니 QuickShop 템플릿 생성 추가
            	if (options.template == 'o-quick-buy') {
            		QuickShop.makeTemplate(options.slitmcd);
            		options.$template = $("#tmp-quick-buy").html();
            		$("#tmp-quick-buy").html('');
           		// [AOS] @Description : 컬러 변경시 상품 내용 변경 되도록 수정. @date:2017-11-06 @version : M2. @author : 정병준 - 시작
            	} else if (options.template == 'change-essential-info-link') {
            		options.$template = $("#tmp-essential-info").html();
            	// [AOS] @Description : 컬러 변경시 상품 내용 변경 되도록 수정. @date:2017-11-06 @version : M2. @author : 정병준 - 끝
            	} else {
            		options.$template = $('script#' + options.template).html();
            	}

                if (this.$el.find(this.SELECTOR_CONTENT + '[data-template="' + options.template + '"]').length === 0) {
                    this._fetchContent(options, {});
                    this.scan({ pjax: true });
                }
            } else {
                _Logger2.default.ERROR('No content found for lightbox', JSON.stringify(options));
            }

            if (options.classes) {
                this.rmClasses = options.classes;
                this.$el.addClass(options.classes);
            }

            this.publish(_Enums2.default.ACTION.SHOW_OVERLAY, {
                classes: this.OVERLAY_CLASSES,
                keepScroll: true
            });

            this._disableScroll();

            // Set a timeout so that the actual width of the lightbox is set when we calculate the clipping
            if (options.nopadding) {
                this._setnopaddingStyling();
            }

            // change classes
            this.$el.removeClass(_Enums2.default.CLASS.IS_CLOSED_STATE).addClass(_Enums2.default.CLASS.IS_OPEN_STATE);
        }

        /**
         * Disables the scroll
         * @private
         */

    }, {
        key: '_disableScroll',
        value: function _disableScroll() {
            this.publish(_Enums2.default.ACTION.DISABLE_SCROLL, { forceScrollPosition: false, $touchScrollElement: this.$el });
        }
    }, {
        key: '_setnopaddingStyling',
        value: function _setnopaddingStyling() {
            this.$el.addClass(this.CLASS_NO_PADDING);
            this.rmClasses += ' ' + this.CLASS_NO_PADDING;
        }
    }, {
        key: '_fetchContent',
        value: function _fetchContent(options) {
            var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

            var template = Handlebars.compile(options.$template);

            // insert new content
            this.$cachedLightbox.clone(true).html(template(data)).attr('data-template', options.template).insertAfter(this.$el.find(this.SELECTOR_LIGHTBOX_HEADER));
        }
    }], [{
        key: '_onClick',
        value: function _onClick(event) {
            if (!$(event.target).hasClass(_Enums2.default.CLASS.OPEN_LIGHTBOX)) {
                event.stopPropagation(); // Stop event bubbling to the body tag.
            }
        }
    }]);

    return OLightbox;
}(_appeaserComponentBase2.default);

// Export this so we can pick it up and import in main.js


module.exports = OLightbox;

},{"./../../../js/base/appeaser-component-base.js":39,"./../../../js/base/logger.js":44,"./../../../themes/stories/enums.js":54}],27:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _appeaserComponentBase = require('./../../../js/base/appeaser-component-base.js');

var _appeaserComponentBase2 = _interopRequireDefault(_appeaserComponentBase);

var _Logger = require('./../../../js/base/logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../../themes/stories/enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

var _Utils = require('./../../../themes/stories/utils.js');

var _Utils2 = _interopRequireDefault(_Utils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OMap = function (_AppeaserComponentBas) {
    _inherits(OMap, _AppeaserComponentBas);

    /**
     * Constructor, will run before page loaded
     */
    function OMap() {
        _classCallCheck(this, OMap);

        var _this = _possibleConstructorReturn(this, (OMap.__proto__ || Object.getPrototypeOf(OMap)).apply(this, arguments));

        _Logger2.default.INFO(_this.constructor.name, ':: Constructor');

        _this._jQueryScopeBinding();
        _this._declareConstants();
        _this.subscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed
        return _this;
    }

    /**
     * Destructor, will run after page unload (or destroy)
     */


    _createClass(OMap, [{
        key: 'destroy',
        value: function destroy() {
            _Logger2.default.INFO(this.constructor.name, ':: Destructor');

            this._detachDOMListeners();
            this._detachSubscribers();

            _get(OMap.prototype.__proto__ || Object.getPrototypeOf(OMap.prototype), 'destroy', this).call(this);
        }

        /************************************************************************************************************
         ******************************************** Internal functions ********************************************
         ************************************************************************************************************/

        /**
         * Declare class constants here
         * @private
         */

    }, {
        key: '_declareConstants',
        value: function _declareConstants() {

            this.SELECTOR_TOOLTIP_BOX = '.tooltip-box';
            this.TEMPLATE_TOOLTIP = '#store-tooltip';
            this.PUP_TOOLTIP_TEMPLATE = '#pup-tooltip';
            this.SELECTOR_INFO_BOX_CLOSE = '';
            this.DEFAULT_MAP_ID = "map";
            this.STYLE_ARRAY = [{
                "featureType": "water",
                "elementType": "geometry",
                "stylers": [{
                    "color": "#e9e9e9"
                }, {
                    "lightness": 17
                }]
            }, {
                "featureType": "landscape",
                "elementType": "geometry",
                "stylers": [{
                    "color": "#f5f5f5"
                }, {
                    "lightness": 20
                }]
            }, {
                "featureType": "road.highway",
                "elementType": "geometry.fill",
                "stylers": [{
                    "color": "#ffffff"
                }, {
                    "lightness": 17
                }]
            }, {
                "featureType": "road.highway",
                "elementType": "geometry.stroke",
                "stylers": [{
                    "color": "#ffffff"
                }, {
                    "lightness": 29
                }, {
                    "weight": 0.2
                }]
            }, {
                "featureType": "road.arterial",
                "elementType": "geometry",
                "stylers": [{
                    "color": "#ffffff"
                }, {
                    "lightness": 18
                }]
            }, {
                "featureType": "road.local",
                "elementType": "geometry",
                "stylers": [{
                    "color": "#ffffff"
                }, {
                    "lightness": 16
                }]
            }, {
                "featureType": "poi",
                "elementType": "geometry",
                "stylers": [{
                    "color": "#f5f5f5"
                }, {
                    "lightness": 21
                }]
            }, {
                "featureType": "poi.park",
                "elementType": "geometry",
                "stylers": [{
                    "color": "#dedede"
                }, {
                    "lightness": 21
                }]
            }, {
                "elementType": "labels.text.stroke",
                "stylers": [{
                    "visibility": "on"
                }, {
                    "color": "#ffffff"
                }, {
                    "lightness": 16
                }]
            }, {
                "elementType": "labels.text.fill",
                "stylers": [{
                    "saturation": 36
                }, {
                    "color": "#333333"
                }, {
                    "lightness": 40
                }]
            }, {
                "elementType": "labels.icon",
                "stylers": [{
                    "visibility": "off"
                }]
            }, {
                "featureType": "transit",
                "elementType": "geometry",
                "stylers": [{
                    "color": "#f2f2f2"
                }, {
                    "lightness": 19
                }]
            }, {
                "featureType": "administrative",
                "elementType": "geometry.fill",
                "stylers": [{
                    "color": "#fefefe"
                }, {
                    "lightness": 20
                }]
            }, {
                "featureType": "administrative",
                "elementType": "geometry.stroke",
                "stylers": [{
                    "color": "#fefefe"
                }, {
                    "lightness": 17
                }, {
                    "weight": 1.2
                }]
            }];
        }

        /**
         * Runs on DOM Ready
         * Should be used to attach DOM listeners etc
         * @private
         */

    }, {
        key: '_onDOMReady',
        value: function _onDOMReady() {
            _Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');

            this._cacheDOMElements();
            this._attachSubscribers();
            this._attachDOMListeners();

            this.markers = [];

            // callback for google maps init
            if (!$("#google-api").length) {
                window.initMap = this._initMap;
                $('body').append('<script id="google-api" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCC_n1HATwJCqx37UcsL7UgSbJIePUKSXs&callback=initMap&v=3" async defer></script>');
            }
        }
    }, {
        key: '_cacheDOMElements',
        value: function _cacheDOMElements() {
            this.$toolTipTemplate = $(this.TEMPLATE_TOOLTIP);
            this.$tooltipBox = this.$el.find(this.SELECTOR_TOOLTIP_BOX);
            this.$infoBox = this.$el.find(this.SELECTOR_INFO_BOX);
            this.$infoBoxClose = this.$el.find(this.SELECTOR_INFO_BOX_CLOSE);
            this.$pupTooltipTemplate = $(this.PUP_TOOLTIP_TEMPLATE);

            this.$mapObject = $('#map');
        }

        /**
         * Scopes "this" to use the "this" of the outside function
         * Since JQuery creates a new function with a new "this"
         * Attach all functions that needs to be binded here
         * @private
         */

    }, {
        key: '_jQueryScopeBinding',
        value: function _jQueryScopeBinding() {
            _Logger2.default.INFO(this.constructor.name, ':: _jQueryScopeBinding');

            this._onDOMReady = this._onDOMReady.bind(this);
            this._initMap = this._initMap.bind(this);
            this._onInitMap = this._onInitMap.bind(this);
            this._centerMapOnMarker = this._centerMapOnMarker.bind(this);
            this._closeInfoBox = this._closeInfoBox.bind(this);
            this._openInfoBox = this._openInfoBox.bind(this);
            this._clearMarkers = this._clearMarkers.bind(this);
            this._onMarkerClick = this._onMarkerClick.bind(this);
            this._createToolTipTemplate = this._createToolTipTemplate.bind(this);
        }

        /**
         * Attach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_attachSubscribers',
        value: function _attachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');

            this.subscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
            this.subscribe(_Enums2.default.ACTION.CREATE_MAP_MARKERS, this._createMarkers);
            this.subscribe(_Enums2.default.EVENT.ON_MAP_INITIALIZED, this._onInitMap);
            this.subscribe(_Enums2.default.ACTION.CLOSE_MAP_INFO_BOX, this._closeInfoBox);
            this.subscribe(_Enums2.default.ACTION.CLEAR_MAP_MARKERS, this._clearMarkers);

            if (this.$el.data('map-interactive')) {
                this.subscribe(_Enums2.default.ACTION.CENTER_MAP_ON_MARKER, this._centerMapOnMarker);
            }
        }

        /**
         * Detach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_detachSubscribers',
        value: function _detachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');

            this.unsubscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
            this.unsubscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
            this.unsubscribe(_Enums2.default.ACTION.CREATE_MAP_MARKERS, this._createMarkers);
            this.unsubscribe(_Enums2.default.EVENT.ON_MAP_INITIALIZED, this._onInitMap);
            this.unsubscribe(_Enums2.default.ACTION.CLOSE_MAP_INFO_BOX, this._closeInfoBox);
            this.unsubscribe(_Enums2.default.ACTION.CLEAR_MAP_MARKERS, this._clearMarkers);

            if (this.$el.data('map-interactive')) {
                this.unsubscribe(_Enums2.default.ACTION.CENTER_MAP_ON_MARKER, this._centerMapOnMarker);
            }
        }

        /**
         * At this point the framework is ready.
         * Add all publish events here (if any)
         * @private
         */

    }, {
        key: '_onFrameworkReady',
        value: function _onFrameworkReady() {}

        /**
         * Attach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_attachDOMListeners',
        value: function _attachDOMListeners() {
            this.$infoBoxClose.on('click', this._closeInfoBox);
        }

        /**
         * Detach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_detachDOMListeners',
        value: function _detachDOMListeners() {
            this.$infoBoxClose.off('click', this._closeInfoBox);
        }

        /************************************************************************************************************
         ****************************************** Implementation functions ****************************************
         ************************************************************************************************************/

        /**
         * Removes all markers
         * @private
         */

    }, {
        key: '_clearMarkers',
        value: function _clearMarkers() {
            this.markers.forEach(function (element) {
                element.setMap(null);
            });
            this.markers.length = 0;
        }

        /**
         * Closes any open info box in the map
         * @private
         */

    }, {
        key: '_closeInfoBox',
        value: function _closeInfoBox() {
            var _this2 = this;

            this.$infoBox.addClass(_Enums2.default.CLASS.DISPLAY_NONE);

            $.each(this.markers, function (index, marker) {
                marker.setIcon(_this2.icon);
                marker.active = false;
            });
        }

        /**
         * Opens infobox
         * @private
         */

    }, {
        key: '_openInfoBox',
        value: function _openInfoBox() {
            this.$infoBox.removeClass(_Enums2.default.CLASS.DISPLAY_NONE);
        }

        /**
         * Centers map on marker with store id
         * @private
         */

    }, {
        key: '_centerMapOnMarker',
        value: function _centerMapOnMarker(storeId) {
            var markerToCenterOn = this.markers.find(function (marker) {
                return marker.data.storeId == storeId;
            });

            this._closeInfoBox();
            this._openInfoBox(markerToCenterOn);

            this.$map.setCenter(markerToCenterOn.getPosition());
        }
    }, {
        key: '_createMarkers',
        value: function _createMarkers(markerData, verticalOffset, horizontalOffset, storeLocator) {
            var _this3 = this;

            var self = this;

            //If o-map is used in store-locator itcan have a different vertical and horizontal offset
            if (!verticalOffset && !horizontalOffset) {
                verticalOffset = self.TOOLTIP_VERTICAL_OFFSET;
                horizontalOffset = self.TOOLTIP_HORIZONTAL_OFFSET;
            }

            //Clear the map
            this.markers.map(function (m) {
                m.setMap(null);
            });

            this.markers = [];

            var bounds = new google.maps.LatLngBounds();

            var _loop = function _loop() {

                // Create a marker and set its position.
                var marker = new google.maps.Marker({
                    map: self.$map,
                    icon: self.icon,
                    position: { lat: markerData[i].latitude, lng: markerData[i].longitude },
                    data: markerData[i].data,
                    title: markerData[i].title,
                    name: markerData[i].title,
                    optimized: false
                });

                bounds.extend(marker.getPosition());

                // adds hover event
                if (!Modernizr.touchevents) {

                    google.maps.event.addListener(marker, 'mouseover', function () {

                        //Sets the hovered marker icon to active state
                        marker.setIcon(self.iconHover);

                        if (storeLocator) {
                            //Creates the hover tooltip according to store-locator design, can vary for all brands
                            self._createToolTipTemplate(marker);
                            self.$tooltipBox.html(self.tooltipContent);
                        } else {
                            //Creates the hover tooltip according to pickup location design, this has to be the same for all brands
                            var tooltipTemplate = Handlebars.compile(self.$pupTooltipTemplate.html()),
                                tooltipContent = tooltipTemplate({
                                "title": marker.title
                            });
                            self.$tooltipBox.html(tooltipContent);
                        }

                        if (verticalOffset && horizontalOffset) {
                            self.$tooltipBox.removeClass(_Enums2.default.CLASS.DISPLAY_NONE);
                        }

                        // find the markers position in the map and convert it to a pixel position in the DOM
                        var scale = Math.pow(2, self.$map.getZoom()),
                            markerPosition = self.$map.getProjection().fromLatLngToPoint(marker.getPosition()),
                            mapCenterPosition = self.$map.getProjection().fromLatLngToPoint(self.$map.getCenter()),
                            pixelOffset = new google.maps.Point(Math.floor((markerPosition.x - mapCenterPosition.x) * scale + self.$mapObject.width() / 2), Math.floor((markerPosition.y - mapCenterPosition.y) * scale + self.$mapObject.height() / 2));

                        var tooltipX = void 0,
                            tooltipY = void 0;

                        //If the the tooltip can contain 1 or more rows of store information the tooltip-box needs a flexible height
                        if (self.TOOLTIP_HAS_FLEXIBLE_HEIGHT) {
                            tooltipX = pixelOffset.x + self.$tooltipBox.width() / 2 + horizontalOffset;
                            tooltipY = pixelOffset.y - self.$tooltipBox.height() - verticalOffset;
                        } else {
                            tooltipX = pixelOffset.x + horizontalOffset;
                            tooltipY = pixelOffset.y - verticalOffset;
                        }

                        self.$tooltipBox.css({ top: tooltipY + 'px', left: tooltipX + 'px' });
                    });

                    // add mouse out event
                    google.maps.event.addListener(marker, 'mouseout', function () {

                        //If the marker is not active ('clicked'), the hovered icon should go back to default icon
                        if (!marker.active) {
                            marker.setIcon(self.icon);
                        }

                        //Hides the small tooltip
                        self.$tooltipBox.addClass(_Enums2.default.CLASS.DISPLAY_NONE);
                    });
                }

                google.maps.event.addListener(marker, 'click', function () {
                    //sets all the other markers to default icon and deactivate them
                    for (var j = 0; j < _this3.markers.length; j++) {
                        _this3.markers[j].setIcon(_this3.icon);
                        _this3.markers[j].active = false;
                    }

                    //Activates the clicked marker and set the icon to the selected state
                    marker.setIcon(_this3.iconHover);
                    marker.active = true;

                    self._onMarkerClick(marker);
                });

                _this3.markers.push(marker);
            };

            for (var i = 0; i < markerData.length; i++) {
                _loop();
            }

            google.maps.event.trigger(this.$map, 'resize');

            // center map on markers
            this.$map.fitBounds(bounds);

            //remove one zoom level to ensure no marker is on the edge.
            //map.setZoom(map.getZoom()-1);

            // set a minimum zoom
            // if you got only 1 marker or all markers are on the same address map will be zoomed too much.
            if (this.$map.getZoom() > 15) {
                this.$map.setZoom(15);
            }
        }

        /**
         * Handles a click on a marker. Can be overridden in each brand to get the brand specific behavior.
         * @private
         */

    }, {
        key: '_onMarkerClick',
        value: function _onMarkerClick(marker) {

            // The map will only be informative by default as it is in GOEP, to override set the below data attribute to true
            if (this.$el.data('map-interactive')) {
                this.publish(_Enums2.default.EVENT.ON_MAP_MARKER_CLICK, marker.data.storeId);
            }
        }
    }, {
        key: '_initMap',
        value: function _initMap() {
            this.iconHover = _Utils2.default.Markers.iconHover();
            this.icon = _Utils2.default.Markers.icon();

            this.publish(_Enums2.default.EVENT.ON_MAP_INITIALIZED);
        }

        /**
         * Callback function onOrderBoxClick
         * @param e
         * @private
         */

    }, {
        key: '_onInitMap',
        value: function _onInitMap() {

            // Create a map object and specify the DOM element for display.
            this.$map = new google.maps.Map(document.getElementById(this.$el.data("map-id") || this.DEFAULT_MAP_ID), {
                center: { lat: 9, lng: 10 },
                scrollwheel: false,
                // Apply the map style array to the map.
                styles: this.STYLE_ARRAY,
                zoom: 1,
                mapTypeControlOptions: {
                    style: google.maps.MapTypeControlStyle.HORIZONTAL_BAR,
                    position: google.maps.ControlPosition.TOP_RIGHT
                }
            });
        }
    }, {
        key: '_createToolTipTemplate',
        value: function _createToolTipTemplate(marker) {
            var tooltipTemplate = Handlebars.compile(this.$toolTipTemplate.html());
            this.tooltipContent = tooltipTemplate({
                "title": marker.title
            });
        }
    }]);

    return OMap;
}(_appeaserComponentBase2.default);

// Export this so we can pick it up and import in main.js


module.exports = OMap;

},{"./../../../js/base/appeaser-component-base.js":39,"./../../../js/base/logger.js":44,"./../../../themes/stories/enums.js":54,"./../../../themes/stories/utils.js":87}],28:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _appeaserComponentBase = require('./../../../js/base/appeaser-component-base.js');

var _appeaserComponentBase2 = _interopRequireDefault(_appeaserComponentBase);

var _Logger = require('./../../../js/base/logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../../themes/stories/enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OMyDetails = function (_AppeaserComponentBas) {
  _inherits(OMyDetails, _AppeaserComponentBas);

  /**
   * Constructor
   */
  function OMyDetails() {
    _classCallCheck(this, OMyDetails);

    var _this = _possibleConstructorReturn(this, (OMyDetails.__proto__ || Object.getPrototypeOf(OMyDetails)).apply(this, arguments));

    _Logger2.default.INFO(_this.constructor.name, ':: Constructor');

    _this._declareConstants();
    _this._jQueryScopeBinding();
    _this.subscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed
    return _this;
  }

  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OMyDetails, [{
    key: 'destroy',
    value: function destroy() {
      _Logger2.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();
      this._detachSubscribers();

      _get(OMyDetails.prototype.__proto__ || Object.getPrototypeOf(OMyDetails.prototype), 'destroy', this).call(this);
    }

    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: '_declareConstants',
    value: function _declareConstants() {
      // CONSTANTS
      this.SELECTOR_EMAIL_INPUT = '.email-field .a-input';
      this.SELECTOR_PASSWORD_INPUT = '.password-field .a-input';
      this.CLASS_EMAIL_TOUCHED = 'email-touched';
    }

    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: '_onDOMReady',
    value: function _onDOMReady() {
      _Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();
      this._attachSubscribers();
      this._attachDOMListeners();
      this._setEmailInputValue();
    }

    /**
     * Caching DOM elements for performance
     * @private
     */

  }, {
    key: '_cacheDOMElements',
    value: function _cacheDOMElements() {
      this.$emailInput = this.$el.find(this.SELECTOR_EMAIL_INPUT);
      this.$passwordInput = this.$el.find(this.SELECTOR_PASSWORD_INPUT);
    }

    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: '_jQueryScopeBinding',
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._onEmailKeyUp = this._onEmailKeyUp.bind(this);
      this._setEmailInputValue = this._setEmailInputValue.bind(this);
    }

    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: '_attachSubscribers',
    value: function _attachSubscribers() {
      _Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }

    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: '_detachSubscribers',
    value: function _detachSubscribers() {
      _Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
      this.unsubscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }

    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: '_onFrameworkReady',
    value: function _onFrameworkReady() {}

    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: '_attachDOMListeners',
    value: function _attachDOMListeners() {
      this.$emailInput.on('change', this._onEmailKeyUp);
    }

    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: '_detachDOMListeners',
    value: function _detachDOMListeners() {
      this.$emailInput.off('change', this._onEmailKeyUp);
    }

    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Checks if form is invalid on submit button click and if so takes an appropriate action
     * @private
     */

  }, {
    key: '_onEmailKeyUp',
    value: function _onEmailKeyUp() {
      if (this.$emailInput.val() != this.currentEmail) {
        this.$passwordInput.removeAttr("disabled");
        this.$el.addClass(this.CLASS_EMAIL_TOUCHED);
      } else {
        this.$passwordInput.attr("disabled");
        this.$el.removeClass(this.CLASS_EMAIL_TOUCHED);
      }
    }

    /**
     * Fills the email input with the signed in email address
     * @private
     */

  }, {
    key: '_setEmailInputValue',
    value: function _setEmailInputValue() {
      this.currentEmail = this.$emailInput.val();
    }
  }]);

  return OMyDetails;
}(_appeaserComponentBase2.default);

// Export this so we can pick it up and import in main.js


module.exports = OMyDetails;

},{"./../../../js/base/appeaser-component-base.js":39,"./../../../js/base/logger.js":44,"./../../../themes/stories/enums.js":54}],29:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _olapicBase = require('./../../../js/base/olapic-base.js');

var _olapicBase2 = _interopRequireDefault(_olapicBase);

var _Logger = require('./../../../js/base/logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../../themes/stories/enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OlapicGalleryBase = function (_OlapicBase) {
    _inherits(OlapicGalleryBase, _OlapicBase);

    /**
     * Constructor, will run before page loaded
     */
    function OlapicGalleryBase() {
        _classCallCheck(this, OlapicGalleryBase);

        var _this = _possibleConstructorReturn(this, (OlapicGalleryBase.__proto__ || Object.getPrototypeOf(OlapicGalleryBase)).apply(this, arguments));

        _Logger2.default.INFO(_this.constructor.name, ':: Constructor');

        _this._jQueryScopeBinding();
        _this._declareConstants();
        _this.subscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed
        return _this;
    }

    /**
     * Destructor, will run after page unload (or destroy)
     */


    _createClass(OlapicGalleryBase, [{
        key: 'destroy',
        value: function destroy() {
            _Logger2.default.INFO(this.constructor.name, ':: Destructor');

            this._detachDOMListeners();
            this._detachSubscribers();

            _get(OlapicGalleryBase.prototype.__proto__ || Object.getPrototypeOf(OlapicGalleryBase.prototype), 'destroy', this).call(this);
        }

        /************************************************************************************************************
         ******************************************** Internal functions ********************************************
         ************************************************************************************************************/

        /**
         * Declare class constants here
         * @private
         */

    }, {
        key: '_declareConstants',
        value: function _declareConstants() {
            // Handlebar template id
            this.HANDLEBAR_SOURCE = "#olapic-gallery-slide";

            // Selectors
            this.SELECTOR_CONTENT = '.js-placeholder';
            this.SELECTOR_OLAPIC_IMAGE = '.o-olapic-image';
            this.SELECTOR_USER_NAME = '.m-instagram-user > .a-label';
            this.SELECTOR_USER_AVATAR = '.m-instagram-user > .a-image';
            this.SELECTOR_OLAPIC_SLIDER = '.o-olapic-slider';
            this.SELECTOR_BUTTON_MORE = '.a-button.load-more';

            this.PAGE_SETTINGS = {
                COLS_SM: 12,
                TOTAL_COLS_SM: 12,
                COLS_MD: 24,
                TOTAL_COLS_MD: 24,
                COLS_LG: 24,
                TOTAL_COLS_LG: 24
            };

            this.COMPONENT_SETTINGS = {
                COLS_SM: 6,
                TOTAL_COLS_SM: 12,
                COLS_MD: 3,
                TOTAL_COLS_MD: 24,
                COLS_LG: 8,
                TOTAL_COLS_LG: 24
            };

            this.RESIZE_TIMER = undefined;
            this.RESIZE_TIMEOUT = 50;
        }

        /**
         * Called on onDomReady, cache DOM elements
         * @private
         */

    }, {
        key: '_cacheDOMElements',
        value: function _cacheDOMElements() {
            this.settings = this.$el.data();
            this.settings.version = this.settings.version ? this.settings.version : 'v2.2';
            this.settings.wrapResponses = this.settings.wrapResponses ? this.settings.wrapResponses : '1';
            this.$btnMore = this.$el.find(this.SELECTOR_BUTTON_MORE);
            this.$placeholder = this.$el.find(this.SELECTOR_CONTENT);
            this.$window = $(window);
            this.$handlebarOlapicSlideTemplate = $(this.HANDLEBAR_SOURCE).html();
            this.$olapicImageTemplate = $('#' + this.settings.template).html();
        }

        /**
         * Scopes "this" to use the "this" of the outside function
         * Since JQuery creates a new function with a new "this"
         * Attach all functions that needs to be binded here
         * @private
         */

    }, {
        key: '_jQueryScopeBinding',
        value: function _jQueryScopeBinding() {
            this._onDOMReady = this._onDOMReady.bind(this);
            this._onMediaFetched = this._onMediaFetched.bind(this);
            this._renderTemplate = this._renderTemplate.bind(this);
            this._onOlapicImageClick = this._onOlapicImageClick.bind(this);
            this._onResize = this._onResize.bind(this);
            this._onBtnMoreClick = this._onBtnMoreClick.bind(this);
        }

        /**
         * Attach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_attachSubscribers',
        value: function _attachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');

            this.subscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
            this.subscribe(_Enums2.default.EVENT.ON_PAGE_RESIZE, this._onResize);
            this.subscribe(_Enums2.default.EVENT.ON_PAGE_CONTENT_SHOW, this._onResize);
            this.subscribe(_Enums2.default.ACTION.UPDATE_OLAPIC_IMAGES, this._updateOlapicImages);
        }

        /**
         * Detach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_detachSubscribers',
        value: function _detachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');

            this.unsubscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
            this.unsubscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
            this.unsubscribe(_Enums2.default.EVENT.ON_PAGE_RESIZE, this._onResize);
            this.unsubscribe(_Enums2.default.EVENT.ON_PAGE_CONTENT_SHOW, this._onResize);
            this.unsubscribe(_Enums2.default.ACTION.UPDATE_OLAPIC_IMAGES, this._updateOlapicImages);
        }

        /**
         * At this point the framework is ready.
         * Add all publish events here (if any)
         * @private
         */

    }, {
        key: '_onFrameworkReady',
        value: function _onFrameworkReady() {}

        /**
         * Attach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_attachDOMListeners',
        value: function _attachDOMListeners() {
            this.$el.on("click", this.SELECTOR_OLAPIC_IMAGE, this._onOlapicImageClick);
            this.$btnMore.on("click", this._onBtnMoreClick);
        }

        /**
         * Detach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_detachDOMListeners',
        value: function _detachDOMListeners() {
            this.$el.off("click", this.SELECTOR_OLAPIC_IMAGE, this._onOlapicImageClick);
            this.$btnMore.off("click", this._onBtnMoreClick);
        }

        /**
         * Runs on DOM Ready
         * Should be used to attach DOM listeners etc
         * @private
         */

    }, {
        key: '_onDOMReady',
        value: function _onDOMReady() {
            _Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');

            this._cacheDOMElements();
            this._attachSubscribers();
            this._attachDOMListeners();

            if (this.settings.productId) {
                this.createProductUrlRequest(false);
            } else {
                this.createRegularUrlRequest();
            }
        }

        /************************************************************************************************************
         ****************************************** Implementation functions ****************************************
         ************************************************************************************************************/

        /**
         * Callback for updating olapic images when product is changed
         * @param productId
         * @private
         */

    }, {
        key: '_updateOlapicImages',
        value: function _updateOlapicImages(productId) {
            this.$el.attr('data-product-id', productId);
            this.settings.productId = this.$el.attr("data-product-id");
            this.createProductUrlRequest(true);
        }

        /**
         * "Get more" button click event handler
         * @private
         */

    }, {
        key: '_onBtnMoreClick',
        value: function _onBtnMoreClick() {
            this.fetchNext(this.settings.count);
        }

        /**
         * Callback containing the result fetched from olapic
         * @private
         */

    }, {
        key: '_onMediaFetched',
        value: function _onMediaFetched(changeProduct, mediaLength) {
            _Logger2.default.INFO(this.constructor.name, ':: _onMediaFetched ');

            if (this._media.media.length) {
                this.$el.addClass(_Enums2.default.CLASS.IS_VISIBLE_STATE);
                // loop through result
                this._media.media.slice(-mediaLength).map(this._renderTemplate);
                // Cache all olapic images
                this.$olapicImages = this.$el.find(this.SELECTOR_OLAPIC_IMAGE);

                // trigger resize to scale all images to squares
                this._onResize();
            }
        }

        /**
         * Renders a template o-olapic-image template
         * @param media
         * @private
         */

    }, {
        key: '_renderTemplate',
        value: function _renderTemplate(media) {
            // get template
            var $template = $(this.$olapicImageTemplate);

            $template.css({ 'background-image': 'url(' + media.images.normal + ')' });
            $template.find(this.SELECTOR_USER_NAME).text(media.uploader.name);
            $template.find(this.SELECTOR_USER_AVATAR).attr('src', media.uploader.avatar_url);

            var settings = void 0;

            if (this.settings.count == 24) {
                settings = this.PAGE_SETTINGS;
            } else {
                settings = this.COMPONENT_SETTINGS;
            }

            this.$placeholder.children().append(this._createColumn(settings).append($template));
        }

        /**
         * Creates a column with correct grid size
         *
         * @param settings
         * @returns {*|jQuery|HTMLElement}
         * @private
         */

    }, {
        key: '_createColumn',
        value: function _createColumn(settings) {
            var $col = $('<div/>');

            if (settings.COLS_SM > 0) {
                $col.addClass('u-cols-sm-' + settings.COLS_SM + '-' + settings.TOTAL_COLS_SM);
            }
            if (settings.COLS_MD > 0) {
                $col.addClass('u-cols-md-' + settings.COLS_MD + '-' + settings.TOTAL_COLS_MD);
            }
            if (settings.COLS_LG > 0) {
                $col.addClass('u-cols-lg-' + settings.COLS_LG + '-' + settings.TOTAL_COLS_LG);
            }
            if (settings.SPACERS_LG) {
                $col.addClass('u-cols-' + settings.SPACERS_LG.placement + '-lg-' + settings.SPACERS_LG.amount + '-' + settings.TOTAL_COLS_LG);
            }

            return $col;
        }

        /**
         * Click on olapic image, opens gallery lightbox
         * @param e
         * @private
         */

    }, {
        key: '_onOlapicImageClick',
        value: function _onOlapicImageClick(e) {
            e.preventDefault();
            var $this = $(e.currentTarget),
                templateID = $this.data("template"),
                indexOfCurrentTarget = this.$olapicImages.index($this);

            this.publish(_Enums2.default.ACTION.SHOW_LIGHTBOX, {
                template: templateID,
                $el: $this,
                nopadding: true,
                classes: 'olapic-style'
            });
            this._initOlapicGallery(indexOfCurrentTarget);
        }

        /**
         * Injects slides into the olapic slider
         *
         * @private
         */

    }, {
        key: '_initOlapicGallery',
        value: function _initOlapicGallery(index) {
            var slider = $(this.SELECTOR_OLAPIC_SLIDER),
                slick = slider.slick("getSlick"),
                template = Handlebars.compile(this.$handlebarOlapicSlideTemplate),
                slides = template({ "media": this._media.media });

            slick.addSlide(slides);
            slick.goTo(index, true);

            this.publish(_Enums2.default.EVENT.ON_OLAPIC_SLIDES_ADDED, index);
        }

        /**
         * OnResize
         * @private
         */

    }, {
        key: '_onResize',
        value: function _onResize() {
            var _this2 = this;

            clearTimeout(this.RESIZE_TIMER);
            this.RESIZE_TIMER = setTimeout(function () {
                if (_this2.$olapicImages) {
                    var width = _this2.$olapicImages.first().width();
                    _this2.$olapicImages.css("height", width);
                }
            }, this.RESIZE_TIMEOUT);
        }
    }]);

    return OlapicGalleryBase;
}(_olapicBase2.default);

// Export this so we can pick it up and import in main.js


module.exports = OlapicGalleryBase;

},{"./../../../js/base/logger.js":44,"./../../../js/base/olapic-base.js":46,"./../../../themes/stories/enums.js":54}],30:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _appeaserComponentBase = require('./../../../js/base/appeaser-component-base.js');

var _appeaserComponentBase2 = _interopRequireDefault(_appeaserComponentBase);

var _Logger = require('./../../../js/base/logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../../themes/stories/enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OOlapicStyleSlide = function (_AppeaserComponentBas) {
  _inherits(OOlapicStyleSlide, _AppeaserComponentBas);

  /**
   * Constructor, will run before page loaded
   */
  function OOlapicStyleSlide() {
    _classCallCheck(this, OOlapicStyleSlide);

    var _this = _possibleConstructorReturn(this, (OOlapicStyleSlide.__proto__ || Object.getPrototypeOf(OOlapicStyleSlide)).apply(this, arguments));

    _Logger2.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();
    _this._declareConstants();
    _this.subscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed
    return _this;
  }

  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OOlapicStyleSlide, [{
    key: 'destroy',
    value: function destroy() {
      _Logger2.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();
      this._detachSubscribers();

      _get(OOlapicStyleSlide.prototype.__proto__ || Object.getPrototypeOf(OOlapicStyleSlide.prototype), 'destroy', this).call(this);
    }

    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: '_declareConstants',
    value: function _declareConstants() {
      this.SELECTOR_SLIDER = '.olapic-slider';
    }

    /**
     * Called on onDomReady, cache DOM elements
     * @private
     */

  }, {
    key: '_cacheDOMElements',
    value: function _cacheDOMElements() {
      this.$slider = this.$el.find(this.SELECTOR_SLIDER);
    }

    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: '_jQueryScopeBinding',
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
    }

    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: '_attachSubscribers',
    value: function _attachSubscribers() {
      _Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }

    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: '_detachSubscribers',
    value: function _detachSubscribers() {
      _Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
      this.unsubscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
    }

    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: '_onFrameworkReady',
    value: function _onFrameworkReady() {}

    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: '_attachDOMListeners',
    value: function _attachDOMListeners() {}

    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: '_detachDOMListeners',
    value: function _detachDOMListeners() {}

    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: '_onDOMReady',
    value: function _onDOMReady() {
      _Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();
      this._attachSubscribers();
      this._attachDOMListeners();
      this._initSlider();
    }

    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Initi
     * @private
     */

  }, {
    key: '_initSlider',
    value: function _initSlider() {
      this.$slider.slick({
        prevArrow: "<div class='product-slider-arrow'></div>",
        nextArrow: "<div class='product-slider-arrow'></div>",
        infinite: false,
        speed: 300,
        draggable: false,
        touchMove: false
      });

      this.$slider.children().show();
    }
  }]);

  return OOlapicStyleSlide;
}(_appeaserComponentBase2.default);

// Export this so we can pick it up and import in main.js


module.exports = OOlapicStyleSlide;

},{"./../../../js/base/appeaser-component-base.js":39,"./../../../js/base/logger.js":44,"./../../../themes/stories/enums.js":54}],31:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _appeaserComponentBase = require('./../../../js/base/appeaser-component-base.js');

var _appeaserComponentBase2 = _interopRequireDefault(_appeaserComponentBase);

var _Logger = require('./../../../js/base/logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../../themes/stories/enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OOlapicStyleSlider = function (_AppeaserComponentBas) {
  _inherits(OOlapicStyleSlider, _AppeaserComponentBas);

  /**
   * Constructor, will run before page loaded
   */
  function OOlapicStyleSlider() {
    _classCallCheck(this, OOlapicStyleSlider);

    var _this = _possibleConstructorReturn(this, (OOlapicStyleSlider.__proto__ || Object.getPrototypeOf(OOlapicStyleSlider)).apply(this, arguments));

    _Logger2.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();
    _this._declareConstants();
    _this.subscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed
    return _this;
  }

  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OOlapicStyleSlider, [{
    key: 'destroy',
    value: function destroy() {
      _Logger2.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();
      this._detachSubscribers();

      _get(OOlapicStyleSlider.prototype.__proto__ || Object.getPrototypeOf(OOlapicStyleSlider.prototype), 'destroy', this).call(this);
    }

    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: '_declareConstants',
    value: function _declareConstants() {
      this.CLASS_ACTIVE_SLIDE = 'active-slide';
    }

    /**
     * Called on onDomReady, cache DOM elements
     * @private
     */

  }, {
    key: '_cacheDOMElements',
    value: function _cacheDOMElements() {}

    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: '_jQueryScopeBinding',
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._initializeActiveSlide = this._initializeActiveSlide.bind(this);
      this._scaleVisibleSlides = this._scaleVisibleSlides.bind(this);
    }

    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: '_attachSubscribers',
    value: function _attachSubscribers() {
      _Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
      this.subscribe(_Enums2.default.EVENT.ON_OLAPIC_SLIDES_ADDED, this._onSlidesAdded);
    }

    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: '_detachSubscribers',
    value: function _detachSubscribers() {
      _Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
      this.unsubscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
      this.unsubscribe(_Enums2.default.EVENT.ON_OLAPIC_SLIDES_ADDED, this._onSlidesAdded);
    }

    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: '_onFrameworkReady',
    value: function _onFrameworkReady() {}

    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: '_attachDOMListeners',
    value: function _attachDOMListeners() {}

    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: '_detachDOMListeners',
    value: function _detachDOMListeners() {}

    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: '_onDOMReady',
    value: function _onDOMReady() {
      _Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();
      this._attachSubscribers();
      this._attachDOMListeners();

      this._initSlider();
    }

    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Initializes slider
     * @private
     */

  }, {
    key: '_initSlider',
    value: function _initSlider() {
      this.$el.slick({
        prevArrow: "<div class='main-slider-arrow'></div>",
        nextArrow: "<div class='main-slider-arrow'></div>",
        speed: 300
      });

      this.$el.on('afterChange', this._initializeActiveSlide);

      if (!Modernizr.mq(_Enums2.default.MQ.IS_DESKTOP)) {
        this.$el.on('setPosition', this._scaleVisibleSlides);
      }
    }

    /**
     * Scales the currently visible slides
     * @private
     */

  }, {
    key: '_scaleVisibleSlides',
    value: function _scaleVisibleSlides() {
      if (!this.$activeSlide) return;

      var $imageContainer = this.$activeSlide.find('.image'),
          $nextImageContainer = this.$activeSlide.next().find('.image'),
          $prevImageContainer = this.$activeSlide.prev().find('.image');

      $imageContainer.height($imageContainer.width());
      $nextImageContainer.height($nextImageContainer.width());
      $prevImageContainer.height($prevImageContainer.width());

      this.$activeSlide.css('height', '');
      this.$el.find('.o-olapic-slide:not(.active-slide)').height(this.$activeSlide.height());
    }

    /**
     * Initializes the currently active slide
     * @private
     */

  }, {
    key: '_initializeActiveSlide',
    value: function _initializeActiveSlide(e, slick, currentSlide) {
      if (e.target == this.$el[0]) {
        this.$activeSlide = $(e.currentTarget).find('.o-olapic-slide[data-slick-index=' + currentSlide + ']');
        this.$el.find('.slick-slide').removeClass(this.CLASS_ACTIVE_SLIDE);
        this.$activeSlide.addClass(this.CLASS_ACTIVE_SLIDE);

        this.__mediator._scanNewBlock(this.$activeSlide[0]);
      }
    }

    /**
     * Handle slides added
     * @private
     */

  }, {
    key: '_onSlidesAdded',
    value: function _onSlidesAdded(activeSlideIndex) {
      this.$activeSlide = this.$el.find('[data-slick-index=' + activeSlideIndex + ']').addClass(this.CLASS_ACTIVE_SLIDE);
    }
  }]);

  return OOlapicStyleSlider;
}(_appeaserComponentBase2.default);

// Export this so we can pick it up and import in main.js


module.exports = OOlapicStyleSlider;

},{"./../../../js/base/appeaser-component-base.js":39,"./../../../js/base/logger.js":44,"./../../../themes/stories/enums.js":54}],32:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _appeaserComponentBase = require('./../../../js/base/appeaser-component-base.js');

var _appeaserComponentBase2 = _interopRequireDefault(_appeaserComponentBase);

var _Logger = require('./../../../js/base/logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../../themes/stories/enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

var _Utils = require('./../../../themes/stories/utils.js');

var _Utils2 = _interopRequireDefault(_Utils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OPageContent = function (_AppeaserComponentBas) {
    _inherits(OPageContent, _AppeaserComponentBas);

    /**
     * Constructor, will run before page loaded
     */
    function OPageContent() {
        _classCallCheck(this, OPageContent);

        var _this = _possibleConstructorReturn(this, (OPageContent.__proto__ || Object.getPrototypeOf(OPageContent)).apply(this, arguments));

        _Logger2.default.INFO(_this.constructor.name, ':: Constructor');

        _this._declareConstants();
        _this._jQueryScopeBinding();

        _this.subscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed
        return _this;
    }

    /**
     * Destructor, will run after page unload (or destroy)
     */


    _createClass(OPageContent, [{
        key: 'destroy',
        value: function destroy() {
            _Logger2.default.INFO(this.constructor.name, ':: Destructor');

            this._detachDOMListeners();
            this._detachSubscribers();

            _get(OPageContent.prototype.__proto__ || Object.getPrototypeOf(OPageContent.prototype), 'destroy', this).call(this);
        }

        /************************************************************************************************************
         ******************************************** Internal functions ********************************************
         ************************************************************************************************************/

        /**
         * Declare class constants here
         * @private
         */

    }, {
        key: '_declareConstants',
        value: function _declareConstants() {
            this.SELECTOR_PAGE_CONTENT = '.o-page-content';
        }

        /**
         * Runs on DOM Ready
         * Should be used to attach DOM listeners etc
         * @private
         */

    }, {
        key: '_onDOMReady',
        value: function _onDOMReady() {
            _Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');

            this._cacheDOMElements();
            this._attachSubscribers();
            this._attachDOMListeners();
        }

        /**
         * Caching DOM elements for performance
         * @private
         */

    }, {
        key: '_cacheDOMElements',
        value: function _cacheDOMElements() {
            this.$window = $(window);
        }

        /**
         * Scopes "this" to use the "this" of the outside function
         * Since JQuery creates a new function with a new "this"
         * Attach all functions that needs to be binded here
         * @private
         */

    }, {
        key: '_jQueryScopeBinding',
        value: function _jQueryScopeBinding() {
            this._onDOMReady = this._onDOMReady.bind(this);
            this._showPageContent = this._showPageContent.bind(this);
            this._hidePageContent = this._hidePageContent.bind(this);
            this._updateMarginMap = this._updateMarginMap.bind(this);
        }

        /**
         * Attach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_attachSubscribers',
        value: function _attachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');
            this.subscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
            this.subscribe(_Enums2.default.ACTION.SHOW_PAGE_CONTENT, this._showPageContent);
            this.subscribe(_Enums2.default.ACTION.HIDE_PAGE_CONTENT, this._hidePageContent);
            this.subscribe(_Enums2.default.ACTION.UPDATE_PAGE_CONTENT_MARGIN_CONTRIBUTION, this._updateMarginMap);
        }

        /**
         * Detach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_detachSubscribers',
        value: function _detachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');
            this.unsubscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
            this.unsubscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
            this.unsubscribe(_Enums2.default.ACTION.SHOW_PAGE_CONTENT, this._showPageContent);
            this.unsubscribe(_Enums2.default.ACTION.HIDE_PAGE_CONTENT, this._hidePageContent);
            this.unsubscribe(_Enums2.default.ACTION.UPDATE_PAGE_CONTENT_MARGIN_CONTRIBUTION, this._updateMarginMap);
        }

        /**
         * At this point the framework is ready.
         * Add all publish events here (if any)
         * @private
         */

    }, {
        key: '_onFrameworkReady',
        value: function _onFrameworkReady() {}

        /**
         * Attach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_attachDOMListeners',
        value: function _attachDOMListeners() {}

        /**
         * Detach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_detachDOMListeners',
        value: function _detachDOMListeners() {}

        /************************************************************************************************************
         ****************************************** Implementation functions ****************************************
         ************************************************************************************************************/

        /**
         * Updates the map of margin contributors. A margin contributor is an element contributing to the top
         * margin of this component. By publishing an UPDATE_PAGE_CONTENT_MARGIN_CONTRIBUTION event, the element
         * can change its contribution. The purpose of this solution is to allow multiple elements to update the top
         * margin of the page content without interference.
         * @param margin - The new margin the element making the call wants to contribute with.
         * @param $element - The element making a margin contribution.
         * @private
         */

    }, {
        key: '_updateMarginMap',
        value: function _updateMarginMap(args) {

            //If this is the first contributor
            if (!this.marginContributors) {

                if (args.duration) {
                    this.$el.animate({ 'margin-top': args.margin }, args.duration);
                } else {
                    this.$el.css('margin-top', args.margin);
                }

                this.marginContributors = [{ element: args.element, margin: args.margin, selector: args.selector }];
                this.totalMargin = args.margin;
                return;
            }

            var contributor = undefined;

            //Check if the element is an existing contributor
            for (var i = 0; i < this.marginContributors.length; i++) {

                if (args.element.is(this.marginContributors[i].element) || args.element.is(this.marginContributors[i].selector)) {
                    contributor = this.marginContributors[i];
                }
            }

            //If the element is not an existing contirbutor, create a new one.
            if (!contributor) {
                var newContributor = { element: args.element, margin: 0, selector: args.selector };
                this.marginContributors.push(newContributor);
                contributor = newContributor;
            }

            this.totalMargin += args.margin - contributor.margin;

            //Update the top margin
            if (args.duration) {
                this.$el.animate({ 'margin-top': this.totalMargin }, args.duration);
            } else {
                this.$el.css('margin-top', this.totalMargin);
            }

            this.publish(_Enums2.default.EVENT.ON_PAGE_CONTENT_MARGIN_CHANGE, contributor.element);

            //Update the map
            contributor.margin = args.margin;
        }

        /**
         * Displays page content
         * @private
         */

    }, {
        key: '_showPageContent',
        value: function _showPageContent() {
            var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};


            this.$el.css('display', '');
            this.publish(_Enums2.default.EVENT.ON_PAGE_CONTENT_SHOW);
            if (options.hasOwnProperty('restoreScrollPosition')) {
                this.$window.scrollTop(options.restoreScrollPosition);
            }
        }

        /**
         * Hides page content
         * @private
         */

    }, {
        key: '_hidePageContent',
        value: function _hidePageContent() {
            this.$el.hide();
            this.publish(_Enums2.default.EVENT.ON_PAGE_CONTENT_HIDE);
        }
    }]);

    return OPageContent;
}(_appeaserComponentBase2.default);

// Export this so we can pick it up and import in main.js


module.exports = OPageContent;

},{"./../../../js/base/appeaser-component-base.js":39,"./../../../js/base/logger.js":44,"./../../../themes/stories/enums.js":54,"./../../../themes/stories/utils.js":87}],33:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _appeaserComponentBase = require('./../../../js/base/appeaser-component-base.js');

var _appeaserComponentBase2 = _interopRequireDefault(_appeaserComponentBase);

var _Logger = require('./../../../js/base/logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../../themes/stories/enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

var _Utils = require('./../../../themes/stories/utils.js');

var _Utils2 = _interopRequireDefault(_Utils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OPage = function (_AppeaserComponentBas) {
    _inherits(OPage, _AppeaserComponentBas);

    /**
     * Constructor, will run before page loaded
     */
    function OPage() {
        _classCallCheck(this, OPage);

        var _this = _possibleConstructorReturn(this, (OPage.__proto__ || Object.getPrototypeOf(OPage)).apply(this, arguments));

        _Logger2.default.INFO(_this.constructor.name, ':: Constructor');

        _this._jQueryScopeBinding();
        _this._queryDOMElements();
        _this._declareConstants();
        _this._attachDOMListeners();
        _this._attachSubscribers();
        return _this;
    }

    /**
     * Destructor, will run after page unload (or destroy)
     */


    _createClass(OPage, [{
        key: 'destroy',
        value: function destroy() {
            _Logger2.default.INFO(this.constructor.name, ':: Destructor');

            this._detachDOMListeners();
            this._detachSubscribers();

            _get(OPage.prototype.__proto__ || Object.getPrototypeOf(OPage.prototype), 'destroy', this).call(this);
        }

        /************************************************************************************************************
         ******************************************** Internal functions ********************************************
         ************************************************************************************************************/

        /**
         * Declare class constants here
         * @private
         */

    }, {
        key: '_declareConstants',
        value: function _declareConstants() {
            this.SELECTOR_PAGE_CONTENT = '.o-page-content';
            this.SELECTOR_OPEN_ON_PAGELOAD = '.open-on-pageload';
            this.SELECTOR_ERROR_MSG = '.m-error';
            this.SELECTOR_INPUT_WITH_ERROR = '.m-input.has-error, m-checkbox.has-error, .m-dropdown.has-error';

            this.WINDOW_WIDTH = 0;
            this.SCROLL_DURATION = 400;
        }

        /**
         * Runs on DOM Ready
         * Should be used to attach DOM listeners etc
         * @private
         */

    }, {
        key: '_onDOMReady',
        value: function _onDOMReady() {
            var haltDOMReadyEvents = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

            _Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');
            this.WINDOW_WIDTH = this.$window.outerWidth();
            this.$body = $('body');
            this.$window.on('resize', this._onResize);
            this.$el.on('click', this._onClick);
            this.$el.on('keydown', this._onKeyDown);
            this.$el.on('keyup', this._onKeyUp);
            this.$body.on('click', _Enums2.default.SELECTOR.OPEN_LIGHTBOX, this._onOpenLightBoxClick);

            // Trigger DOM ready event so that all components can do their stuff.
            if (!haltDOMReadyEvents) {
                this.publish(_Enums2.default.EVENT.ON_DOCUMENT_READY);
                this.publish(_Enums2.default.EVENT.ON_FRAMEWORK_READY);
                this._scanForTemplatesToLoad();
            }
        }
    }, {
        key: '_resumeEvents',
        value: function _resumeEvents() {
            this.publish(_Enums2.default.EVENT.ON_DOCUMENT_READY);
            this.publish(_Enums2.default.EVENT.ON_FRAMEWORK_READY);
            this._scanForTemplatesToLoad();
        }

        /**
         * Runs on window load.
         */

    }, {
        key: '_onWindowLoad',
        value: function _onWindowLoad() {
            this.publish(_Enums2.default.EVENT.ON_WINDOW_LOAD);
        }

        /**
         * Scopes "this" to use the "this" of the outside function
         * Since JQuery creates a new function with a new "this"
         * Attach all functions that needs to be binded here
         * @private
         */

    }, {
        key: '_jQueryScopeBinding',
        value: function _jQueryScopeBinding() {
            this._onDOMReady = this._onDOMReady.bind(this);
            this._onClick = this._onClick.bind(this);
            this._onKeyDown = this._onKeyDown.bind(this);
            this._onKeyUp = this._onKeyUp.bind(this);
            this._onResize = this._onResize.bind(this);
            this._onOpenLightBoxClick = this._onOpenLightBoxClick.bind(this);
        }

        /**
         * Caches DOM elements
         * @private
         */

    }, {
        key: '_queryDOMElements',
        value: function _queryDOMElements() {
            this.$document = $(document);
            this.$window = $(window);
            this.$body = $('body');
            this.$scrollBody = $('html, body');
            this.$header = $('.o-monki-header');
            this.$pageContent = $('.o-page-content');
        }

        /**
         * Attach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_attachSubscribers',
        value: function _attachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');

            this.subscribe(_Enums2.default.ACTION.ENABLE_SCROLL, this._enableScroll);
            this.subscribe(_Enums2.default.ACTION.DISABLE_SCROLL, this._disableScroll);
            this.subscribe(_Enums2.default.ACTION.FORM_VALIDATION, _Utils2.default.Form.validate);
            this.subscribe(_Enums2.default.ACTION.RE_INITIALIZE_SLIDER, _Utils2.default.Slider.reInitialize);
            this.subscribe(_Enums2.default.ACTION.SCROLL_TO_FORM_ERROR_MSG, this._scrollToFormErrorMsg);
        }

        /**
         * Detach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_detachSubscribers',
        value: function _detachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');

            this.unsubscribe(_Enums2.default.ACTION.ENABLE_SCROLL, this._enableScroll);
            this.unsubscribe(_Enums2.default.ACTION.DISABLE_SCROLL, this._disableScroll);
            this.unsubscribe(_Enums2.default.ACTION.FORM_VALIDATION, _Utils2.default.Form.validate);
            this.unsubscribe(_Enums2.default.ACTION.RE_INITIALIZE_SLIDER, _Utils2.default.Slider.reInitialize);
            this.unsubscribe(_Enums2.default.ACTION.SCROLL_TO_FORM_ERROR_MSG, this._scrollToFormErrorMsg);
        }

        /**
         * Attach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_attachDOMListeners',
        value: function _attachDOMListeners() {
            var _this2 = this;

            this.$document.ready(function () {
                _this2._onDOMReady();
            });

            this.$window.load(function () {
                _this2._onWindowLoad();
            });
        }

        /**
         * Detach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_detachDOMListeners',
        value: function _detachDOMListeners() {
            this.$el.off('click', this._onClick);
            this.$window.off('resize', this._onResize);
            this.$el.off('keydown', this._onKeyDown);
            this.$body.off('click', _Enums2.default.SELECTOR.OPEN_LIGHTBOX, this._onOpenLightBoxClick);
        }

        /************************************************************************************************************
         ****************************************** Implementation functions ****************************************
         ************************************************************************************************************/

        /**
         * Scrolls to the first error message of a given form.
         * @param $form
         * @private
         */

    }, {
        key: '_scrollToFormErrorMsg',
        value: function _scrollToFormErrorMsg($form) {
            var offset = parseInt(this.$el.find(this.SELECTOR_PAGE_CONTENT).css('margin-top')),
                isGlobalMsgVisible = $form.find(this.SELECTOR_ERROR_MSG).filter(":visible").length,
                $elementToScrollTo = isGlobalMsgVisible ? $form.find(this.SELECTOR_ERROR_MSG) : $form.find(this.SELECTOR_INPUT_WITH_ERROR).filter(":visible");

            // [customizing-hb] 뉴스레터 에러메세지 출력시 스크롤 내려감 방지
            if ($form.attr('id') != undefined && $form.attr('id') == 'NewsForm') return;

            this.$scrollBody.animate({ scrollTop: Math.max($elementToScrollTo.offset().top - offset - 5, 0) }, this.SCROLL_DURATION);
        }
    }, {
        key: '_getScrollBarWidth',
        value: function _getScrollBarWidth() {
            return window.innerWidth - this.$el.get(0).scrollWidth;
        }

        /**
         * Callback for keydown
         * @param event - standard JS event param.
         * @private
         */

    }, {
        key: '_onKeyDown',
        value: function _onKeyDown(event) {
            this.publish(_Enums2.default.EVENT.ON_KEY_DOWN, event);
        }

        /**
         * Callback for keyup
         * @param event - standard JS event param.
         * @private
         */

    }, {
        key: '_onKeyUp',
        value: function _onKeyUp(event) {
            this.publish(_Enums2.default.EVENT.ON_KEY_UP, event);
        }

        /**
         * Callback when body is clicked
         * @param event - standard JS event param.
         * @private
         */

    }, {
        key: '_onClick',
        value: function _onClick(event) {
            this.publish(_Enums2.default.EVENT.ON_BODY_CLICKED, event);
        }

        /**
         * On resize
         * @param e
         * @private
         */

    }, {
        key: '_onResize',
        value: function _onResize(e) {
            var currentPageWidth = $(e.currentTarget).outerWidth();
            if (currentPageWidth != this.WINDOW_WIDTH) {
                this.WINDOW_WIDTH = currentPageWidth;
                this.publish(_Enums2.default.EVENT.ON_PAGE_RESIZE, { currentPageWidth: currentPageWidth });
            }
        }

        /**
         * Scan the document for temples to open on page load
         * @private
         */

    }, {
        key: '_scanForTemplatesToLoad',
        value: function _scanForTemplatesToLoad() {
            this._onOpenLightBoxClick();
        }

        /**
         * Opens the lightbox, the id of the target is passed as template parameter.
         * @param event
         * @private
         */

    }, {
        key: '_onOpenLightBoxClick',
        value: function _onOpenLightBoxClick(event) {
            var $target;
            if (typeof event != "undefined") {
                event.preventDefault();
                $target = $(event.currentTarget);
            } else {
                $target = $(this.SELECTOR_OPEN_ON_PAGELOAD).first();

                var onceShowing = $target.data('once-showing');

                if (onceShowing) {
                    if (Cookies.get(onceShowing) === 'viewed') {
                        return;
                    } else {
                        Cookies.set(onceShowing, 'viewed');
                    }
                }
            }

            if ($target.length) {
                var options = $target.data();
                options.$el = $target;

                if (options.template) {
                    this.publish(_Enums2.default.ACTION.SHOW_LIGHTBOX, options);
                } else {
                    _Logger2.default.INFO("Could not find template with ID: ", options.template);
                }
            }
        }

        /**
         * Enables scrolling
         * @param options - optional scroll configuration
         * @private
         */

    }, {
        key: '_enableScroll',
        value: function _enableScroll() {
            var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { restoreScrollPosition: true };

            if (this.navOpen) return;

            if (this.$body.hasClass(_Enums2.default.CLASS.DISABLE_SCROLL)) {

                this.$body.css('margin-left', '');
                this.$header.css('padding-right', '');

                this.$body.removeClass(_Enums2.default.CLASS.DISABLE_SCROLL);

                if (options.restoreScrollPosition) {
                    this._scrollContentToDefaultPosition();
                }

                if (this.$touchScrollElement) {
                    $("html,body").off("touchmove", this._preventDefault);
                    this.$touchScrollElement.off('touchmove', this._preventScroll);
                }

                this.publish(_Enums2.default.EVENT.ON_SCROLL_ENABLED);
                if (options.restoreScrollPosition && this.previousScrollPosition > 0) {
                    this.$window.scrollTop(this.previousScrollPosition + this.scrollCompensation);
                }
            }
        }

        /**
         * Disables scrolling
         * @private
         */

    }, {
        key: '_disableScroll',
        value: function _disableScroll() {
            var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { forceScrollPosition: true, scrollCompensation: 0 };

            if (!this.$body.hasClass(_Enums2.default.CLASS.DISABLE_SCROLL)) {
                this.scrollCompensation = options.scrollCompensation;
                this.previousScrollPosition = this.$window.scrollTop() - this.scrollCompensation;
                this.$touchScrollElement = options.$touchScrollElement;

                if (this.previousScrollPosition < 0) {
                    this.previousScrollPosition = 0;
                }

                this.$header.css('padding-right', this._getScrollBarWidth());

                this.$body.addClass(_Enums2.default.CLASS.DISABLE_SCROLL);

                this.publish(_Enums2.default.EVENT.ON_SCROLL_DISABLED);

                if (options.forceScrollPosition) {
                    this._scrollContentToSavedScrollPosition();
                }

                if (this.$touchScrollElement) {
                    $("html,body").on("touchmove", this._preventDefault);
                    this.$touchScrollElement.on('touchmove', this._preventScroll);
                }
            }
        }
    }, {
        key: '_preventDefault',
        value: function _preventDefault(e) {
            e.preventDefault();
        }

        /**
         * Prevents mobile scrolling
         * @param e
         * @private
         */

    }, {
        key: '_preventScroll',
        value: function _preventScroll(e) {
            e.stopPropagation();

            var element = e.currentTarget,
                top = element.scrollTop,
                totalScroll = element.scrollHeight,
                currentScroll = top + element.offsetHeight;

            // Prevent if the element is not scrollable
            if (totalScroll == element.offsetHeight) {
                e.preventDefault();
            }
            // Offset one pixel from top in order to avoid overflow scrolling
            else if (top == 0) {
                    element.scrollTop = 1;
                }
                // Offset one pixel from bottom in order to avoid overflow scrolling
                else if (currentScroll == totalScroll) {
                        element.scrollTop = top - 1;
                    }
        }
    }, {
        key: '_scrollContentToSavedScrollPosition',
        value: function _scrollContentToSavedScrollPosition() {
            this.$el.find(this.SELECTOR_PAGE_CONTENT).css({
                'top': '-' + this.previousScrollPosition + 'px'
            });
        }
    }, {
        key: '_scrollContentToDefaultPosition',
        value: function _scrollContentToDefaultPosition() {
            this.$el.find(this.SELECTOR_PAGE_CONTENT).css({
                'top': ''
            });
        }
    }]);

    return OPage;
}(_appeaserComponentBase2.default);

// Export this so we can pick it up and import in main.js


module.exports = OPage;

},{"./../../../js/base/appeaser-component-base.js":39,"./../../../js/base/logger.js":44,"./../../../themes/stories/enums.js":54,"./../../../themes/stories/utils.js":87}],34:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _appeaserComponentBase = require('./../../../js/base/appeaser-component-base.js');

var _appeaserComponentBase2 = _interopRequireDefault(_appeaserComponentBase);

var _Logger = require('./../../../js/base/logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../../themes/stories/enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OPaymentCheckout = function (_AppeaserComponentBas) {
    _inherits(OPaymentCheckout, _AppeaserComponentBas);

    /**
     * Constructor, will run before page loaded
     */
    function OPaymentCheckout() {
        _classCallCheck(this, OPaymentCheckout);

        var _this = _possibleConstructorReturn(this, (OPaymentCheckout.__proto__ || Object.getPrototypeOf(OPaymentCheckout)).apply(this, arguments));

        _Logger2.default.INFO(_this.constructor.name, ':: Constructor');

        _this._jQueryScopeBinding();
        _this._declareConstants();

        _this.subscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed
        return _this;
    }

    /**
     * Destructor, will run after page unload (or destroy)
     */


    _createClass(OPaymentCheckout, [{
        key: 'destroy',
        value: function destroy() {
            _Logger2.default.INFO(this.constructor.name, ':: Destructor');

            this._detachDOMListeners();
            this._detachSubscribers();

            _get(OPaymentCheckout.prototype.__proto__ || Object.getPrototypeOf(OPaymentCheckout.prototype), 'destroy', this).call(this);
        }

        /************************************************************************************************************
         ******************************************** Internal functions ********************************************
         ************************************************************************************************************/

        /**
         * Declare class constants here
         * @private
         */

    }, {
        key: '_declareConstants',
        value: function _declareConstants() {

            this.SELECTOR_PAYMENT_SELECTION = '.card-payment-option, .paypal-payment-option';
            this.SELECTOR_CARD_SECTION = '.card-section';
            this.SELECTOR_PAYPAL_SECTION = '.paypal-section';
            this.SELECTOR_CARD_SELECTION_SECTION = '.card-selection-section';
            this.SELECTOR_NEW_CARD_SECTION = '.new-card-section';
            this.SELECTOR_RADIO_BTN_SELECT_CARD = '.card-selection-section .m-radio-button';
            this.SELECTOR_CVV_CONTAINER = '.card-cvv-input';
            this.SELECTOR_CVV = '.cvv';
            this.SELECTOR_CHECKBOX_NIF = '.bottom-section .nif input';
            this.SELECTOR_INPUT_NIF = '.bottom-section .nif-text';
            this.SELECTOR_CHECKBOX_FATTURA = '.bottom-section .fattura input';
            this.SELECTOR_INPUT_FATTURA = '.bottom-section .fattura-text';
            this.SELECTOR_BOTTOM_SECTION = '.bottom-section';
            this.SELECTOR_VISIBLE_INPUT = 'input:visible, .m-dropdown:visible input';
            this.SELECTOR_VISIBLE_CHECKBOX = '.m-checkbox:visible input';
            this.SELECTOR_HIDDEN_INPUT = 'input:hidden';
            this.SELECTOR_CHECKBOX_SAVE_CARD = '.save-card input';
            this.SELECTOR_LEFT_SECTION = '.left-selection-section';
            this.SELECTOR_RIGHT_SECTION = '.right-selection-section';

            this.CLASS_ADD_CARD = 'add-card-option';
            this.CLASS_CARD_PAYMENT = 'card-payment-option';
            this.CLASS_NOT_SELECTED = 'not-selected';

            this.IS_CARD_SLOT_FULL = this.$el.find('.card-section .card-option').size() > 1;
        }

        /**
         * Called on onDomReady, cache DOM elements
         * @private
         */

    }, {
        key: '_cacheDOMElements',
        value: function _cacheDOMElements() {

            this.$radioBtnPaymentSelection = this.$el.find(this.SELECTOR_PAYMENT_SELECTION);
            this.$radioBtnCardSelection = this.$el.find(this.SELECTOR_RADIO_BTN_SELECT_CARD);
            this.$cardSection = this.$el.find(this.SELECTOR_CARD_SECTION);
            this.$paypalSection = this.$el.find(this.SELECTOR_PAYPAL_SECTION);
            this.$newCardSection = this.$el.find(this.SELECTOR_NEW_CARD_SECTION);
            this.$checkBoxNIF = this.$el.find(this.SELECTOR_CHECKBOX_NIF);
            this.$inputNif = this.$el.find(this.SELECTOR_INPUT_NIF);
            this.$checkBoxFATTURA = this.$el.find(this.SELECTOR_CHECKBOX_FATTURA);
            this.$inputFattura = this.$el.find(this.SELECTOR_INPUT_FATTURA);
            this.$bottomSection = this.$el.find(this.SELECTOR_BOTTOM_SECTION);
            this.$checkBoxSaveCard = this.$el.find(this.SELECTOR_CHECKBOX_SAVE_CARD);
            this.$leftSection = this.$el.find(this.SELECTOR_LEFT_SECTION);
            this.$rightSection = this.$el.find(this.SELECTOR_RIGHT_SECTION);
        }

        /**
         * Scopes "this" to use the "this" of the outside function
         * Since JQuery creates a new function with a new "this"
         * Attach all functions that needs to be binded here
         * @private
         */

    }, {
        key: '_jQueryScopeBinding',
        value: function _jQueryScopeBinding() {
            this._onDOMReady = this._onDOMReady.bind(this);
            this._onPaymentMethodChosen = this._onPaymentMethodChosen.bind(this);
            this._onCardChosen = this._onCardChosen.bind(this);
            this._onNifCheckboxChange = this._onNifCheckboxChange.bind(this);
            this._onFatturaCheckboxChange = this._onFatturaCheckboxChange.bind(this);
        }

        /**
         * Attach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_attachSubscribers',
        value: function _attachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');

            this.subscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
        }

        /**
         * Detach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_detachSubscribers',
        value: function _detachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');

            this.unsubscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
            this.unsubscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
        }

        /**
         * At this point the framework is ready.
         * Add all publish events here (if any)
         * @private
         */

    }, {
        key: '_onFrameworkReady',
        value: function _onFrameworkReady() {}

        /**
         * Attach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_attachDOMListeners',
        value: function _attachDOMListeners() {
            this.$radioBtnPaymentSelection.on('change', this._onPaymentMethodChosen);
            this.$radioBtnCardSelection.on('change', this._onCardChosen);
            this.$checkBoxNIF.on('change', this._onNifCheckboxChange);
            this.$checkBoxFATTURA.on('change', this._onFatturaCheckboxChange);
        }

        /**
         * Detach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_detachDOMListeners',
        value: function _detachDOMListeners() {

            this.$radioBtnPaymentSelection.off('change', this._onPaymentMethodChosen);
            this.$radioBtnCardSelection.off('change', this._onCardChosen);
            this.$checkBoxNIF.on('change', this._onNifCheckboxChange);
            this.$checkBoxFATTURA.on('change', this._onFatturaCheckboxChange);
        }

        /**
         * Runs on DOM Ready
         * Should be used to attach DOM listeners etc
         * @private
         */

    }, {
        key: '_onDOMReady',
        value: function _onDOMReady() {
            _Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');

            this._cacheDOMElements();
            this._attachSubscribers();
            this._attachDOMListeners();

            this._prepareExistingCardSection();
            this.$newCardSection.add(this.SELECTOR_CVV_CONTAINER).find(this.SELECTOR_HIDDEN_INPUT).prop("disabled", true);
        }

        /************************************************************************************************************
         ****************************************** Implementation functions ****************************************
         ************************************************************************************************************/

        /**
         * Displays/Hides nif input field
         * @param e
         * @private
         */

    }, {
        key: '_onNifCheckboxChange',
        value: function _onNifCheckboxChange(e) {
            var $target = $(e.currentTarget);

            if ($target.prop('checked')) {
                this.$inputNif.show();
            } else {
                this.$inputNif.hide();
            }
        }

        /**
         * Displays/Hides fattura input field
         * @param e
         * @private
         */

    }, {
        key: '_onFatturaCheckboxChange',
        value: function _onFatturaCheckboxChange(e) {
            var $target = $(e.currentTarget);

            if ($target.prop('checked')) {
                this.$inputFattura.show();
            } else {
                this.$inputFattura.hide();
            }
        }

        /**
         * Checks if the user has a saved card. If so, make sure the new card form is visible.
         * @private
         */

    }, {
        key: '_prepareExistingCardSection',
        value: function _prepareExistingCardSection() {

            var $cardSelectionSection = this.$el.find(this.SELECTOR_CARD_SELECTION_SECTION);

            if ($cardSelectionSection.size()) {
                this.$newCardSection.addClass(_Enums2.default.CLASS.DISPLAY_NONE);
            }
        }

        /**
         * Event handler for when a user has chosen a card to pay with.
         * @param e
         * @private
         */

    }, {
        key: '_onCardChosen',
        value: function _onCardChosen(e) {
            var $target = $(e.currentTarget);

            //If the user has chosen to add a new card, show and enable new card form.
            if ($target.parent().hasClass(this.CLASS_ADD_CARD)) {
                this.$newCardSection.removeClass(_Enums2.default.CLASS.DISPLAY_NONE).find(this.SELECTOR_VISIBLE_INPUT).prop("disabled", false);

                //Disable all cvv validations besides the one for the new card.
                this.$el.find(this.SELECTOR_CARD_SELECTION_SECTION + ' ' + this.SELECTOR_CVV_CONTAINER + this.SELECTOR_CVV + ' input').prop("disabled", true);

                if (!this.IS_CARD_SLOT_FULL) {
                    this.$checkBoxSaveCard.prop("disabled", false);
                }
            } else {

                //Hide card section and disable input validation
                this.$newCardSection.addClass(_Enums2.default.CLASS.DISPLAY_NONE).find(this.SELECTOR_HIDDEN_INPUT).prop("disabled", true);
                //Show and enable input validation for chosen card
                $target.siblings(this.SELECTOR_CVV_CONTAINER).find(this.SELECTOR_CVV).removeClass(_Enums2.default.CLASS.DISPLAY_NONE).find(this.SELECTOR_VISIBLE_INPUT).prop("disabled", false);
            }

            //Disable input validation for the card that is not chosen by the user.
            this.$radioBtnCardSelection.not($target).siblings(this.SELECTOR_CVV_CONTAINER).find(this.SELECTOR_CVV).find(this.SELECTOR_VISIBLE_INPUT).prop("disabled", true);

            //Hide the cvv input field for the card that is not chosen by the user.
            this.$radioBtnCardSelection.not($target).siblings(this.SELECTOR_CVV_CONTAINER).find(this.SELECTOR_CVV).addClass(_Enums2.default.CLASS.DISPLAY_NONE);
        }

        /**
         * Event handler for when a user has chosen a payment method (card or paypal).
         * @param e
         * @private
         */

    }, {
        key: '_onPaymentMethodChosen',
        value: function _onPaymentMethodChosen(e) {
            var $target = $(e.currentTarget);

            if ($target.hasClass(this.CLASS_CARD_PAYMENT)) {

                this.$paypalSection.hide();
                this.$cardSection.show().find(this.SELECTOR_VISIBLE_INPUT + ', ' + this.SELECTOR_VISIBLE_CHECKBOX).prop("disabled", false);

                this.$leftSection.removeClass(this.CLASS_NOT_SELECTED);
                this.$rightSection.addClass(this.CLASS_NOT_SELECTED);
            } else {

                this.$cardSection.find(this.SELECTOR_VISIBLE_INPUT).add(this.$checkBoxSaveCard).prop("disabled", true);
                this.$cardSection.hide();
                this.$paypalSection.show();

                this.$rightSection.removeClass(this.CLASS_NOT_SELECTED);
                this.$leftSection.addClass(this.CLASS_NOT_SELECTED);
            }

            this.$bottomSection.show();
        }
    }]);

    return OPaymentCheckout;
}(_appeaserComponentBase2.default);

// Export this so we can pick it up and import in main.js


module.exports = OPaymentCheckout;

},{"./../../../js/base/appeaser-component-base.js":39,"./../../../js/base/logger.js":44,"./../../../themes/stories/enums.js":54}],35:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _appeaserComponentBase = require('./../../../js/base/appeaser-component-base.js');

var _appeaserComponentBase2 = _interopRequireDefault(_appeaserComponentBase);

var _Logger = require('./../../../js/base/logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../../themes/stories/enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OPickUpLocation = function (_AppeaserComponentBas) {
  _inherits(OPickUpLocation, _AppeaserComponentBas);

  /**
   * Constructor, will run before page loaded
   */
  function OPickUpLocation() {
    _classCallCheck(this, OPickUpLocation);

    var _this = _possibleConstructorReturn(this, (OPickUpLocation.__proto__ || Object.getPrototypeOf(OPickUpLocation)).apply(this, arguments));

    _Logger2.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();
    _this._declareConstants();
    _this.subscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed
    return _this;
  }

  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OPickUpLocation, [{
    key: 'destroy',
    value: function destroy() {
      _Logger2.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();
      this._detachSubscribers();

      _get(OPickUpLocation.prototype.__proto__ || Object.getPrototypeOf(OPickUpLocation.prototype), 'destroy', this).call(this);
    }

    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: '_declareConstants',
    value: function _declareConstants() {
      this.SELECTOR_LOCATION_WRAPPER = '.wrapper';
      this.SELECTOR_RADIO_BUTTON_INPUT = '.a-radio-button';
    }

    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: '_onDOMReady',
    value: function _onDOMReady() {
      _Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._attachSubscribers();
      this._attachDOMListeners();
    }

    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: '_jQueryScopeBinding',
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._onMapMarkerClick = this._onMapMarkerClick.bind(this);
      this._onWrapperClick = this._onWrapperClick.bind(this);
    }

    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: '_attachSubscribers',
    value: function _attachSubscribers() {
      _Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
      this.subscribe(_Enums2.default.EVENT.ON_MAP_MARKER_CLICK, this._onMapMarkerClick);
    }

    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: '_detachSubscribers',
    value: function _detachSubscribers() {
      _Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
      this.unsubscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
      this.unsubscribe(_Enums2.default.EVENT.ON_MAP_MARKER_CLICK, this._onMapMarkerClick);
    }

    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: '_onFrameworkReady',
    value: function _onFrameworkReady() {}

    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: '_attachDOMListeners',
    value: function _attachDOMListeners() {
      this.$el.on("click", this.SELECTOR_LOCATION_WRAPPER, this._onWrapperClick);
    }

    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: '_detachDOMListeners',
    value: function _detachDOMListeners() {
      this.$el.off("click", this.SELECTOR_LOCATION_WRAPPER, this._onWrapperClick);
    }

    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Handles a click on a map marker
     * @private
     */

  }, {
    key: '_onMapMarkerClick',
    value: function _onMapMarkerClick(storeId) {
      var clickedLocation = this.$el.find(this.SELECTOR_LOCATION_WRAPPER + "[data-store-id='" + storeId + "']"),
          radioToSelect = clickedLocation.find(this.SELECTOR_RADIO_BUTTON_INPUT);

      radioToSelect.trigger("click");
    }

    /**
     * Communicates to the map that a new location has been selected
     * @private
     */

  }, {
    key: '_onWrapperClick',
    value: function _onWrapperClick(e) {
      var storeId = $(e.target).closest(this.SELECTOR_LOCATION_WRAPPER).data('store-id');

      this.publish(_Enums2.default.ACTION.CENTER_MAP_ON_MARKER, storeId);
    }
  }]);

  return OPickUpLocation;
}(_appeaserComponentBase2.default);

// Export this so we can pick it up and import in main.js


module.exports = OPickUpLocation;

},{"./../../../js/base/appeaser-component-base.js":39,"./../../../js/base/logger.js":44,"./../../../themes/stories/enums.js":54}],36:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _appeaserComponentBase = require('./../../../js/base/appeaser-component-base.js');

var _appeaserComponentBase2 = _interopRequireDefault(_appeaserComponentBase);

var _Logger = require('./../../../js/base/logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../../themes/stories/enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ORemoveConfirm = function (_AppeaserComponentBas) {
	_inherits(ORemoveConfirm, _AppeaserComponentBas);

	/**
  * Constructor, will run before page loaded
  */
	function ORemoveConfirm() {
		_classCallCheck(this, ORemoveConfirm);

		var _this = _possibleConstructorReturn(this, (ORemoveConfirm.__proto__ || Object.getPrototypeOf(ORemoveConfirm)).apply(this, arguments));

		_Logger2.default.INFO(_this.constructor.name, ':: Constructor');

		_this._jQueryScopeBinding();
		_this._declareConstants();
		_this.subscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed
		return _this;
	}

	/**
  * Destructor, will run after page unload (or destroy)
  */


	_createClass(ORemoveConfirm, [{
		key: 'destroy',
		value: function destroy() {
			_Logger2.default.INFO(this.constructor.name, ':: Destructor');

			this._detachDOMListeners();
			this._detachSubscribers();

			_get(ORemoveConfirm.prototype.__proto__ || Object.getPrototypeOf(ORemoveConfirm.prototype), 'destroy', this).call(this);
		}

		/************************************************************************************************************
   ******************************************** Internal functions ********************************************
   ************************************************************************************************************/

		/**
   * Declare class constants here
   * @private
   */

	}, {
		key: '_declareConstants',
		value: function _declareConstants() {
			this.SELECTOR_REMOVE = '.js-confirm-remove';
			this.SELECTOR_CANCEL = '.js-confirm-cancel';
		}

		/**
   * Runs on DOM Ready
   * Should be used to attach DOM listeners etc
   * @private
   */

	}, {
		key: '_onDOMReady',
		value: function _onDOMReady() {
			_Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');

			this.$removeBtn = this.$el.find(this.SELECTOR_REMOVE);
			this.$cancelBtn = this.$el.find(this.SELECTOR_CANCEL);

			this._attachSubscribers();
			this._attachDOMListeners();
		}

		/**
   * Scopes "this" to use the "this" of the outside function
   * Since JQuery creates a new function with a new "this"
   * Attach all functions that needs to be binded here
   * @private
   */

	}, {
		key: '_jQueryScopeBinding',
		value: function _jQueryScopeBinding() {
			this._onDOMReady = this._onDOMReady.bind(this);
			this._onRemoveBtnClick = this._onRemoveBtnClick.bind(this);
			this.cancel = this.cancel.bind(this);
		}

		/**
   * Attach Event Subscribers within JS (Enums.js)
   * @private
   */

	}, {
		key: '_attachSubscribers',
		value: function _attachSubscribers() {
			_Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');

			this.subscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
		}

		/**
   * Detach Event Subscribers within JS (Enums.js)
   * @private
   */

	}, {
		key: '_detachSubscribers',
		value: function _detachSubscribers() {
			_Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');
			this.unsubscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
			this.unsubscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
		}

		/**
   * Attach EventListeners in the DOM
   * @private
   */

	}, {
		key: '_attachDOMListeners',
		value: function _attachDOMListeners() {
			this.$removeBtn.on('click', this._onRemoveBtnClick);
			this.$cancelBtn.on('click', this.cancel);
		}

		/**
   * Detach EventListeners in the DOM
   * @private
   */

	}, {
		key: '_detachDOMListeners',
		value: function _detachDOMListeners() {
			this.$removeBtn.off('click', this._onRemoveBtnClick);
			this.$cancelBtn.off('click', this.cancel);
		}

		/**
   * At this point the framework is ready.
   * Add all publish events here (if any)
   * @private
   */

	}, {
		key: '_onFrameworkReady',
		value: function _onFrameworkReady() {}

		/************************************************************************************************************
   ****************************************** Implementation functions ****************************************
   ************************************************************************************************************/

		/**
   * Callback for when remove button is clicked
   * @private
   */

	}, {
		key: '_onRemoveBtnClick',
		value: function _onRemoveBtnClick() {
			this.publish(_Enums2.default.ACTION.HIDE_LIGHTBOX, { 'buttonClicked': 'OK' });
		}

		/**
   * Cancels the dialog
   */

	}, {
		key: 'cancel',
		value: function cancel() {
			this.publish(_Enums2.default.ACTION.HIDE_LIGHTBOX, { 'buttonClicked': 'CANCEL' });
		}
	}]);

	return ORemoveConfirm;
}(_appeaserComponentBase2.default);

// Export this so we can pick it up and import in main.js


module.exports = ORemoveConfirm;

},{"./../../../js/base/appeaser-component-base.js":39,"./../../../js/base/logger.js":44,"./../../../themes/stories/enums.js":54}],37:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _appeaserComponentBase = require('./../../../js/base/appeaser-component-base.js');

var _appeaserComponentBase2 = _interopRequireDefault(_appeaserComponentBase);

var _Logger = require('./../../../js/base/logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../../themes/stories/enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OSliderCofs = function (_AppeaserComponentBas) {
    _inherits(OSliderCofs, _AppeaserComponentBas);

    /**
     * Constructor, will run before page loaded
     */
    function OSliderCofs() {
        _classCallCheck(this, OSliderCofs);

        var _this = _possibleConstructorReturn(this, (OSliderCofs.__proto__ || Object.getPrototypeOf(OSliderCofs)).apply(this, arguments));

        _Logger2.default.INFO(_this.constructor.name, ':: Constructor');

        _this._jQueryScopeBinding();
        _this._declareConstants();
        _this.subscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed
        return _this;
    }

    /**
     * Destructor, will run after page unload (or destroy)
     */


    _createClass(OSliderCofs, [{
        key: 'destroy',
        value: function destroy() {
            _Logger2.default.INFO(this.constructor.name, ':: Destructor');

            this._detachDOMListeners();
            this._detachSubscribers();

            _get(OSliderCofs.prototype.__proto__ || Object.getPrototypeOf(OSliderCofs.prototype), 'destroy', this).call(this);
        }

        /************************************************************************************************************
         ******************************************** Internal functions ********************************************
         ************************************************************************************************************/

        /**
         * Declare class constants here
         * @private
         */

    }, {
        key: '_declareConstants',
        value: function _declareConstants() {
            this.SELECTOR_SLIDER = '.slider';
            this.SELECTOR_CLONED_COMPONENTS = '.swiper-slide-duplicate, .swiper-slide-duplicate *[data-component-id]';

            this.DATA_DESKTOP_SLIDES = 'slides-desktop';
            this.DATA_TABLET_SLIDES = 'slides-tablet';
            this.DATA_MOBILE_SLIDES = 'slides-mobile';

            this.SPEED = 1500;
            this.TOUCH_SPEED = 300;
        }

        /**
         * Runs on DOM Ready
         * Should be used to attach DOM listeners etc
         * @private
         */

    }, {
        key: '_onDOMReady',
        value: function _onDOMReady() {
            var _this2 = this;

            _Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');

            this._attachSubscribers();
            this._cacheDOMElements();

            var color = this.$slider.css("color");

            this.settings = {
                speed: Modernizr.touchevents ? this.TOUCH_SPEED : this.SPEED,
                calculateHeight: true,
                slidesPerView: this.$el.data(this.DATA_DESKTOP_SLIDES),
                slidesPerGroup: this.$el.data(this.DATA_DESKTOP_SLIDES),
                nextButton: _Enums2.default.SWIPER.SELECTOR_ARROW_NEXT,
                prevButton: _Enums2.default.SWIPER.SELECTOR_ARROW_PREV,
                pagination: _Enums2.default.SWIPER.SELECTOR_PAGINATION,
                paginationBulletRender: function paginationBulletRender(swiper, i, className) {
                    return '<span class=\'' + className + '\' style=\'background-color: ' + color + '\'></span>';
                },
                paginationClickable: true,
                loop: this.$slider.children().length > this.$el.data(this.DATA_DESKTOP_SLIDES),
                autoplay: this.$el.data('slick-autoplay') ? this.$el.data('slick-autoplay-speed') ? this.$el.data('slick-autoplay-speed') : 4000 : null,
                onInit: function onInit() {
                    _this2.$el.addClass(_Enums2.default.SWIPER.CLASS_INITIALIZED);
                },
                breakpoints: {
                    767: {
                        slidesPerView: this.$el.data(this.DATA_MOBILE_SLIDES),
                        slidesPerGroup: this.$el.data(this.DATA_MOBILE_SLIDES)
                    },
                    1024: {
                        slidesPerView: this.$el.data(this.DATA_TABLET_SLIDES),
                        slidesPerGroup: this.$el.data(this.DATA_TABLET_SLIDES)
                    }
                }
            };

            var amountOfSlides = this.$slider.children().length;

            this._sliderSetUp();
            this._attachMQHandlers(amountOfSlides);

            this._attachDOMListeners();
        }
    }, {
        key: '_cacheDOMElements',
        value: function _cacheDOMElements() {
            this.$slider = this.$el.find(this.SELECTOR_SLIDER);
        }

        /**
         * Scopes "this" to use the "this" of the outside function
         * Since JQuery creates a new function with a new "this"
         * Attach all functions that needs to be binded here
         * @private
         */

    }, {
        key: '_jQueryScopeBinding',
        value: function _jQueryScopeBinding() {
            this._onDOMReady = this._onDOMReady.bind(this);

            this._refresh = this._refresh.bind(this);
            this._initCloneSlides = this._initCloneSlides.bind(this);
            this._initSlider = this._initSlider.bind(this);
            this._destroySlider = this._destroySlider.bind(this);
            this._onDisabledResize = this._onDisabledResize.bind(this);
        }

        /**
         * At this point the framework is ready.
         * Add all publish events here (if any)
         * @private
         */

    }, {
        key: '_onFrameworkReady',
        value: function _onFrameworkReady() {
            this._initCloneSlides();
        }

        /**
         * Attach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_attachSubscribers',
        value: function _attachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');

            this.subscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
            this.subscribe(_Enums2.default.EVENT.ON_PAGE_CONTENT_SHOW, this._refresh);
            this.subscribe(_Enums2.default.ACTION.RE_INITIALIZE_SLIDER, this._reInit);
        }

        /**
         * Detach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_detachSubscribers',
        value: function _detachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');

            this.unsubscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
            this.unsubscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
            this.unsubscribe(_Enums2.default.EVENT.ON_PAGE_CONTENT_SHOW, this._refresh);
            this.unsubscribe(_Enums2.default.ACTION.RE_INITIALIZE_SLIDER, this._reInit);
        }

        /**
         * Attach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_attachDOMListeners',
        value: function _attachDOMListeners() {}

        /**
         * Detach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_detachDOMListeners',
        value: function _detachDOMListeners() {}

        /**
         * Attach media query handlers
         * @private
         */

    }, {
        key: '_attachMQHandlers',
        value: function _attachMQHandlers(amountOfSlides) {
            this.MQMobileHandler = {
                match: amountOfSlides > this.$el.data(this.DATA_MOBILE_SLIDES) ? this._initSlider : this._destroySlider
            };

            this.MQMediumHandler = {
                match: amountOfSlides > this.$el.data(this.DATA_TABLET_SLIDES) ? this._initSlider : this._destroySlider
            };

            this.MQDesktopHandler = {
                match: amountOfSlides > this.$el.data(this.DATA_DESKTOP_SLIDES) ? this._initSlider : this._destroySlider
            };

            enquire.register(_Enums2.default.MQ.IS_MOBILE, this.MQMobileHandler);
            enquire.register(_Enums2.default.MQ.IS_TABLET, this.MQMediumHandler);
            enquire.register(_Enums2.default.MQ.IS_DESKTOP, this.MQDesktopHandler);
        }

        /**
         * Detach media query handlers
         * @private
         */

    }, {
        key: '_detachMQHandlers',
        value: function _detachMQHandlers() {
            enquire.unregister(_Enums2.default.MQ.IS_MOBILE, this.MQMobileHandler);
            enquire.unregister(_Enums2.default.MQ.IS_TABLET, this.MQMediumHandler);
            enquire.unregister(_Enums2.default.MQ.IS_DESKTOP, this.MQDesktopHandler);
        }

        /************************************************************************************************************
         ****************************************** Implementation functions ****************************************
         ************************************************************************************************************/

        /**
         * Initializes the slider
         * @private
         */

    }, {
        key: '_initSlider',
        value: function _initSlider() {
            this.$el.removeClass(_Enums2.default.CLASS.IS_DISABLED_STATE);

            if (!this.slider) {
                if (this.disabledListenerAttached) {
                    $(window).off('resize', this._onDisabledResize);
                    this.disabledListenerAttached = false;
                }

                this.slider = new Swiper(this.$slider, this.settings);
                this._initCloneSlides();
            }
        }

        /**
         * Destroys the slider
         * @private
         */

    }, {
        key: '_destroySlider',
        value: function _destroySlider() {
            this.$el.addClass(_Enums2.default.CLASS.IS_DISABLED_STATE);

            if (!this.disabledListenerAttached) {
                this._onDisabledResize();
                $(window).on('resize', this._onDisabledResize);
                this.disabledListenerAttached = true;
            }

            if (this.slider) {
                this.slider.destroy(true, true);
                this.slider = undefined;
            }
        }

        /**
         * Sets up slider HTML
         * @private
         */

    }, {
        key: '_sliderSetUp',
        value: function _sliderSetUp() {
            this.$slider.addClass(_Enums2.default.SWIPER.CLASS_CONTAINER);

            // Wrap the slides
            this.$slider.children().addClass(_Enums2.default.SWIPER.CLASS_SLIDE).wrapAll("<div class='" + _Enums2.default.SWIPER.CLASS_WRAPPER + "'></div>");

            // Add arrows and pagination
            this.$slider.append("<div class='" + _Enums2.default.SWIPER.CLASS_ARROW_NEXT + "'></div>").append("<div class='" + _Enums2.default.SWIPER.CLASS_ARROW_PREV + "'></div>").append("<div class='" + _Enums2.default.SWIPER.CLASS_PAGINATION + "'></div>");
        }

        /**
         * Adjusts the width of the slides when disabled
         * @private
         */

    }, {
        key: '_onDisabledResize',
        value: function _onDisabledResize() {
            var amountOfSlides = this.$el.data(this.DATA_DESKTOP_SLIDES);

            if (Modernizr.mq(_Enums2.default.MQ.IS_MOBILE)) {
                amountOfSlides = this.$el.data(this.DATA_MOBILE_SLIDES);
            } else if (Modernizr.mq(_Enums2.default.MQ.IS_TABLET)) {
                amountOfSlides = this.$el.data(this.DATA_TABLET_SLIDES);
            }

            this.$el.find(_Enums2.default.SWIPER.SELECTOR_SLIDE).css('width', this.$slider.width() / amountOfSlides);
        }
    }, {
        key: '_refresh',
        value: function _refresh() {
            if (this.slider) {
                this.slider.update();
            }
        }

        /**
         * Re-initializes slider
         * @private
         */

    }, {
        key: '_reInit',
        value: function _reInit($slider) {
            if (this.$slider.is($slider)) {
                if (this.slider) {
                    this.slider.destroy(true, true);
                    this.slider = undefined;
                }

                this.$el.find(_Enums2.default.SWIPER.SELECTOR_SWIPER_WRAPPER).contents().unwrap();
                var amountOfSlides = this.$slider.children().length;

                this.$slider.find('> *:not(' + _Enums2.default.SWIPER.SELECTOR_SWIPER_CONTROLS + ')').addClass(_Enums2.default.SWIPER.CLASS_SLIDE).wrapAll("<div class='" + _Enums2.default.SWIPER.CLASS_WRAPPER + "'></div>");

                this._detachMQHandlers();
                this._attachMQHandlers(amountOfSlides);
            }
        }

        /**
         * When infinite option is true swiper will clone slides.
         * We need to initialize our scripts for these clones in order to avoid ugly transitions.
         * @private
         */

    }, {
        key: '_initCloneSlides',
        value: function _initCloneSlides() {
            this.$slider.find(this.SELECTOR_CLONED_COMPONENTS).removeAttr('data-component-id');
            this.__mediator._scanNewBlock(this.$slider[0]);
        }
    }]);

    return OSliderCofs;
}(_appeaserComponentBase2.default);

// Export this so we can pick it up and import in main.js


module.exports = OSliderCofs;

},{"./../../../js/base/appeaser-component-base.js":39,"./../../../js/base/logger.js":44,"./../../../themes/stories/enums.js":54}],38:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _appeaserComponentBase = require('./appeaser-component-base.js');

var _appeaserComponentBase2 = _interopRequireDefault(_appeaserComponentBase);

var _Logger = require('./logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../themes/stories/enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OAccordion = function (_AppeaserComponentBas) {
  _inherits(OAccordion, _AppeaserComponentBas);

  /**
   * Constructor, will run before page loaded
   */
  function OAccordion() {
    _classCallCheck(this, OAccordion);

    var _this = _possibleConstructorReturn(this, (OAccordion.__proto__ || Object.getPrototypeOf(OAccordion)).apply(this, arguments));

    _Logger2.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();
    _this._declareConstants();
    _this.subscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed
    return _this;
  }

  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OAccordion, [{
    key: 'destroy',
    value: function destroy() {
      _Logger2.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();
      this._detachSubscribers();

      _get(OAccordion.prototype.__proto__ || Object.getPrototypeOf(OAccordion.prototype), 'destroy', this).call(this);
    }

    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: '_declareConstants',
    value: function _declareConstants() {
      this.SELECTOR_ACCORDION_TOGGLE = '.o-accordion .js-accordion-toggle';
      this.SELECTOR_LINK = '.a-link';
    }

    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: '_onDOMReady',
    value: function _onDOMReady() {
      _Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');

      this.isExclusive = this.$el.data("exclusive");
      this.$exclusiveGroup = $("[data-exclusive-group=" + this.$el.data("exclusive-group") + "]");

      this._attachSubscribers();
      this._attachDOMListeners();
    }

    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: '_jQueryScopeBinding',
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._onClickLink = this._onClickLink.bind(this);
    }

    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: '_attachSubscribers',
    value: function _attachSubscribers() {
      _Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }

    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: '_detachSubscribers',
    value: function _detachSubscribers() {
      _Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
      this.unsubscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }

    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: '_attachDOMListeners',
    value: function _attachDOMListeners() {
      _Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.$el.on('click', this._onClickLink);
    }

    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: '_detachDOMListeners',
    value: function _detachDOMListeners() {
      _Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.$el.off('click', this._onClickLink);
    }

    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: '_onFrameworkReady',
    value: function _onFrameworkReady() {}

    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * onClickLink callback function
     * @param event
     * @private
     */

  }, {
    key: '_onClickLink',
    value: function _onClickLink(event) {
      event.preventDefault();

      if (this.$el.hasClass(_Enums2.default.CLASS.IS_DISABLED_STATE)) return;

      if (this.isExclusive) {
        this.$exclusiveGroup.removeClass(_Enums2.default.CLASS.IS_VISIBLE_STATE);
      }

      this.$el.toggleClass(_Enums2.default.CLASS.IS_VISIBLE_STATE);
    }
  }]);

  return OAccordion;
}(_appeaserComponentBase2.default);

// Export this so we can pick it up and import in main.js


module.exports = OAccordion;

},{"./../../themes/stories/enums.js":54,"./appeaser-component-base.js":39,"./logger.js":44}],39:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _componentBase = require('./../bower-components/component-loader-js/src/component.js');

var _componentBase2 = _interopRequireDefault(_componentBase);

var _Enums = require('./../../themes/stories/enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var AppeaserComponentBase = function (_ComponentBase) {
    _inherits(AppeaserComponentBase, _ComponentBase);

    function AppeaserComponentBase() {
        _classCallCheck(this, AppeaserComponentBase);

        return _possibleConstructorReturn(this, (AppeaserComponentBase.__proto__ || Object.getPrototypeOf(AppeaserComponentBase)).apply(this, arguments));
    }

    /**
     * Subscribe to an event from another component
     * @protected
     * @param {String} topic - Event name
     * @param {Function} callback - Function to bind
     */


    _createClass(AppeaserComponentBase, [{
        key: 'subscribe',
        value: function subscribe(topic, callback) {
            _get(AppeaserComponentBase.prototype.__proto__ || Object.getPrototypeOf(AppeaserComponentBase.prototype), 'subscribe', this).call(this, topic, callback, this);

            // check if we're subscribing to DOCUMENT_READY event, trigger if we're already in that state (late added content)
            if (topic === _Enums2.default.EVENT.ON_DOCUMENT_READY && (document.readyState === 'interactive' || document.readyState === 'complete')) {
                callback();
            }
        }
    }]);

    return AppeaserComponentBase;
}(_componentBase2.default);

// Export AMD, CommonJS/ES6 module or assume global namespace


if (typeof define !== 'undefined' && define.amd) {
    define([], AppeaserComponentBase);
} else if (typeof module !== 'undefined' && module.exports) {
    module.exports = AppeaserComponentBase;
} else {
    window.AppeaserComponentBase = AppeaserComponentBase;
}

},{"./../../themes/stories/enums.js":54,"./../bower-components/component-loader-js/src/component.js":52}],40:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _componentLoader = require('./../bower-components/component-loader-js/src/component-loader.js');

var _componentLoader2 = _interopRequireDefault(_componentLoader);

var _Enums = require('./../../themes/stories/enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

var _Logger = require('./logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var AppeaserComponentLoader = function (_ComponentLoader) {
    _inherits(AppeaserComponentLoader, _ComponentLoader);

    function AppeaserComponentLoader() {
        _classCallCheck(this, AppeaserComponentLoader);

        return _possibleConstructorReturn(this, (AppeaserComponentLoader.__proto__ || Object.getPrototypeOf(AppeaserComponentLoader)).apply(this, arguments));
    }

    /**
     * Initialize a given component and return a new instance of it
     * @param componentName
     * @param componentId
     * @param el
     * @param data
     * @private
     */


    _createClass(AppeaserComponentLoader, [{
        key: '_initializeBlockComponent',
        value: function _initializeBlockComponent(componentName, componentId, el, data) {
            var component = this.components[componentName];

            if (typeof component !== 'function') throw 'ComponentLoader: unknown component \'' + componentName + '\'';

            var instance = new component(el, data, this);

            this.initializedComponents[componentId] = instance;
            this.numberOfInitializedComponents++;

            return instance;
        }

        /**
         * Publishes events based on a given instance
         * @param topic
         * @param instance
         * @returns {boolean}
         * @private
         */

    }, {
        key: '_publishOnInstance',
        value: function _publishOnInstance(topic, instance) {
            // Check if we have subscribers to this topic
            if (!this.topics.hasOwnProperty(topic)) {
                return false;
            }

            // don't slice on arguments because it prevents optimizations in JavaScript engines (V8 for example)
            // https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Functions/arguments
            // https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#32-leaking-arguments
            var args = new Array(arguments.length - 2);
            for (var i = 0; i < args.length; ++i) {
                args[i] = arguments[i + 2]; // remove two arguments
            }

            // Loop through them and fire the callbacks
            for (var _i = 0, len = this.topics[topic].length; _i < len; _i++) {
                var subscription = this.topics[topic][_i];
                // Call it's callback
                if (subscription && subscription.callback && instance === subscription.context) {
                    subscription.callback.apply(subscription.context, args);
                }
            }

            return true;
        }

        /**
         * Scan through the element passed in to find all data-component-id that needs to be reinitialized
         * @param el
         * @private
         */

    }, {
        key: '_scanBlock',
        value: function _scanBlock(el) {
            var _this2 = this;

            var components = el.querySelectorAll('[data-component-id]'),
                instances = [],
                scanRootElement = el.hasAttribute("data-component-id");

            // Since the query selector does not apply to the root element
            if (scanRootElement) {
                instances.push(this._scanBlockElement(el));
            }

            [].forEach.call(components, function (el) {
                instances.push(_this2._scanBlockElement(el));
            });

            instances.forEach(function (instance) {
                _this2._publishOnInstance(_Enums2.default.EVENT.ON_DOCUMENT_READY, instance);
            });
        }

        /**
         * Initializes a block if it has not been initialized before but will not re-initialize
         * @param el
         * @private
         */

    }, {
        key: '_scanNewBlock',
        value: function _scanNewBlock(el) {
            var _this3 = this;

            var components = el.querySelectorAll('[data-component]:not([data-component-id])'),
                instances = [],
                scanRootElement = el.hasAttribute("data-component") && !el.hasAttribute("data-component-id");

            // Since the query selector does not apply to the root element
            if (scanRootElement) {
                instances.push(this._scanBlockElement(el));
            }

            [].forEach.call(components, function (el) {
                instances.push(_this3._scanBlockElement(el));
            });
        }

        /**
         *
         * @param el
         * @param data
         * @returns {*}
         * @private
         */

    }, {
        key: '_scanBlockElement',
        value: function _scanBlockElement(el, data) {
            // check of component(s) for this DOM element already have been initialized
            var elementId = el.getAttribute("data-component-id"),
                instance = null;

            // give unique id so we can track it on next scan
            elementId = this._generateUUID();
            el.setAttribute('data-component-id', elementId);

            // find the name of the component instance
            var componentName = el.getAttribute("data-component");

            var componentId = componentName + '-' + elementId;
            // this.activeComponents[componentId] = true;

            // check if component not initialized before
            if (!this.initializedComponents[componentId]) {
                instance = this._initializeBlockComponent(componentName, componentId, el, data);
            }

            return instance;
        }

        /**
         * Call constructor of component and add instance to the collection of initialized components
         * @private
         * @param {String} componentName - Name of the component to initialize. Used to lookup class definition in components collection.
         * @param {String} componentId - Unique component ID (combination of component name and element ID)
         * @param {Element} el - DOM element that is the context of this component
         * @param {Object} data - Optional data object to pass to the component constructor
         */

    }, {
        key: '_initializeComponent',
        value: function _initializeComponent(componentName, componentId, el, data) {
            var component = this.components[componentName];

            // Let us log the missing component instead of throwing an exception
            if (typeof component !== 'function') {
                _Logger2.default.ERROR('ComponentLoader: unknown component \'' + componentName + '\'');
                return;
            }

            var instance = new component(el, data, this);

            this.initializedComponents[componentId] = instance;
            this.numberOfInitializedComponents++;
        }

        /**
         * Destroy all component instances based on passed in element
         * @param el
         * @public
         */

    }, {
        key: 'destroy',
        value: function destroy(el) {
            var components = el.querySelectorAll('[data-component-id]');
            var that = this;

            [].forEach.call(components, function (innerEl) {
                var componentName = innerEl.getAttribute("data-component");
                var elementId = innerEl.getAttribute('data-component-id');

                var componentId = componentName + '-' + elementId;

                that._destroyComponent(componentId);
            });

            that._destroyComponent(el.getAttribute('data-component-id')); // destroy wrapper also
        }
    }]);

    return AppeaserComponentLoader;
}(_componentLoader2.default);

// Export AMD, CommonJS/ES6 module or assume global namespace


if (typeof define !== 'undefined' && define.amd) {
    define([], AppeaserComponentLoader);
} else if (typeof module !== 'undefined' && module.exports) {
    module.exports = AppeaserComponentLoader;
} else {
    window.AppeaserComponentLoader = AppeaserComponentLoader;
}

},{"./../../themes/stories/enums.js":54,"./../bower-components/component-loader-js/src/component-loader.js":51,"./logger.js":44}],41:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _appeaserComponentBase = require('./appeaser-component-base.js');

var _appeaserComponentBase2 = _interopRequireDefault(_appeaserComponentBase);

var _Logger = require('./logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../themes/stories/enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Dropdown = function (_AppeaserComponentBas) {
    _inherits(Dropdown, _AppeaserComponentBas);

    /**
     * Constructor, will run before page loaded
     */
    function Dropdown() {
        _classCallCheck(this, Dropdown);

        var _this = _possibleConstructorReturn(this, (Dropdown.__proto__ || Object.getPrototypeOf(Dropdown)).apply(this, arguments));

        _Logger2.default.INFO(_this.constructor.name, ':: Constructor');

        _this._declareConstants();
        _this._jQueryScopeBinding();
        _this.subscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed
        return _this;
    }

    /**
     * Destructor, will run after page unload (or destroy)
     */


    _createClass(Dropdown, [{
        key: 'destroy',
        value: function destroy() {
            _Logger2.default.INFO(this.constructor.name, ':: Destructor');

            this._detachDOMListeners();
            this._detachSubscribers();
            this._detachMQHandlers();

            _get(Dropdown.prototype.__proto__ || Object.getPrototypeOf(Dropdown.prototype), 'destroy', this).call(this);
        }

        /************************************************************************************************************
         ******************************************** Internal functions ********************************************
         ************************************************************************************************************/

        /**
         * Detaches MQ handlers
         * @private
         */

    }, {
        key: '_detachMQHandlers',
        value: function _detachMQHandlers() {}

        /**
         * Declare class constants here
         * @private
         */

    }, {
        key: '_declareConstants',
        value: function _declareConstants() {

            //SELECTORS
            this.SELECTOR_OPTIONS = '.options li';
            this.SELECTOR_IS_SELECTED = '.is-selected';
            this.SELECTOR_VISIBLE_OPTIONS = '.options li:not(.u-display-none)';
            this.SELECTOR_UL_OPTIONS = 'ul.options';
            this.SELECTOR_ICON_ARROW = '.a-icon-arrow-down-small';
            this.SELECTOR_SELECTED_SIBLINGS = '.is-selected ~ li';
            this.SELECTOR_DROPDOWN = '[class^="m-dropdown"]';

            this.CLASS_IS_DROPDOWN_VALUE = 'is-dropdown-value';

            this.optionHeight = null;
            this.isUserScrolling = false;
        }

        /**
         * Scopes "this" to use the "this" of the outside function
         * Since JQuery creates a new function with a new "this"
         * Attach all functions that needs to be binded here
         * @private
         */

    }, {
        key: '_jQueryScopeBinding',
        value: function _jQueryScopeBinding() {

            this._onDOMReady = this._onDOMReady.bind(this);
            this._setInputValue = this._setInputValue.bind(this);
            this._onOptionClick = this._onOptionClick.bind(this);
            this._open = this._open.bind(this);
            this._close = this._close.bind(this);
            this._onBodyClick = this._onBodyClick.bind(this);
            this._filterOptions = this._filterOptions.bind(this);
            this._onArrowClick = this._onArrowClick.bind(this);
            this._onKeyDown = this._onKeyDown.bind(this);
            this._onMouseLeave = this._onMouseLeave.bind(this);
            this._onOptionHover = this._onOptionHover.bind(this);
            this._handleSelectedOptionChangeRequest = this._handleSelectedOptionChangeRequest.bind(this);
        }

        /**
         * Runs on DOM Ready
         * Should be used to attach DOM listeners etc
         * @private
         */

    }, {
        key: '_onDOMReady',
        value: function _onDOMReady() {
            _Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');

            this.optionHeight = this.$el.outerHeight();

            this._attachSubscribers();
            this._cacheDOMElements();
            this._attachDOMListeners();
        }

        /**
         * Called on onDomReady, cache DOM elements
         * @private
         */

    }, {
        key: '_cacheDOMElements',
        value: function _cacheDOMElements() {
            this.$iconArrow = this.$el.find(this.SELECTOR_ICON_ARROW);
            this.$options = this.$el.find(this.SELECTOR_OPTIONS);
            this.$optionsWrapper = this.$el.find(this.SELECTOR_UL_OPTIONS);
            this.$selectedOption = this.$optionsWrapper.find(this.SELECTOR_IS_SELECTED);
        }

        /**
         * Attach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_attachSubscribers',
        value: function _attachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');

            this.subscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
            this.subscribe(_Enums2.default.EVENT.ON_BODY_CLICKED, this._onBodyClick);
            this.subscribe(_Enums2.default.ACTION.OPEN_DROPDOWN, this._onOpeningRequest);
            this.subscribe(_Enums2.default.ACTION.CLOSE_DROPDOWN, this._onClosingRequest);
            this.subscribe(_Enums2.default.EVENT.ON_KEY_DOWN, this._onKeyDown);
            this.subscribe(_Enums2.default.ACTION.SET_DROPDOWN_SELECTED_OPTION, this._handleSelectedOptionChangeRequest);
            this.subscribe(_Enums2.default.ACTION.SET_DROPDOWN_OPTIONS, this._onSetDropdownOptionRequest);
        }

        /**
         * Detach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_detachSubscribers',
        value: function _detachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');

            this.unsubscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
            this.unsubscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
            this.unsubscribe(_Enums2.default.EVENT.ON_BODY_CLICKED, this._onBodyClick);
            this.unsubscribe(_Enums2.default.ACTION.OPEN_DROPDOWN, this._onOpeningRequest);
            this.unsubscribe(_Enums2.default.ACTION.CLOSE_DROPDOWN, this._onClosingRequest);
            this.unsubscribe(_Enums2.default.EVENT.ON_KEY_DOWN, this._onKeyDown);
            this.unsubscribe(_Enums2.default.ACTION.SET_DROPDOWN_SELECTED_OPTION, this._handleSelectedOptionChangeRequest);
            this.unsubscribe(_Enums2.default.ACTION.SET_DROPDOWN_OPTIONS, this._onSetDropdownOptionRequest);
        }

        /**
         * At this point the framework is ready.
         * Add all publish events here (if any)
         * @private
         */

    }, {
        key: '_onFrameworkReady',
        value: function _onFrameworkReady() {}

        /**
         * Attach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_attachDOMListeners',
        value: function _attachDOMListeners() {
            this.$el.on('click', this.SELECTOR_OPTIONS, this._onOptionClick);
            this.$options.on('mousemove', this._onOptionHover);
            this.$optionsWrapper.on('mouseout', this._onMouseLeave);
            this.$iconArrow.on('click', this._onArrowClick);
        }

        /**
         * Detach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_detachDOMListeners',
        value: function _detachDOMListeners() {
            this.$el.off('click', this.SELECTOR_OPTIONS, this._onOptionClick);
            this.$options.off('mousemove', this._onOptionHover);
            this.$optionsWrapper.off('mouseout', this._onMouseLeave);
            this.$iconArrow.off('click', this._onArrowClick);
        }

        /************************************************************************************************************
         ****************************************** Implementation functions ****************************************
         ************************************************************************************************************/

    }, {
        key: '_onOpeningRequest',
        value: function _onOpeningRequest($dropdownToOpen) {
            if (this.$el.is($dropdownToOpen)) {
                this._open();
            }
        }
    }, {
        key: '_onClosingRequest',
        value: function _onClosingRequest($dropdownToClose) {
            if (this.$el.is($dropdownToClose)) {
                this._close();
            }
        }
    }, {
        key: '_onOptionHover',
        value: function _onOptionHover(event) {

            var $target = $(event.currentTarget);

            //Check if the event is a "true" mouse event and not triggered by a scroll.
            if (!this.isUserScrolling && !$target.hasClass(_Enums2.default.CLASS.IS_DISABLED_STATE)) {
            	// [customizing-bj] 상품 사이즈 선택된 경우엔 선택표시 유지
            	var optSizeChkFlag = false;
            	this.$options.each(function(key, value) {
            		if ($(this).attr('uitm-cd') != undefined) {
            			if ($(this).parent().parent().attr('id') != undefined && $(this).parent().parent().attr('id') == 'opt-size' && $("#itemInfForm input[name='uitmCd']") != undefined) {
                     		if (!optSizeChkFlag) optSizeChkFlag = true;
                    		if ($("#itemInfForm input[name='uitmCd']").val() != $(this).attr('uitm-cd')) $(this).removeClass(_Enums2.default.CLASS.IS_SELECTED);
            			} else if ($(this).parent().parent().attr('id') != undefined && $(this).parent().parent().attr('id') == 'quick-opt-size' && $("#itemInfForm input[name='uitmCd']") != undefined) {
            				if (!optSizeChkFlag) optSizeChkFlag = true;
                    		if ($("#itemInfFormQuickShop input[name='uitmCd']").val() != $(this).attr('uitm-cd')) $(this).removeClass(_Enums2.default.CLASS.IS_SELECTED);
            			}
            		}
    			});

                if (!optSizeChkFlag) this.$options.removeClass(_Enums2.default.CLASS.IS_SELECTED);
                $target.addClass(_Enums2.default.CLASS.IS_SELECTED);
            }

            this.isUserScrolling = false;
        }

        /**
         * Replaces the current set of options with new ones.
         * @private
         */

    }, {
        key: '_setOptions',
        value: function _setOptions($options) {

            //Remove listeners for old options
            this.$options.off('mousemove', this._onOptionHover);

            //Clear the list of options and add the new ones.
            this.$optionsWrapper.html('').append($options);
            this.$options = $options;
            this.$options.on('mousemove', this._onOptionHover);
        }

        /**
         * SET_DROPDOWN_OPTIONS event handler
         * @private
         */

    }, {
        key: '_onSetDropdownOptionRequest',
        value: function _onSetDropdownOptionRequest(args) {
            if (this.$el.is(args.dropdown)) {
                this._setOptions(args.options);
            }
        }

        /**
         * Removes filter so all options are visible.
         * @private
         */

    }, {
        key: '_removeFilter',
        value: function _removeFilter() {
            this.$options.removeClass(this.CLASS_DISPLAY_NONE);
        }

        /**
         * Keydown event handler
         * @param event
         * @private
         */

    }, {
        key: '_onKeyDown',
        value: function _onKeyDown(event) {

            if (this.$el.hasClass(_Enums2.default.CLASS.IS_OPEN_STATE)) {

                switch (event.which) {
                    case _Enums2.default.KEYSTROKE.ARROW_UP:
                        event.preventDefault();
                        this._changeSelectedOption(false);
                        break;
                    case _Enums2.default.KEYSTROKE.ARROW_DOWN:
                        event.preventDefault();
                        this._changeSelectedOption(true);
                        break;
                    case _Enums2.default.KEYSTROKE.ENTER:
                        event.preventDefault();
                        this._onKeystrokeEnter();
                        break;
                }
            }
        }

        /**
         * On keystroke enter event handler.
         * @private
         */

    }, {
        key: '_onKeystrokeEnter',
        value: function _onKeystrokeEnter() {

            var $selectedOption = this.$el.find(this.SELECTOR_IS_SELECTED);

            if (!$selectedOption.hasClass('bottom-option')) {
                this._setInputValue($selectedOption);
            }
            this._close();
        }

        /**
         * Changes the selected element in the dropdown.
         * @param isDirectionDown
         * @private
         */

    }, {
        key: '_changeSelectedOption',
        value: function _changeSelectedOption(isDirectionDown) {
            var nrOfSteps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;


            //Find the new selected option
            var $visibleOptions = this.$el.find(this.SELECTOR_VISIBLE_OPTIONS),
                $selectedOption = this.$el.find(this.SELECTOR_IS_SELECTED),
                indexOfSelectedOption = $visibleOptions.index($selectedOption),
                newIndex = isDirectionDown ? indexOfSelectedOption + nrOfSteps : indexOfSelectedOption - nrOfSteps,
                $newSelectedOption = $visibleOptions.eq(newIndex);

            //Do nothing if you are at the bottom or top of list of options.
            if (!$newSelectedOption.size() || newIndex < 0) return;

            //If the option is disabled, make a recursive call
            if ($newSelectedOption.hasClass(_Enums2.default.CLASS.IS_DISABLED_STATE)) {
                this._changeSelectedOption(isDirectionDown, nrOfSteps + 1);
            } else {

                $visibleOptions.removeClass(_Enums2.default.CLASS.IS_SELECTED);
                $newSelectedOption.addClass(_Enums2.default.CLASS.IS_SELECTED);
                this._adjustScrollTop();
            }
        }

        /**
         * Adjusts current scrolltop of options wrapper if needed.
         * @private
         */

    }, {
        key: '_adjustScrollTop',
        value: function _adjustScrollTop() {
            var nrOfVisible = this.$el.find(this.SELECTOR_VISIBLE_OPTIONS).size(),
                nrOfSiblings = this.$el.find(this.SELECTOR_SELECTED_SIBLINGS).size();

            if ((nrOfVisible - nrOfSiblings) * this.optionHeight > this.$optionsWrapper.height() + this.$optionsWrapper.scrollTop()) {
                this.isUserScrolling = true;
                this.$optionsWrapper.scrollTop((nrOfVisible - nrOfSiblings) * this.optionHeight - this.$optionsWrapper.height());
            } else if ((nrOfVisible - nrOfSiblings - 1) * this.optionHeight < this.$optionsWrapper.scrollTop()) {
                this.isUserScrolling = true;
                this.$optionsWrapper.scrollTop((nrOfVisible - nrOfSiblings - 1) * this.optionHeight);
            }
        }

        /**
         * Filters the options of the dropdown. Implement this method in child classes.
         * @private
         */

    }, {
        key: '_filterOptions',
        value: function _filterOptions() {}

        /**
         * Opens dropdown
         * @private
         */

    }, {
        key: '_open',
        value: function _open() {
            if (this.$el.hasClass(_Enums2.default.CLASS.IS_DISABLED_STATE)) return;

            this._removeFilter();
            this.$el.addClass(_Enums2.default.CLASS.IS_OPEN_STATE);

            //Scroll to the selected option
            var scrollTop = this.$options.index(this.$selectedOption) * this.$selectedOption.outerHeight();
            this.$optionsWrapper.scrollTop(scrollTop);
        }

        /**
         * Closes dropdown
         * @private
         */

    }, {
        key: '_close',
        value: function _close() {
            this.$el.removeClass(_Enums2.default.CLASS.IS_OPEN_STATE);
        }

        /**
         * Callback when body is clicked
         * @param event - standard JS event param.
         * @private
         */

    }, {
        key: '_onBodyClick',
        value: function _onBodyClick(event) {

            var $target = $(event.target);

            if (!this.$el.hasClass(_Enums2.default.CLASS.IS_OPEN_STATE)) {
                return;
            } else if (!$target.closest(this.SELECTOR_DROPDOWN).size() || !$target.closest(this.SELECTOR_DROPDOWN).is(this.$el)) {
                this._close();
                this._highlightSelectedOption();
            }
        }
    }, {
        key: '_onMouseLeave',
        value: function _onMouseLeave(event) {

            //Check if the event is a "true" mouse event and not triggered by a scroll.
            if (!this.isUserScrolling) {
                this._highlightSelectedOption();
            }
        }

        /**
         * Highlight the currently selected option by applying the "is-selected" state.
         * @private
         */

    }, {
        key: '_highlightSelectedOption',
        value: function _highlightSelectedOption() {

            if (this.$selectedOption) {
                this.$options.removeClass(_Enums2.default.CLASS.IS_SELECTED);
                this.$selectedOption.addClass(_Enums2.default.CLASS.IS_SELECTED);
            }
        }

        /**
         * Sets the value of the hidden input element.
         * @param $target - Input value will be set to the HTML of the target.
         * @private
         */

    }, {
        key: '_setInputValue',
        value: function _setInputValue($target) {

            if ($target.size()) {
                this.$options.removeClass(this.CLASS_IS_DROPDOWN_VALUE);
                $target.addClass(this.CLASS_IS_DROPDOWN_VALUE);

                var currentValue = $target.html().trim();
                this.$input.val(currentValue).attr('data-value', $target.attr('data-value')).trigger('change');
                this.$selectedOption = $target;
                this.$selectedOption.addClass(_Enums2.default.CLASS.IS_SELECTED);
            }
        }

        /**
         * Handles the SET_DROPDOWN_SELECTED_OPTION event.
         * @param value - Value to be set
         * @param $dropdownElement - The dropdown element to change
         * @private
         */

    }, {
        key: '_handleSelectedOptionChangeRequest',
        value: function _handleSelectedOptionChangeRequest(value, $dropdownElement) {

            if (!$dropdownElement.is(this.$el)) return;

            var $newOption = this.$optionsWrapper.find('[data-value|=' + value + ']');

            if ($newOption.size() == 1) {
                this._setInputValue($newOption);
            }
        }

        /**
         * Callback when an option is clicked
         * @param event - standard JS event param.
         * @private
         */

    }, {
        key: '_onOptionClick',
        value: function _onOptionClick(event) {
            event.preventDefault();
            var $target = $(event.currentTarget);

            if (!$target.hasClass(_Enums2.default.CLASS.IS_DISABLED_STATE) && this.$el.hasClass(_Enums2.default.CLASS.IS_OPEN_STATE)) {

                this.$el.find('li').removeClass('is-selected');
                $target.addClass('is-selected');
                this.$selectedOption = $target;
                this._setInputValue($target);
                this._close();
            }
        }
    }, {
        key: '_onArrowClick',
        value: function _onArrowClick() {

            if (this.$el.hasClass(_Enums2.default.CLASS.IS_OPEN_STATE)) {
                this._close();
            } else if (!this.$el.hasClass(_Enums2.default.CLASS.IS_DISABLED_STATE)) {
                this._open();
            }
        }
    }]);

    return Dropdown;
}(_appeaserComponentBase2.default);

// Export this so we can pick it up and import in main.js


module.exports = Dropdown;

},{"./../../themes/stories/enums.js":54,"./appeaser-component-base.js":39,"./logger.js":44}],42:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _appeaserComponentBase = require('./appeaser-component-base.js');

var _appeaserComponentBase2 = _interopRequireDefault(_appeaserComponentBase);

var _Enums = require('./../../themes/stories/enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

var _Logger = require('./logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Ellipsis = function (_AppeaserComponentBas) {
  _inherits(Ellipsis, _AppeaserComponentBas);

  /**
   * Constructor, will run before page loaded
   */
  function Ellipsis() {
    _classCallCheck(this, Ellipsis);

    var _this = _possibleConstructorReturn(this, (Ellipsis.__proto__ || Object.getPrototypeOf(Ellipsis)).apply(this, arguments));

    _Logger2.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();
    _this._declareConstants();

    _this.subscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed
    return _this;
  }

  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(Ellipsis, [{
    key: 'destroy',
    value: function destroy() {
      _Logger2.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();
      this._detachSubscribers();

      _get(Ellipsis.prototype.__proto__ || Object.getPrototypeOf(Ellipsis.prototype), 'destroy', this).call(this);
    }

    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: '_declareConstants',
    value: function _declareConstants() {
      this.SELECTOR_BODY = 'body';
    }

    /**
     * Called on onDomReady, cache DOM elements
     * @private
     */

  }, {
    key: '_cacheDOMElements',
    value: function _cacheDOMElements() {}

    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: '_jQueryScopeBinding',
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
    }

    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: '_attachSubscribers',
    value: function _attachSubscribers() {
      _Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
      this.subscribe(_Enums2.default.EVENT.ON_PAGE_RESIZE, this._truncate);
    }

    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: '_detachSubscribers',
    value: function _detachSubscribers() {
      _Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
      this.unsubscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
      this.unsubscribe(_Enums2.default.EVENT.ON_PAGE_RESIZE, this._truncate);
    }

    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: '_onFrameworkReady',
    value: function _onFrameworkReady() {}

    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: '_attachDOMListeners',
    value: function _attachDOMListeners() {}

    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: '_detachDOMListeners',
    value: function _detachDOMListeners() {}

    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: '_onDOMReady',
    value: function _onDOMReady() {
      _Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();
      this._attachSubscribers();
      this._attachDOMListeners();

      this._truncate();
    }

    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

  }, {
    key: '_truncate',
    value: function _truncate() {
      this.$el.trunk8({ lines: this.$el.data("lines") });
    }
  }]);

  return Ellipsis;
}(_appeaserComponentBase2.default);

// Export this so we can pick it up and import in main.js


module.exports = Ellipsis;

},{"./../../themes/stories/enums.js":54,"./appeaser-component-base.js":39,"./logger.js":44}],43:[function(require,module,exports){
'use strict';

var BaseEnums = {

    // ACTION
    // - Tell another component to perform as specific predictable action.
    //
    // E.g:
    // ACTION.REVEAL_PRODUCT_TEASER: 'ACTION_REVEAL_PRODUCT_TEASER',
    ACTION: {
        EXAMPLE: 'ACTION_EXAMPLE',
        OPEN_OVERLAY_MENU: 'OPEN_OVERLAY_MENU',
        CLOSE_OVERLAY_MENU: 'CLOSE_OVERLAY_MENU',
        BACKDROP_ANIMATE_GRADIENT: 'BACKDROP_ANIMATE_GRADIENT',
        SET_BACKDROP: 'SET_BACKDROP',
        SHOW_BACKDROP: 'SHOW_BACKDROP',
        HIDE_BACKDROP: 'HIDE_BACKDROP',
        ANIMATE_BACKDROP: 'ANIMATE_BACKDROP',
        SHOW_OVERLAY: 'SHOW_OVERLAY',
        HIDE_OVERLAY: 'HIDE_OVERLAY',
        DISABLE_MENU: 'DISABLE_MENU',
        ENABLE_MENU: 'ENABLE_MENU',
        COPY_FOOTER_TO_MENU: 'COPY_FOOTER_TO_MENU',
        SHOW_SEARCH: 'SHOW_SEARCH',
        HIDE_SEARCH: 'HIDE_SEARCH',
        SHOW_HEADER: 'SHOW_HEADER',
        HIDE_HEADER: 'HIDE_HEADER',
        SHOW_PAGE_CONTENT: 'SHOW_PAGE_CONTENT',
        HIDE_PAGE_CONTENT: 'HIDE_PAGE_CONTENT',
        SET_FOOTER_GRADIENT: 'SET_FOOTER_GRADIENT',
        SC_MENUITEM_CLOSE: 'SC_MENUITEM_CLOSE',
        SCALE_TAKEOVER: 'SCALE_TAKEOVER',
        DISABLE_SCROLL: 'DISABLE_SCROLL',
        ENABLE_SCROLL: 'ENABLE_SCROLL',
        SHOW_LIGHTBOX: 'SHOW_LIGHTBOX',
        HIDE_LIGHTBOX: 'HIDE_LIGHTBOX',
        OPEN_DROPDOWN: 'OPEN_DROPDOWN',
        SHOW_ZOOMED_IMAGE: 'SHOW_ZOOMED_IMAGE',
        SET_ACCORDION_SUMMARY: 'ADD_ACCORDION_FORM_SUMMARY',
        INACTIVATE_MENU_STATE: 'INACTIVATE_MENU_STATE',
        ACTIVATE_MENU_STATE: 'ACTIVATE_MENU_STATE',
        DISABLE_HEADER_STICKY: 'DISABLE_HEADER_STICKY',
        ENABLE_HEADER_STICKY: 'ENABLE_HEADER_STICKY',
        CLOSE_DROPDOWN: 'CLOSE_DROPDOWN',
        OPEN_PAGE_MENU: 'OPEN_PAGE_MENU',
        CLOSE_PAGE_MENU: 'CLOSE_PAGE_MENU',
        CLOSE_FILTERS: 'CLOSE_FILTERS',
        SHOW_FILTER_BADGES: 'SHOW_FILTER_BADGES',
        HIDE_FILTER_BADGES: 'HIDE_FILTER_BADGES',
        UPDATE_PAGE_CONTENT_MARGIN_CONTRIBUTION: 'UPDATE_PAGE_CONTENT_MARGIN_CONTRIBUTION',
        SET_DROPDOWN_SELECTED_OPTION: 'SET_DROPDOWN_SELECTED_OPTION',
        SET_DROPDOWN_OPTIONS: 'SET_DROPDOWN_OPTIONS',
        HIDE_MENU_LISTS: 'HIDE_MENU_LISTS',
        SHOW_MENU_LISTS: 'SHOW_MENU_LISTS',
        CREATE_MAP_MARKERS: 'CREATE_MAP_MARKERS',
        HIDE_NAVIGATION: 'HIDE_NAVIGATION',
        SHOW_NAVIGATION: 'SHOW_NAVIGATION',
        OPEN_MAIN_MENU: 'OPEN_MAIN_MENU',
        HIDE_NAVIGATION_SECONDARY: 'HIDE_NAVIGATION_SECONDARY',
        ADD_ITEM_TO_CART: 'ADD_ITEM_TO_CART',
        UPDATE_SHOPPING_BAG_QTY: 'UPDATE_SHOPPING_BAG_QTY',
        FORM_VALIDATION: 'FORM_VALIDATION',
        SET_SEARCH_SUGGESTIONS: 'SET_SEARCH_SUGGESTIONS',
        GET_SEARCH_SUGGESTIONS: 'GET_SEARCH_SUGGESTIONS',
        SHOW_INACTIVE_SEARCH: 'SHOW_INACTIVE_SEARCH',
        CLEAR_SEARCH_SUGGESTIONS: 'CLEAR_SEARCH_SUGGESTIONS',
        SET_SEARCH_HINT: 'SET_SEARCH_HINT',
        RE_INITIALIZE_SLIDER: 'RE_INITIALIZE_SLIDER',
        CLEAR_FILTERS: 'CLEAR_FILTERS',
        UPDATE_COLLAPSED_FILTERS: 'UPDATE_COLLAPSED_FILTERS',
        UPDATE_OLAPIC_IMAGES: 'UPDATE_OLAPIC_IMAGES',
        HIDE_ADDRESS_BOX_ADD: 'HIDE_ADDRESS_BOX_ADD',
        ADD_SEARCH_TAG: 'ADD_SEARCH_TAG',
        REMOVE_SEARCH_TAG: 'REMOVE_SEARCH_TAG',
        CLEAR_ALL_TAGS: 'CLEAR_ALL_TAGS',
        CENTER_MAP_ON_MARKER: 'CENTER_MAP_ON_MARKER',
        CLOSE_MAP_INFO_BOX: 'CLOSE_MAP_INFO_BOX',
        CLEAR_MAP_MARKERS: 'CLEAR_MAP_MARKERS',
        SHOW_SPINNER: 'SHOW_SPINNER',
        HIDE_SPINNER: 'HIDE_SPINNER',
        LOAD_MORE_CONTENT: 'LOAD_MORE_CONTENT',
        ENABLE_DELIVERY_CONTINUE_BUTTON: 'ENABLE_DELIVERY_CONTINUE_BUTTON',
        DISABLE_DELIVERY_CONTINUE_BUTTON: 'DISABLE_DELIVERY_CONTINUE_BUTTON',
        LOAD_DISASTER_TAG: 'LOAD_DISASTER_TAG',
        UPDATE_SEARCH_TAGS: 'UPDATE_SEARCH_TAGS',
        HALT_DOMREADY_EVENTS: 'HALT_DOMREADY_EVENTS',
        RESUME_DOMREADY_EVENTS: 'RESUME_DOMREADY_EVENTS',
        SHOW_MINICART: 'SHOW_MINICART',
        HIDE_MINICART: 'HIDE_MINICART',
        UPDATE_GLOBAL_SUGGESTIONS: 'UPDATE_GLOBAL_SUGGESTIONS',
        POPULATE_DATA_ON_SUGGESTIONS: 'POPULATE_DATA_ON_SUGGESTIONS',
        SHOW_NOTIFICATION_AREA: 'SHOW_NOTIFICATION_AREA',
        HIDE_NOTIFICATION_AREA: 'HIDE_NOTIFICATION_AREA',
        ALL_OUT_OF_STOCK: 'ALL_OUT_OF_STOCK',
        SCROLL_TO_FORM_ERROR_MSG: 'SCROLL_TO_FORM_ERROR_MSG',
        SET_INPUT_ERROR_MESSAGE: 'SET_INPUT_ERROR_MESSAGE',
        DISABLE_STICKY_SCROLL: 'DISABLE_STICKY_SCROLL',
        ENABLE_STICKY_SCROLL: 'ENABLE_STICKY_SCROLL',
        CLOSE_NAVIGATION: 'CLOSE_NAVIGATION'
    },
    // EVENTS
    // - Notifies anyone who might be listening that something happened
    //
    // E.g:
    // EVENT.ENTER_MARQUEE_MENU: 'EVENT_ENTER_MARQUEE_MENU',
    // EVENT.EXIT_MARQUEE_MENU: 'EVENT_EXIT_MARQUEE_MENU',
    EVENT: {
        ON_EXAMPLE: 'EVENT_ON_EXAMPLE',
        ON_LIGHTBOX_OPEN: 'ON_LIGHTBOX_OPEN',
        ON_LIGHTBOX_CLOSE: 'ON_LIGHTBOX_CLOSE',
        ON_SC_MENUITEM_OPEN: 'ON_SC_MENUITEM_OPEN',
        ON_SC_MENUITEM_CLOSE: 'ON_SC_MENUITEM_CLOSE',
        ON_DOCUMENT_READY: 'ON_DOCUMENT_READY',
        ON_FRAMEWORK_READY: 'ON_FRAMEWORK_READY',
        ON_PAGE_RESIZE: 'ON_PAGE_RESIZE',
        ON_OVERLAY_SHOW: 'ON_OVERLAY_SHOW',
        ON_OVERLAY_HIDE: 'ON_OVERLAY_HIDE',
        ON_OVERLAY_CLICKED: 'ON_OVERLAY_CLICKED',
        ON_SIGN_OUT: 'ON_SIGN_OUT',
        ON_SIGN_IN_SUCCESS: 'ON_SIGN_IN_SUCCESS',
        ON_NAVIGATION_MENU_OPEN: 'ON_NAVIGATION_MENU_SHOW',
        ON_NAVIGATION_MENU_CLOSE: 'ON_NAVIGATION_MENU_HIDE',
        ON_SCROLL_ENABLED: 'ON_SCROLL_ENABLED',
        ON_SCROLL_DISABLED: 'ON_SCROLL_DISABLED',
        ON_BODY_CLICKED: 'ON_BODY_CLICKED',
        ON_KEY_DOWN: 'ON_KEY_DOWN',
        ON_KEY_UP: 'ON_KEY_UP',
        ON_ITEM_ADDED_TO_CART: 'ON_ITEM_ADDED_TO_CART',
        ON_LEFT_PAGE_LINK_CLICKED: 'ON_LEFT_PAGE_LINK_CLICKED',
        ON_RIGHT_PAGE_LINK_CLICKED: 'ON_RIGHT_PAGE_LINK_CLICKED',
        ON_SELECTED_MENU_LINK: 'ON_SELECTED_MENU_LINK',
        ON_PAGE_CONTENT_HIDE: 'ON_PAGE_CONTENT_HIDE',
        ON_PAGE_CONTENT_SHOW: 'ON_PAGE_CONTENT_SHOW',
        ON_CHECKOUT_SECTION_COMPLETED: 'ON_CHECKOUT_SECTION_COMPLETED',
        ON_OLAPIC_PDP_SLIDE_ADDED: 'ON_OLAPIC_PDP_SLIDE_ADDED',
        ON_OLAPIC_PDP_SLIDER_INITIALIZED: 'ON_OLAPIC_PDP_SLIDER_INITIALIZED',
        ON_PAGE_MENU_CLOSE: 'ON_PAGE_MENU_CLOSE',
        ON_FILTER_SELECTED: 'ON_FILTER_SELECTED',
        ON_FILTER_DESELECTED: 'ON_FILTER_DESELECTED',
        ON_FILTER_BADGE_REMOVE: 'ON_FILTER_BADGE_REMOVE',
        ON_PAGE_CONTENT_MARGIN_CHANGE: 'ON_PAGE_CONTENT_MARGIN_CHANGE',
        ON_BEFORE_STICKY_COMPONENT_STICKY: 'ON_BEFORE_STICKY_COMPONENT_STICKY',
        ON_DROPDOWN_OPEN: 'ON_DROPDOWN_OPEN',
        ON_DROPDOWN_CLOSED: 'ON_DROPDOWN_CLOSED',
        ON_FILTER_CATEGORY_SELECTED: 'ON_FILTER_CATEGORY_SELECTED',
        ON_HEADER_STICY: 'ON_HEADER_STICKY',
        ON_HEADER_NOT_STICKY: 'ON_HEADER_NOT_STICKY',
        ON_WINDOW_LOAD: 'ON_WINDOW_LOAD',
        ON_ERROR_BANNER_RESIZE: 'ON_ERROR_BANNER_RESIZE',
        ON_SHOW_SEARCH_SUGGESTIONS: 'ON_SHOW_SEARCH_SUGGESTIONS',
        ON_BEFORE_SEARCH_SHOW: 'ON_BEFORE_SEARCH_SHOW',
        ON_SEARCH_HIDDEN: 'ON_SEARCH_HIDDEN',
        ON_OLAPIC_SLIDES_ADDED: 'ON_OLAPIC_SLIDES_ADDED',
        ON_MAP_MARKERS_CREATED: 'ON_MAP_MARKERS_CREATED',
        ON_MAP_MARKER_CLICK: 'ON_MAP_MARKER_CLICK',
        ON_MAP_INITIALIZED: 'ON_MAP_INITIALIZED',
        ON_NAVIGATION_SUBMENU_SHOW: 'ON_NAVIGATION_SUBMENU_SHOW',
        ON_NAVIGATION_SUBMENU_HIDE: 'ON_NAVIGATION_SUBMENU_HIDE',
        ON_TAKEOVER_BEHIND_HEADER: 'ON_TAKEOVER_BEHIND_HEADER',
        ON_DROPDOWN_OPTION_CHOSEN: 'ON_DROPDOWN_OPTION_CHOSEN',
        ON_FORM_SUBMISSION: 'ON_FORM_SUBMISSION',
        ON_CHECKOUT_SECTION_EDIT: 'ON_CHECKOUT_SECTION_EDIT',
        ON_CHECKOUT_SECTION_CANCEL: 'ON_CHECKOUT_SECTION_CANCEL',
        ON_SEARCH_SUGGESTION_CHOSEN: 'ON_SEARCH_SUGGESTION_CHOSEN',
        ON_SEARCH_INPUT: 'ON_SEARCH_INPUT',
        ON_POPSTATE_DONE: 'ON_POPSTATE_DONE',
        ON_POPSTATE_FAIL: 'ON_POPSTATE_FAIL',
        ON_POPSTATE_ALWAYS: 'ON_POPSTATE_ALWAYS',
        ON_SEARCH_ACTIVE: 'ON_SEARCH_ACTIVE',
        ON_SAVE_FAVORITE: 'ON_SAVE_FAVORITE',
        ON_FILTER_MOUSEOVER: 'ON_FILTER_MOUSEOVER',
        ON_FILTER_MOUSELEAVE: 'ON_FILTER_MOUSELEAVE',
        ON_FILTER_UPDATED: 'ON_FILTER_UPDATED',
        ON_NOTIFICATION_MSG_CLOSED: 'ON_NOTIFICATION_MSG_CLOSED',
        ON_DETAILS_SAVED: 'ON_DETAILS_SAVED',
        ON_NEW_DELIVERY_ADDRESS_SAVED: 'ON_NEW_DELIVERY_ADDRESS_SAVED',
        ON_VOUCHER_CODE_ADDED: 'ON_VOUCHER_CODE_ADDED',
        ON_PAGE_CONTENT_REPLACED: 'ON_PAGE_CONTENT_REPLACED',
        ON_PAGE_LOAD_ERROR: 'ON_PAGE_LOAD_ERROR',
        ON_MINICART_CLOSE: 'ON_MINICART_CLOSE',
        ON_CONTENT_LOADED: 'ON_CONTENT_LOADED',
        ON_FILTER_VISIBILITY_CHANGED: 'ON_FILTER_VISIBILITY_CHANGED',
        ON_LIGHTBOX_LEVEL_CHANGED: 'ON_LIGHTBOX_LEVEL_CHANGED',
        ON_BANNER_ACTIVE: 'ON_BANNER_ACTIVE',
        ON_FILTER_APPLY_BUTTON_CLICKED: 'ON_FILTER_APPLY_BUTTON_CLICKED',
        ON_FILTER_CLEAR_BUTTON_CLICKED: 'ON_FILTER_CLEAR_BUTTON_CLICKED',
        ON_BEFORE_CLOSE_LIGHTBOX: 'ON_BEFORE_CLOSE_LIGHTBOX',
        ON_SIZE_SWATCH_SELECTED: 'ON_SIZE_SWATCH_SELECTED',
        ON_DISABLED_COLOR_SELECTED: 'ON_DISABLED_COLOR_SELECTED',
        ON_ENABLED_COLOR_SELECTED: 'ON_ENABLED_COLOR_SELECTED'
    },

    // KEY
    KEYSTROKE: {
        DELETE: 8,
        TAB: 9,
        ENTER: 13,
        ESCAPE: 27,
        SPACEBAR: 32,
        ARROW_DOWN: 40,
        ARROW_UP: 38,
        ARROW_RIGHT: 39,
        A: 65
    },

    // MEDIA QUERIES
    // - To be used with enquire.js
    MQ: {
        IS_MOBILE: 'screen and (max-width: 767px)',
        IS_TABLET: 'screen and (min-width: 768px) and (max-width: 1024px)',
        IS_PORTRAIT_TABLET: 'screen and (min-width: 768px) and (max-width: 900px)',
        IS_LANDSCAPE_TABLET: 'screen and (min-width: 901px) and (max-width: 1024px)',
        IS_DESKTOP: 'screen and (min-width: 1025px)',
        IS_DESKTOP_HD: 'screen and (min-width: 1281px)',
        MOBILE_AND_TABLET_RANGE: 'screen and (max-width: 1024px)',
        TABLET_AND_DESKTOP_RANGE: 'screen and (min-width: 768px)'
    },

    CLASS: {
        IS_CHECKOUT_PAGE: 'is-checkout',
        IS_DISABLED_STATE: 'is-disabled',
        IS_ENABLED_STATE: 'is-enabled',
        IS_HOVER_STATE: 'is-hover',
        IS_OPEN_STATE: 'is-open',
        IS_SCROLLED: 'is-scrolled',
        IS_ACTIVE_STATE: 'is-active',
        IS_CLOSED_STATE: 'is-closed',
        IS_VISIBLE_STATE: 'is-visible',
        IS_ORDER_STATE: 'is-order',
        IS_SIGNED_IN_STATE: 'is-signed-in',
        IS_COMPLETED_STATE: 'is-completed',
        DISABLE_SCROLL: 'u-overflow-hidden',
        IS_HIDDEN_STATE: 'is-hidden',
        IS_SOLD_OUT: 'is-sold-out',
        IS_SELECTED: 'is-selected',
        IS_DARK: 'is-dark',
        HAS_RESULTS: 'has-results',
        HAS_TEXT: 'has-text',
        HAS_ERROR: 'has-error',
        IS_STICKY: 'is-sticky',
        FLEXIBLE: 'flexible',
        ELLIPSIS: 'u-ellipsis',
        DISPLAY_NONE: 'u-display-none',
        IS_LOADING: 'is-loading',
        HAS_ONE_ITEM: 'has-one-item',
        ERROR_LIGHTBOX: 'open-lightbox-error',
        OPEN_LIGHTBOX: 'open-lightbox',
        IS_TRANSPARENT: 'is-transparent',
        IS_INVISIBLE: 'u-visibility-hidden',
        NO_ANIMATION: 'u-no-animation',
        IS_FILLED: 'is-filled',
        IS_HIGHLIGHTED: 'is-highlighted',
        IS_TREMBLING: 'is-trembling',
        IS_REMOVING_STATE: 'is-removing',
        IS_REPLACING_STATE: 'is-replacing-preview',
        IS_APPEARING_STATE: 'is-appearing',
        IS_LEAVING_STATE: 'is-leaving',
        IS_MORPHING_STATE: 'is-morphing',
        IS_FLYING_IN_AND_OUT: 'fly-in-fly-out',
        IS_SALE: 'is-sale',
        IS_INVERTED: 'is-inverted',
        IS_EXPANDED: 'is-expanded',
        IS_COLLAPSED: 'is-collapsed',
        HAS_NOTIFICATION: 'has-notification'
    },

    // Slider related constants
    SWIPER: {
        SELECTOR_ARROW_NEXT: '.swiper-arrow.swiper-next',
        SELECTOR_ARROW_PREV: '.swiper-arrow.swiper-prev',
        SELECTOR_PAGINATION: '.swiper-pagination',
        SELECTOR_SWIPER_WRAPPER: '.swiper-wrapper',
        SELECTOR_SLIDE: '.swiper-slide',
        SELECTOR_SWIPER_CONTROLS: '.swiper-arrow, .swiper-pagination',
        CLASS_CONTAINER: 'swiper-container',
        CLASS_WRAPPER: 'swiper-wrapper',
        CLASS_SLIDE: 'swiper-slide',
        CLASS_ARROW_NEXT: 'swiper-arrow swiper-next',
        CLASS_ARROW_PREV: 'swiper-arrow swiper-prev',
        CLASS_PAGINATION: 'swiper-pagination',
        CLASS_INITIALIZED: 'swiper-initialized'
    },

    SELECTOR: {
        OPEN_LIGHTBOX: '.open-lightbox'
    },

    BREAKPOINT: {
        MOBILE: 480,
        TABLET: 1024,
        DESKTOP: 1480
    },

    TIME: {
        ERROR_BANNER_ANIMATION: 400
    },

    SIZES: {
        HEADER_HEIGHT: 125,
        LIGHTBOX_PADDING: 40
    },

    ENDPOINT: {
        OLAPIC_BASE: '//photorankapi-a.akamaihd.net',
        STORE_LOCATOR: {
            COUNTRIES: '/rest/storelocator/locations/1.0/locale/en_GB/countries',
            REGIONS: '/rest/storelocator/locations/1.0/locale/en_GB/country/%s/regions',
            CITIES: '/rest/storelocator/locations/1.0/locale/en_GB/country/%s/cities',
            CITY: '/rest/storelocator/locations/1.0/locale/en_GB/country/%s/city/%cityID',
            STORES_BY_COUNTRY: '/rest/storelocator/stores/1.0/locale/en_GB/country/%s',
            STORES_BY_CITY: '/rest/storelocator/stores/1.0/locale/en_GB/country/%s/city/%cityID'
        }
    }
};

module.exports = BaseEnums;

},{}],44:[function(require,module,exports){
'use strict';

var _Versions = require('./versions.js');

var _Versions2 = _interopRequireDefault(_Versions);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Logger = {
    active: location.hash.indexOf('#log') > -1,

    LOG: function LOG() {
        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        if (Logger.active === true) {
            console.log(args.join(' '));
        }
    },

    INFO: function INFO() {
        for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
            args[_key2] = arguments[_key2];
        }

        if (Logger.active === true) {
            console.info(args.join(' '));
        }
    },

    ERROR: function ERROR() {
        for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
            args[_key3] = arguments[_key3];
        }

        if (Logger.active === true) {
            console.error(args.join(' '));
        }
    },

    VERSIONS: function () {
        if (location.hash.indexOf('#log') > -1) {
            console.info(_Versions2.default);
        }
    }()
};

module.exports = Logger;

},{"./versions.js":50}],45:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _dropdown = require('./dropdown.js');

var _dropdown2 = _interopRequireDefault(_dropdown);

var _Logger = require('./logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../themes/stories/enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var MDropdown = function (_Dropdown) {
    _inherits(MDropdown, _Dropdown);

    /**
     * Constructor, will run before page loaded
     */
    function MDropdown() {
        _classCallCheck(this, MDropdown);

        var _this = _possibleConstructorReturn(this, (MDropdown.__proto__ || Object.getPrototypeOf(MDropdown)).apply(this, arguments));

        _Logger2.default.INFO(_this.constructor.name, ':: Constructor');

        return _this;
    }

    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */


    _createClass(MDropdown, [{
        key: '_declareConstants',
        value: function _declareConstants() {

            _get(MDropdown.prototype.__proto__ || Object.getPrototypeOf(MDropdown.prototype), '_declareConstants', this).call(this);

            //Classes
            this.CLASS_BOTTOM_OPTION = 'bottom-option';

            //SELECTORS
            this.SELECTOR_PLACEHOLDER = '.placeholder';
            this.SELECTOR_BOTTOM_OPTION = 'ul.bottom-option';
            this.SELECTOR_OPTIONS = '.options li, ul.bottom-option';
            this.SELECTOR_SELECTED_SIBLINGS = '.is-selected ~ li, ul.bottom-option:visible';
            this.SELECTOR_VISIBLE_OPTIONS = '.options li:not(.u-display-none), ul.bottom-option:visible';
            this.SELECTOR_LIGHTBOX = '.o-lightbox';
            this.SELECTOR_ERROR_MESSAGE = '.error-msg';
        }

        /**
         * Scopes "this" to use the "this" of the outside function
         * Since JQuery creates a new function with a new "this"
         * Attach all functions that needs to be binded here
         * @private
         */

    }, {
        key: '_jQueryScopeBinding',
        value: function _jQueryScopeBinding() {

            _get(MDropdown.prototype.__proto__ || Object.getPrototypeOf(MDropdown.prototype), '_jQueryScopeBinding', this).call(this);

            this._onPlaceholderClick = this._onPlaceholderClick.bind(this);
            this._validate = this._validate.bind(this);
        }

        /**
         * Runs on DOM Ready
         * Should be used to attach DOM listeners etc
         * @private
         */

    }, {
        key: '_onDOMReady',
        value: function _onDOMReady() {
            _Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');

            //_onDOMReady in parent calls _attachDOMListeners, so we need perform our own actions first.
            _get(MDropdown.prototype.__proto__ || Object.getPrototypeOf(MDropdown.prototype), '_onDOMReady', this).call(this);
        }

        /**
         * Called on onDomReady, cache DOM elements
         * @private
         */

    }, {
        key: '_cacheDOMElements',
        value: function _cacheDOMElements() {
            this.$input = this.$el.find('input');
            this.$placeholder = this.$el.find(this.SELECTOR_PLACEHOLDER);
            this.$selectedOption = this.$el.find(this.SELECTOR_IS_SELECTED);
            this.$optionsWrapper = this.$el.find(this.SELECTOR_UL_OPTIONS);
            this.$btnBottom = this.$el.find(this.SELECTOR_BOTTOM_OPTION);
            this.$lightbox = $(this.SELECTOR_LIGHTBOX);
            this.$errorMsg = this.$el.find(this.SELECTOR_ERROR_MESSAGE);

            _get(MDropdown.prototype.__proto__ || Object.getPrototypeOf(MDropdown.prototype), '_cacheDOMElements', this).call(this);
        }

        /**
         * Attach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_attachSubscribers',
        value: function _attachSubscribers() {

            _get(MDropdown.prototype.__proto__ || Object.getPrototypeOf(MDropdown.prototype), '_attachSubscribers', this).call(this);

            this.subscribe(_Enums2.default.EVENT.ON_LIGHTBOX_OPEN, this._toggleLightboxListener);
            this.subscribe(_Enums2.default.EVENT.ON_LIGHTBOX_CLOSE, this._toggleLightboxListener);
        }

        /**
         * Detach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_detachSubscribers',
        value: function _detachSubscribers() {
            _get(MDropdown.prototype.__proto__ || Object.getPrototypeOf(MDropdown.prototype), '_attachSubscribers', this).call(this);

            this.unsubscribe(_Enums2.default.EVENT.ON_LIGHTBOX_OPEN, this._toggleLightboxListener);
            this.unsubscribe(_Enums2.default.EVENT.ON_LIGHTBOX_CLOSE, this._toggleLightboxListener);
        }

        /**
         * Attach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_attachDOMListeners',
        value: function _attachDOMListeners() {

            _get(MDropdown.prototype.__proto__ || Object.getPrototypeOf(MDropdown.prototype), '_attachDOMListeners', this).call(this);

            this.$placeholder.on('click', this._onPlaceholderClick);
            this.$btnBottom.on('mouseout', this._onMouseLeave);
            if (this.$input.attr("required")) {
                this.$input.on('invalid change', this._validate);
            }
        }

        /**
         * Detach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_detachDOMListeners',
        value: function _detachDOMListeners() {

            _get(MDropdown.prototype.__proto__ || Object.getPrototypeOf(MDropdown.prototype), '_detachDOMListeners', this).call(this);

            this.$placeholder.off('click', this._onPlaceholderClick);
            this.$btnBottom.off('mouseout', this._onMouseLeave);
            if (this.$input.attr("required")) {
                this.$input.off('invalid change', this._validate);
            }
        }

        /************************************************************************************************************
         ****************************************** Implementation functions ****************************************
         ************************************************************************************************************/

        /**
         * Validates the input tag
         * @private
         */

    }, {
        key: '_validate',
        value: function _validate() {

            if (this.$input[0].validity.valueMissing) {
                this.$el.addClass(_Enums2.default.CLASS.HAS_ERROR);
                this.$errorMsg.html(this.$input.data('validation-required-text'));
            } else {
                this.$el.removeClass(_Enums2.default.CLASS.HAS_ERROR);
            }
        }

        /**
         * Adds or removes lightbox click event listener
         * @private
         */

    }, {
        key: '_toggleLightboxListener',
        value: function _toggleLightboxListener() {

            if (this.$lightbox.hasClass(_Enums2.default.CLASS.IS_OPEN_STATE)) {
                this.$lightbox.on('click', this._onBodyClick);
            } else {
                this.$lightbox.off('click', this._onBodyClick);
            }
        }

        /**
         * Removes selected state from all options.
         * @private
         */

    }, {
        key: '_removeSelectedOptionState',
        value: function _removeSelectedOptionState() {
            this.$options.removeClass(_Enums2.default.CLASS.IS_SELECTED);
        }

        /**
         * Opens dropdown
         * @private
         */

    }, {
        key: '_open',
        value: function _open() {
            this.$el.addClass(_Enums2.default.CLASS.IS_OPEN_STATE);
            if (Modernizr.mq(_Enums2.default.MQ.IS_MOBILE)) {
                this._preventMobileScroll();
            }
            this.publish(_Enums2.default.EVENT.ON_DROPDOWN_OPEN);
        }

        /**
         * Closes dropdown
         * @private
         */

    }, {
        key: '_close',
        value: function _close() {
            this.publish(_Enums2.default.ACTION.HIDE_OVERLAY);
            this._enableMobileScroll();
            this.$el.removeClass(_Enums2.default.CLASS.IS_OPEN_STATE);
            this.publish(_Enums2.default.EVENT.ON_DROPDOWN_CLOSED, this.$el);
        }

        /**
         * Sets the value of the hidden input element.
         * @private
         */

    }, {
        key: '_setInputValue',
        value: function _setInputValue($target) {
            var currentValue = $target.html();

            this.$input.val(currentValue).attr('data-value', $target.attr('data-value')).trigger('change');
            this.$selectedOption = $target;
            this.$placeholder.text(currentValue);

            if (this.$placeholder.hasClass(this.CLASS_TEMPORARY)) {
                this._resetPlaceholderColor();
            }
        }

        /**
         * Callback when an option is clicked
         * @param event - standard JS event param.
         * @private
         */

    }, {
        key: '_onOptionClick',
        value: function _onOptionClick(event) {

            var $target = $(event.target);

            if (!$target.hasClass(_Enums2.default.CLASS.IS_DISABLED_STATE) && !$target.parent().hasClass(this.CLASS_BOTTOM_OPTION) && this.$el.hasClass(_Enums2.default.CLASS.IS_OPEN_STATE)) {

                this.$el.find('li').removeClass('is-selected');
                $target.addClass('is-selected');
                this._setInputValue($target);
                this.$selectedOption = $target;
                // [customizing-bj] 퀵샵 상품 옵션 클릭시 딤드 풀리는 현상 수정
                if ($target.attr('id') == 'quick-opt-color' || $target.attr('id') == 'quick-opt-size') {
                	this._enableMobileScroll();
                    this.$el.removeClass(_Enums2.default.CLASS.IS_OPEN_STATE);
                    this.publish(_Enums2.default.EVENT.ON_DROPDOWN_CLOSED, this.$el);
                } else {
                	this._close();
                }
            } else if ($target.parent().hasClass(this.CLASS_BOTTOM_OPTION)) {

                this._close();
            }
        }
    }, {
        key: '_onPlaceholderClick',
        value: function _onPlaceholderClick() {

            if (this.$el.hasClass(_Enums2.default.CLASS.IS_OPEN_STATE)) {
                this._close();
            } else if (!this.$el.hasClass(_Enums2.default.CLASS.IS_DISABLED_STATE) && !this.$el.hasClass(_Enums2.default.CLASS.HAS_ONE_ITEM)) {
                this._open();
            }
        }

        /**
         * Prevents mobile scrolling
         * @private
         */

    }, {
        key: '_preventMobileScroll',
        value: function _preventMobileScroll() {
        	this._scrollY = $(window).scrollTop();
            this.publish(_Enums2.default.ACTION.DISABLE_SCROLL, {
                $touchScrollElement: this.$optionsWrapper,
                forceScrollPosition: true
            });
            this.scrollDisabled = true;
        }

        /**
         * Enables mobile scrolling
         * @private
         */

    }, {
        key: '_enableMobileScroll',
        value: function _enableMobileScroll() {
            if (this.scrollDisabled) {
                this.publish(_Enums2.default.ACTION.ENABLE_SCROLL);
                this.scrollDisabled = false;
            }
            if(this._scrollY > -1){
            	$(window).scrollTop(this._scrollY);
            	this._scrollY = -1;
            }
        }
    }]);

    return MDropdown;
}(_dropdown2.default);

// Export this so we can pick it up and import in main.js


module.exports = MDropdown;

},{"./../../themes/stories/enums.js":54,"./dropdown.js":41,"./logger.js":44}],46:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _appeaserComponentBase = require('./appeaser-component-base.js');

var _appeaserComponentBase2 = _interopRequireDefault(_appeaserComponentBase);

var _Enums = require('./../../themes/stories/enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

var _Logger = require('./logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OlapicBase = function (_AppeaserComponentBas) {
    _inherits(OlapicBase, _AppeaserComponentBas);

    function OlapicBase() {
        _classCallCheck(this, OlapicBase);

        var _this = _possibleConstructorReturn(this, (OlapicBase.__proto__ || Object.getPrototypeOf(OlapicBase)).apply(this, arguments));

        _this.links = {};
        _this._media = { links: {}, media: [] };
        _this.callback = undefined;
        _this.settings = {};

        return _this;
    }

    _createClass(OlapicBase, [{
        key: 'createProductUrlRequest',
        value: function createProductUrlRequest(onChangeProduct) {
            var _this2 = this;

            var url = _Enums2.default.ENDPOINT.OLAPIC_BASE + ('/?auth_token=' + this.settings.apiKey + '&wrap_responses=' + this.settings.wrapResponses + '&version=' + this.settings.version);

            $.ajax({
                url: url
            }).done(function (data) {
                url = _Enums2.default.ENDPOINT.OLAPIC_BASE + ('/customers/' + data.data._embedded.customer.id + '/streams/bytag/' + _this2.settings.productId + '?auth_token=' + _this2.settings.apiKey + '&wrap_responses=' + _this2.settings.wrapResponses + '&version=' + _this2.settings.version);
                _this2.type = "product";

                _this2.fetchLinks(url, _this2.settings.mediaType, _this2._onMediaFetched, _this2.type, onChangeProduct);
            }).fail(function (e) {
                return _Logger2.default.LOG("fetchCustomerId failed", e.responseText);
            });
        }
    }, {
        key: 'createRegularUrlRequest',
        value: function createRegularUrlRequest() {
            var url = _Enums2.default.ENDPOINT.OLAPIC_BASE + ('/' + this.settings.entity + '/' + this.settings.entityId + '?auth_token=' + this.settings.apiKey + '&wrap_responses=' + this.settings.wrapResponses + '&version=' + this.settings.version);

            this.fetchLinks(url, this.settings.mediaType, this._onMediaFetched, this.type);
        }

        /**
         * Fetches Olapic links
         * @param url
         * @param callback
         */

    }, {
        key: 'fetchLinks',
        value: function fetchLinks(url, mediaType, callback, type, onChangeProduct) {
            var _this3 = this;

            this.callback = callback;
            this.onChangeProduct = onChangeProduct;
            this.mediaType = mediaType || 'recent';

            $.ajax({
                url: url
            }).done(function (data) {
                return _this3.parseLinks(data, type);
            }).fail(function (e) {
                return _Logger2.default.LOG("fetchLinks failed", e.responseText);
            });
        }

        /**
         * Fetches Olapic media list
         * @param url
         * @param count
         */

    }, {
        key: 'fetchMedia',
        value: function fetchMedia(url, count) {
            var _this4 = this;

            $.ajax({
                url: url + (count > 0 ? '&count=' + count : '')
            }).done(function (data) {
                return _this4.parseMedia(data);
            }).fail(function (e) {
                _this4._onNoMediaFetched();
                console.log("fetchMedia failed", e.responseText);
            });
        }

        /**
         * Fetches olapic media next link
         * @param count
         */

    }, {
        key: 'fetchNext',
        value: function fetchNext(count) {
            var _this5 = this;

            if (this.hasNext()) {
                $.ajax({
                    url: this._media.links.next.href + (count > 0 ? '&count=' + count : '')
                }).done(function (data) {
                    return _this5.parseMedia(data);
                }).fail(function (e) {
                    return console.log("fetchMedia next failed", e.responseText);
                });
            }
        }

        /**
         * Checks if we have reached the end of the media stream
         * @returns {boolean}
         */

    }, {
        key: 'hasNext',
        value: function hasNext() {
            return this._media.links.next && this._media.links.next.href != null;
        }

        /**
         * Parse links from response
         * @param links
         */

    }, {
        key: 'parseLinks',
        value: function parseLinks(json, type) {
            if (this.settings.entity == "categories" || type == "product") {
                var links = void 0;

                if (json.data._embedded) {
                    links = json.data._embedded['media:' + this.mediaType]._links.self.href;
                }

                if (links && links.length) {
                    return this.fetchMedia(links, this.settings.count || 1);
                } else {
                    this.callback();
                    return;
                }
            } else {
                var _links = json.data._embedded.customer._embedded;

                for (var key in _links) {
                    this.links[key] = _links[key]._links.self.href;
                }

                var media = this.links['media:' + this.mediaType];

                if (media.length > 0) {
                    return this.fetchMedia(media, this.settings.count || 1);
                }
            }
            _Logger2.default.ERROR('No media:[' + this.mediaType + '] links found from Olapic Feed');
        }

        /**
         * Parse media response
         * @param json
         */

    }, {
        key: 'parseMedia',
        value: function parseMedia(json) {
            // get all the links
            var medias = json.data._embedded.media;
            this._media.links = json.data._links;

            var self = this;

            medias.forEach(function (m) {
                var media = m;

                // clean categories
                if (media._embedded['categories:all']._embedded.category != null) {
                    media.stream = media._embedded['categories:all']._embedded.category.map(self._cleanHAL);
                }

                // clean streams
                media.stream = media._embedded['streams:all']._embedded.stream.map(self._cleanHAL);

                // clean uploader
                media.uploader = self._cleanHAL(media._embedded.uploader);

                // remove all _ indexes
                self._cleanHAL(media);

                // store data
                self._media.media.push(media);
            });

            if (this.callback) {
                this.callback(this.onChangeProduct, medias.length);
            }
        }

        /**
         * Remove HAL specific keys, starting with _
         * @param json
         * @returns {*}
         * @private
         */

    }, {
        key: '_cleanHAL',
        value: function _cleanHAL(json) {
            for (var key in json) {
                if (key.indexOf('_') == 0) {
                    delete json[key];
                }
            }

            return json;
        }
    }]);

    return OlapicBase;
}(_appeaserComponentBase2.default);

// Export AMD, CommonJS/ES6 module or assume global namespace


if (typeof define !== 'undefined' && define.amd) {
    define([], OlapicBase);
} else if (typeof module !== 'undefined' && module.exports) {
    module.exports = OlapicBase;
} else {
    window.OlapicBase = OlapicBase;
}

},{"./../../themes/stories/enums.js":54,"./appeaser-component-base.js":39,"./logger.js":44}],47:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _appeaserComponentBase = require('./appeaser-component-base.js');

var _appeaserComponentBase2 = _interopRequireDefault(_appeaserComponentBase);

var _Logger = require('./logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../themes/stories/enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var StickyComponent = function (_AppeaserComponentBas) {
    _inherits(StickyComponent, _AppeaserComponentBas);

    /**
     * Constructor, will run before page loaded
     */
    function StickyComponent() {
        _classCallCheck(this, StickyComponent);

        var _this = _possibleConstructorReturn(this, (StickyComponent.__proto__ || Object.getPrototypeOf(StickyComponent)).apply(this, arguments));

        _Logger2.default.INFO(_this.constructor.name, ':: Constructor');

        _this._jQueryScopeBinding();
        _this._declareConstants();
        _this.subscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed
        return _this;
    }

    /**
     * Destructor, will run after page unload (or destroy)
     */


    _createClass(StickyComponent, [{
        key: 'destroy',
        value: function destroy() {
            _Logger2.default.INFO(this.constructor.name, ':: Destructor');

            this._detachDOMListeners();
            this._detachSubscribers();

            _get(StickyComponent.prototype.__proto__ || Object.getPrototypeOf(StickyComponent.prototype), 'destroy', this).call(this);
        }

        /************************************************************************************************************
         ******************************************** Internal functions ********************************************
         ************************************************************************************************************/

        /**
         * Declare class constants here
         * @private
         */

    }, {
        key: '_declareConstants',
        value: function _declareConstants() {

            this.SELECTOR_PAGE_CONTENT = '.o-page-content';
            this.SELECTOR_STICKY_TO = '';
        }

        /**
         * Caching DOM elements for performance
         * @private
         */

    }, {
        key: '_cacheDOMElements',
        value: function _cacheDOMElements() {

            var $stickyElement = $(this.$el.data("stickyElement"));
            this.$stickyTo = $(this.SELECTOR_STICKY_TO);
            this.$stickyElement = $stickyElement.length ? $stickyElement : this.$el;
            this.$window = $(window);
            this.$pageContent = $(this.SELECTOR_PAGE_CONTENT);
            this.stickyThreshold = this.$stickyElement.offset().top;
        }

        /**
         * Runs on DOM Ready
         * Should be used to attach DOM listeners etc
         * @private
         */

    }, {
        key: '_onDOMReady',
        value: function _onDOMReady() {
            _Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');

            this._cacheDOMElements();
            this._attachSubscribers();
            this._attachDOMListeners();
            this._updateThreshold();
        }

        /**
         * Scopes "this" to use the "this" of the outside function
         * Since JQuery creates a new function with a new "this"
         * Attach all functions that needs to be binded here
         * @private
         */

    }, {
        key: '_jQueryScopeBinding',
        value: function _jQueryScopeBinding() {
            this._onDOMReady = this._onDOMReady.bind(this);
            this._onScroll = this._onScroll.bind(this);
            this._onResize = this._onResize.bind(this);
            this._onPageContentMarginChange = this._onPageContentMarginChange.bind(this);
            this._enableStickyScroll = this._enableStickyScroll.bind(this);
            this._disableStickyScroll = this._disableStickyScroll.bind(this);
        }

        /**
         * Attach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_attachSubscribers',
        value: function _attachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');

            this.subscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
            this.subscribe(_Enums2.default.EVENT.ON_PAGE_CONTENT_MARGIN_CHANGE, this._onPageContentMarginChange);
            this.subscribe(_Enums2.default.ACTION.ENABLE_STICKY_SCROLL, this._enableStickyScroll);
            this.subscribe(_Enums2.default.ACTION.DISABLE_STICKY_SCROLL, this._disableStickyScroll);
        }

        /**
         * Detach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_detachSubscribers',
        value: function _detachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');

            this.unsubscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
            this.unsubscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
            this.unsubscribe(_Enums2.default.EVENT.ON_PAGE_CONTENT_MARGIN_CHANGE, this._onPageContentMarginChange);
            this.unsubscribe(_Enums2.default.ACTION.ENABLE_STICKY_SCROLL, this._enableStickyScroll);
            this.unsubscribe(_Enums2.default.ACTION.DISABLE_STICKY_SCROLL, this._disableStickyScroll);
        }

        /**
         * At this point the framework is ready.
         * Add all publish events here (if any)
         * @private
         */

    }, {
        key: '_onFrameworkReady',
        value: function _onFrameworkReady() {}

        /**
         * Attach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_attachDOMListeners',
        value: function _attachDOMListeners() {
            this.$window.on('scroll', this._onScroll);
            this.$window.on('resize', this._onResize);
        }

        /**
         * Detach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_detachDOMListeners',
        value: function _detachDOMListeners() {
            this.$window.off('scroll', this._onScroll);
            this.$window.off('resize', this._onResize);
        }

        /************************************************************************************************************
         ****************************************** Implementation functions ****************************************
         ************************************************************************************************************/

        /**
         * Enables EventListeners
         * @private
         */

    }, {
        key: '_enableStickyScroll',
        value: function _enableStickyScroll() {
            this._attachDOMListeners();
        }

        /**
         * Disables EventListeners
         * @private
         */

    }, {
        key: '_disableStickyScroll',
        value: function _disableStickyScroll() {
            this._detachDOMListeners();
        }
    }, {
        key: '_onResize',
        value: function _onResize() {
            if (this.$el.hasClass(_Enums2.default.CLASS.IS_STICKY)) {
                this.publish(_Enums2.default.ACTION.UPDATE_PAGE_CONTENT_MARGIN_CONTRIBUTION, { margin: this.$el.outerHeight(), element: this.$el });
            }
        }
    }, {
        key: '_onPageContentMarginChange',
        value: function _onPageContentMarginChange($element) {
            if (!$element.is(this.$el)) {
                this._updateThreshold();
            }
        }

        /**
         * Updates the sticky threshold
         * @private
         */

    }, {
        key: '_updateThreshold',
        value: function _updateThreshold() {

            if (!this.$pageContent) return;

            this.stickyThreshold = parseInt(this.$pageContent.css('margin-top')) + (this.$el.offset().top - this.$stickyElement.offset().top);

            if (this.$el.hasClass(_Enums2.default.CLASS.IS_STICKY)) {
                this.stickyThreshold -= this.$el.outerHeight();
            }
        }

        /**
         * Scroll event handler
         * @private
         */

    }, {
        key: '_onScroll',
        value: function _onScroll() {
            if (!this.$el.hasClass(_Enums2.default.CLASS.IS_STICKY) && this.$stickyTo.hasClass(_Enums2.default.CLASS.IS_STICKY) && this.$stickyTo.offset().top + this.$stickyTo.outerHeight() > this.$stickyElement.offset().top) {

                this.publish(_Enums2.default.EVENT.ON_BEFORE_STICKY_COMPONENT_STICKY);
                this.publish(_Enums2.default.ACTION.UPDATE_PAGE_CONTENT_MARGIN_CONTRIBUTION, { margin: this.$el.outerHeight(), element: this.$el });
                this.$el.addClass(_Enums2.default.CLASS.IS_STICKY);

                this._updateThreshold();
            } else if (this.$el.hasClass(_Enums2.default.CLASS.IS_STICKY) && this.$stickyElement.offset().top < this.stickyThreshold) {

                this.$el.removeClass(_Enums2.default.CLASS.IS_STICKY);
                this.publish(_Enums2.default.ACTION.UPDATE_PAGE_CONTENT_MARGIN_CONTRIBUTION, { margin: 0, element: this.$el });
                this.$el.css('margin-top', '');
                this._updateThreshold();
            }
        }
    }]);

    return StickyComponent;
}(_appeaserComponentBase2.default);

// Export this so we can pick it up and import in main.js


module.exports = StickyComponent;

},{"./../../themes/stories/enums.js":54,"./appeaser-component-base.js":39,"./logger.js":44}],48:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _appeaserComponentBase = require('./appeaser-component-base.js');

var _appeaserComponentBase2 = _interopRequireDefault(_appeaserComponentBase);

var _Logger = require('./logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../themes/stories/enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

var _Utils = require('./../../themes/stories/utils.js');

var _Utils2 = _interopRequireDefault(_Utils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var StoreLocator = function (_AppeaserComponentBas) {
    _inherits(StoreLocator, _AppeaserComponentBas);

    /**
     * Constructor, will run before page loaded
     */
    function StoreLocator() {
        _classCallCheck(this, StoreLocator);

        var _this = _possibleConstructorReturn(this, (StoreLocator.__proto__ || Object.getPrototypeOf(StoreLocator)).apply(this, arguments));

        _Logger2.default.INFO(_this.constructor.name, ':: Constructor');

        _this._jQueryScopeBinding();
        _this._declareConstants();
        _this.subscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed
        return _this;
    }

    /**
     * Destructor, will run after page unload (or destroy)
     */


    _createClass(StoreLocator, [{
        key: 'destroy',
        value: function destroy() {
            _Logger2.default.INFO(this.constructor.name, ':: Destructor');

            this._detachDOMListeners();
            this._detachSubscribers();
            this._detachMQHandlers();

            _get(StoreLocator.prototype.__proto__ || Object.getPrototypeOf(StoreLocator.prototype), 'destroy', this).call(this);
        }

        /************************************************************************************************************
         ******************************************** Internal functions ********************************************
         ************************************************************************************************************/

        /**
         * Declare class constants here
         * @private
         */

    }, {
        key: '_declareConstants',
        value: function _declareConstants() {
            this.SELECTOR_STORES = '';
            this.SELECTOR_STORE_COUNT = '';

            this.TEMPLATE_STORE_INFORMATION_GRID = '';

            this.CURRENT_COUNTRY = null;
            this.CURRENT_STORES = null;

            this.ITEMS_PER_ROW_DESKTOP = 4;
            this.ITEMS_PER_ROW_TABLET = 2;

            this.RESPONSE_TYPE = '?_type=json';

            this.MQDesktop = {
                match: this._adjustStoreInfoGrid,
                unmatch: this._adjustStoreInfoGrid
            };
        }

        /**
         * Runs on DOM Ready
         * Should be used to attach DOM listeners etc
         * @private
         */

    }, {
        key: '_onDOMReady',
        value: function _onDOMReady() {
            _Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');

            this._cacheDOMElements();
            this._attachSubscribers();
            this._attachDOMListeners();
            this._attachMQHandlers();
            this._disableCityDropdown();

            // [customizing-bj] 맵 이니셜 라이징 제거 => 네이버 맵으로 별도 생성
            //this._getEndpointAndInitialiseMap();
        }
    }, {
        key: '_cacheDOMElements',
        value: function _cacheDOMElements() {
            this.$storeInfoGridTemplate = $(this.TEMPLATE_STORE_INFORMATION_GRID);
            this.$labelStoreCount = this.$el.find(this.SELECTOR_STORE_COUNT);
            this.$storeInfoContainer = this.$el.find(this.SELECTOR_STORES);
        }

        /**
         * Scopes "thi-s" to use the "this" of the outside function
         * Since JQuery creates a new function with a new "this"
         * Attach all functions that needs to be binded here
         * @private
         */

    }, {
        key: '_jQueryScopeBinding',
        value: function _jQueryScopeBinding() {
            _Logger2.default.INFO(this.constructor.name, ':: _jQueryScopeBinding');

            this._onDOMReady = this._onDOMReady.bind(this);
            this._fetchStoreLocations = this._fetchStoreLocations.bind(this);
            this._getCurrentLocation = this._getCurrentLocation.bind(this);
            this._fetchCountries = this._fetchCountries.bind(this);
            this._changedCountry = this._changedCountry.bind(this);
            this._changedCity = this._changedCity.bind(this);
            this._populateStoreInformation = this._populateStoreInformation.bind(this);
            this._adjustStoreInfoGrid = this._adjustStoreInfoGrid.bind(this);
        }

        /**
         * Attach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_attachSubscribers',
        value: function _attachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');

            this.subscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
            this.subscribe(_Enums2.default.EVENT.ON_MAP_INITIALIZED, this._onMapInit);
        }

        /**
         * Detach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_detachSubscribers',
        value: function _detachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');

            this.unsubscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
            this.unsubscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
            this.unsubscribe(_Enums2.default.EVENT.ON_MAP_INITIALIZED, this._onMapInit);
        }

        /**
         * At this point the framework is ready.
         * Add all publish events here (if any)
         * @private
         */

    }, {
        key: '_onFrameworkReady',
        value: function _onFrameworkReady() {}

        /**
         * Attach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_attachDOMListeners',
        value: function _attachDOMListeners() {
            this.$countryDropDown.on('change', 'input', this._changedCountry);
            this.$cityDropDown.on('change', 'input', this._changedCity);
        }

        /**
         * Detach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_detachDOMListeners',
        value: function _detachDOMListeners() {
            this.$countryDropDown.off('change', 'input', this._changedCountry);
            this.$cityDropDown.off('change', 'input', this._changedCity);
        }

        /**
         * Attach media query handlers
         * @private
         */

    }, {
        key: '_attachMQHandlers',
        value: function _attachMQHandlers() {
            enquire.register(_Enums2.default.MQ.IS_DESKTOP, this.MQDesktop);
        }

        /**
         * Detach media query handlers
         * @private
         */

    }, {
        key: '_detachMQHandlers',
        value: function _detachMQHandlers() {
            enquire.unregister(_Enums2.default.MQ.IS_DESKTOP, this.MQDesktop);
        }

        /************************************************************************************************************
         ****************************************** Implementation functions ****************************************
         ************************************************************************************************************/
        /**
         * Fetches the endpoint from the tag attribute, manipulates it and initialises the map
         * @private
         */

    }, {
        key: '_getEndpointAndInitialiseMap',
        value: function _getEndpointAndInitialiseMap() {
            var storeLocatorBase = this.$el.data('endpoint') || '';

            if (storeLocatorBase.length) {
                this.endpoints = {
                    'countries': "//" + storeLocatorBase + _Enums2.default.ENDPOINT.STORE_LOCATOR.COUNTRIES + this.RESPONSE_TYPE,
                    'regions': "//" + storeLocatorBase + _Enums2.default.ENDPOINT.STORE_LOCATOR.REGIONS + this.RESPONSE_TYPE,
                    'cities': "//" + storeLocatorBase + _Enums2.default.ENDPOINT.STORE_LOCATOR.CITIES + this.RESPONSE_TYPE,
                    'city': "//" + storeLocatorBase + _Enums2.default.ENDPOINT.STORE_LOCATOR.CITY + this.RESPONSE_TYPE,
                    'storesByCountry': "//" + storeLocatorBase + _Enums2.default.ENDPOINT.STORE_LOCATOR.STORES_BY_COUNTRY + this.RESPONSE_TYPE,
                    'storesByCity': "//" + storeLocatorBase + _Enums2.default.ENDPOINT.STORE_LOCATOR.STORES_BY_CITY + this.RESPONSE_TYPE
                };

                // fetch countries
                this._fetchCountries();

                this.markers = [];

                // callback for google maps init
                window.initMap = this._initMap;
            } else {
                this.$el.addClass(_Enums2.default.CLASS.IS_HIDDEN_STATE);
            }
        }

        /**
         * On map initialized callback
         * @private
         */

    }, {
        key: '_onMapInit',
        value: function _onMapInit() {
            this._getCurrentLocation();
        }

        /**
         * Adjust the grid containing store information
         * @private
         */

    }, {
        key: '_adjustStoreInfoGrid',
        value: function _adjustStoreInfoGrid() {
            if (this.CURRENT_STORES) {
                this._populateStoreInformation(this.CURRENT_STORES);
            }
        }
    }, {
        key: '_disableCityDropdown',
        value: function _disableCityDropdown() {
            if (this.$countryDropDown.find('input').val()) {
                this.$cityDropDown.removeClass('is-disabled');
            } else {
                this.$cityDropDown.addClass('is-disabled');
            }
        }
    }, {
        key: '_changedCountry',
        value: function _changedCountry(e) {

            var $target = $(e.currentTarget);

            if ($target.attr('data-value') && $target.attr('data-value') !== this.CURRENT_COUNTRY) {

                this.CURRENT_COUNTRY = $target.attr('data-value');
                this._fetchCities($target.attr('data-value'));
                this.$cityDropDownInput.val('');
                this.publish(_Enums2.default.ACTION.CLOSE_MAP_INFO_BOX);
                this._disableCityDropdown();

                // update map
                this._fetchStoreLocations($target.attr('data-value'));
            }
        }
    }, {
        key: '_changedCity',
        value: function _changedCity(e) {
            var $target = $(e.currentTarget);
            this.publish(_Enums2.default.ACTION.CLOSE_MAP_INFO_BOX);
            this._fetchStoreLocations(this.$countryDropDown.find('input').attr('data-value'), $target.attr('data-value'));
        }
    }, {
        key: '_createOption',
        value: function _createOption(value, text) {
            return new $('<li/>').addClass('a-option').attr('data-value', value).html(text);
        }

        /**
         * Appends information about each store below the map.
         * @param stores - Store data
         * @private
         */

    }, {
        key: '_populateStoreInformation',
        value: function _populateStoreInformation(stores) {

            var self = this;

            // clear
            this.$storeInfoContainer.html('');

            // sort store list
            stores.sort(function (a, b) {

                if (a.city > b.city) {
                    return 1;
                } else if (a.city < b.city) {
                    return -1;
                }

                return 0;
            });

            self.CURRENT_STORES = stores.concat([]);
            var data = { rows: [] },
                itemsPerRow = Modernizr.mq(_Enums2.default.MQ.IS_DESKTOP) ? this.ITEMS_PER_ROW_DESKTOP : this.ITEMS_PER_ROW_TABLET;

            while (stores.length > 0) {
                data.rows.push(stores.splice(0, itemsPerRow));
            }

            var storeInfoTemplate = Handlebars.compile(self.$storeInfoGridTemplate.html());
            this.$storeInfoContainer.append(storeInfoTemplate(data));
        }
    }, {
        key: '_fetchCities',
        value: function _fetchCities(countryId) {

            var self = this;

            $.getJSON(this.endpoints.cities.replace('%s', countryId), function (data) {
                var cities = data.storeCitiesResponse.cities.storeCity,
                    $newOptions = $('<ul></ul>');

                //Sort cities if an array is returned. If a single object is returned, put it in an array.
                cities.length ? cities.sort(self._sortOnName) : cities = [cities];

                for (var i = 0; i < cities.length; i++) {
                    if (cities[i] !== '') {
                        var city = cities[i];
                        $newOptions.append(self._createOption(city.cityId, city.name));
                    }
                }
                //Add the cities as dropdown options
                self.publish(_Enums2.default.ACTION.SET_DROPDOWN_OPTIONS, {
                    dropdown: self.$cityDropDown,
                    options: $newOptions.find('li')
                });
            });
        }
    }, {
        key: '_fetchCountries',
        value: function _fetchCountries() {
            var self = this;

            $.getJSON(this.endpoints.countries, function (data) {
                var countries = data.storeCountriesResponse.countries.storeCountry,
                    $newOptions = $('<ul></ul>');

                //Sort countries if an array is returned. If a single object is returned, put it in an array.
                countries.length ? countries.sort(self._sortOnName) : countries = [countries];

                for (var i = 0; i < countries.length; i++) {
                    var country = countries[i];
                    $newOptions.append(self._createOption(country.countryId, country.name));
                }

                //Add the countries as dropdown options
                self.publish(_Enums2.default.ACTION.SET_DROPDOWN_OPTIONS, {
                    dropdown: self.$countryDropDown,
                    options: $newOptions.find('li')
                });
            });
        }
    }, {
        key: '_sortOnName',
        value: function _sortOnName(a, b) {

            if (a.name > b.name) {
                return 1;
            } else if (a.name < b.name) {
                return -1;
            }

            return 0;
        }

        /**
         * Gets the current location of the user, if allowed.
         * @private
         */

    }, {
        key: '_getCurrentLocation',
        value: function _getCurrentLocation() {
            var self = this,
                countryId = null,
                countryName = null;

            try {
                countryId = Cookies.get('HMCORP_locale').match(/\w{2}_(\w{2})/)[1];
            } catch (e) {
                console.log(e);
            }

            var options = {
                enableHighAccuracy: true,
                timeout: 5000,
                maximumAge: 0
            };

            // Get current location
            if (navigator.geolocation) {
                (function () {
                    var id = navigator.geolocation.watchPosition(function (position) {

                        var initialLocation = new google.maps.LatLng(position.coords.latitude, position.coords.longitude),
                            geocoder = new google.maps.Geocoder();

                        geocoder.geocode({
                            'location': {
                                lat: initialLocation.lat(),
                                lng: initialLocation.lng()
                            }
                        }, function (results, status) {
                            if (status === google.maps.GeocoderStatus.OK && !self.$countryDropDownInput.attr('data-value')) {
                                findCountry: for (var i = 0; i < results.length; i++) {
                                    for (var j = 0; j < results[i].address_components.length; j++) {
                                        // Get country name and 2 character country code
                                        // check so that country exist in dropdown
                                        if (results[i].address_components[j].types[0] === "country") {
                                            if (self.$countryDropDown.find('li[data-value="' + results[i].address_components[j].short_name + '"]').length > 0) {
                                                countryId = results[i].address_components[j].short_name;
                                                countryName = results[i].address_components[j].long_name;
                                            } else {
                                                _Logger2.default.LOG('country retrieved but no stores');
                                            }
                                            break findCountry;
                                        }
                                    }
                                }
                            }

                            // Set the options for the dropdown.
                            if (countryId !== '') {
                                self.publish(_Enums2.default.ACTION.SET_DROPDOWN_SELECTED_OPTION, countryId, self.$countryDropDown);
                                navigator.geolocation.clearWatch(id);
                            }
                        });
                    }, function (error) {
                        if (error.code === error.PERMISSION_DENIED) {
                            if (countryId !== '') {
                                self.publish(_Enums2.default.ACTION.SET_DROPDOWN_SELECTED_OPTION, countryId, self.$countryDropDown);
                                navigator.geolocation.clearWatch(id);
                            }
                        }
                    }, options);
                })();
            } else {
                if (countryId !== '') {
                    self.publish(_Enums2.default.ACTION.SET_DROPDOWN_SELECTED_OPTION, countryId, self.$countryDropDown);
                    navigator.geolocation.clearWatch(id);
                }
            }
        }

        /**
         * Gets store locations for a specific country or city.
         * @param countryId
         * @param cityId
         * @private
         */

    }, {
        key: '_fetchStoreLocations',
        value: function _fetchStoreLocations(countryId, cityId) {

            var self = this;

            // set map into loading state
            self.$mapObject.addClass(_Enums2.default.CLASS.IS_LOADING);

            var endpoint = cityId ? this.endpoints.storesByCity.replace('%s', countryId).replace('%cityID', cityId) : this.endpoints.storesByCountry.replace('%s', countryId);

            $.getJSON(endpoint, function (data) {

                var stores = data.storesCompleteResponse.storesComplete.storeComplete;
                //If only one store is found, it is returned as an object and not an array.
                if (!stores.length) {
                    stores = [stores];
                }
                if (!stores) {
                    _Logger2.default.ERROR(self.constructor.name, ':: Unable to fetch stores');
                    return false;
                }

                // remove loading state
                self.$mapObject.removeClass(_Enums2.default.CLASS.IS_LOADING);

                var markerData = [];

                self.CURRENT_STORES = [];
                for (var i = 0; i < stores.length; i++) {
                    var store = stores[i];
                    store.latitude = parseFloat(store.latitude);
                    store.longitude = parseFloat(store.longitude);

                    if (!isNaN(store.latitude) && !isNaN(store.longitude)) {

                        self.CURRENT_STORES.push(_Utils2.default.Stores.createStoreInformationDataObject(store));
                        markerData.push({
                            latitude: parseFloat(store.latitude),
                            longitude: parseFloat(store.longitude),
                            icon: self.icon,
                            data: store,
                            title: store.name
                        });
                    }
                }

                //Create markers for the locations.
                self.publish(_Enums2.default.ACTION.CREATE_MAP_MARKERS, markerData, self.TOOLTIP_VERTICAL_OFFSET, self.TOOLTIP_HORIZONTAL_OFFSET, true);

                //Set the text of the store count label
                self.$labelStoreCount.html('Stores (' + markerData.length + ')');

                // populate store information below map
                self._populateStoreInformation(self.CURRENT_STORES);
            });
        }
    }]);

    return StoreLocator;
}(_appeaserComponentBase2.default);

// Export this so we can pick it up and import in main.js


module.exports = StoreLocator;

},{"./../../themes/stories/enums.js":54,"./../../themes/stories/utils.js":87,"./appeaser-component-base.js":39,"./logger.js":44}],49:[function(require,module,exports){
'use strict';

var _Enums = require('./../../themes/stories/enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Utils = {
    Form: {

        /**
         * Get data from form
         * @param $form - {JQuery Object}
         * @returns {{}}
         */
        getData: function getData($form) {
            var formDataList = $form.serializeArray(),
                formDataObj = {};

            for (var i = 0, ilen = formDataList.length; i < ilen; i++) {
                formDataObj[formDataList[i].name] = $.trim(formDataList[i].value);
            }

            return formDataObj;
        },

        /**
         * Validates any given form based on HTML5 validation rules
         * @param form - {JQuery Object} the form to be validated
         * @param callback {Function} a callback function to run after validation is done
         */
        validate: function validate(form, callback) {
            var isValid = true,
                $error = form.find('.m-error'),
                $errorLabel = $error.find('.js-a-label');

            if (!form[0].checkValidity()) {
                (function () {
                    var validationErrorMessages = [],
                        $inputs = form.find("input");

                    $inputs.each(function (index, input) {
                        if ($(input).is(':checkbox, :radio', ':checked')) {
                            $(input).parent().removeClass(_Enums2.default.CLASS.HAS_ERROR);
                        }
                        if (!input.checkValidity()) {
                            var $input = $(input);
                            if ($input.is(':checkbox, :radio')) {
                                $input.parent().addClass(_Enums2.default.CLASS.HAS_ERROR);
                            }
                            if (input.validity.valueMissing && $input.data('validation-required-text').length != 0) {
                                validationErrorMessages.push($input.data('validation-required-text'));
                            }
                            // MATCH ANOTHER FIELD
                            else if ($input.parent().data("validation-match-field") && $input.val() != $("#" + $input.parent().data("validation-match-field") + " input").val()) {
                                    validationErrorMessages.push($input.data('validation-match-field-text'));
                                }
                                // MATCH A REGEX PATTERN OR TYPE
                                else if (input.validity.patternMismatch || input.validity.typeMismatch) {
                                        validationErrorMessages.push($input.data('validation-pattern-text'));
                                    }
                                    // MAX LENGTH
                                    else if (input.validity.tooLong) {
                                            validationErrorMessages.push($input.data('validation-maxlen-text'));
                                        }
                        }
                    });
                    $error.addClass(_Enums2.default.CLASS.IS_HIDDEN_STATE);
                    $errorLabel.html("");
                    if (validationErrorMessages.length > 0) {
                        $error.removeClass(_Enums2.default.CLASS.IS_HIDDEN_STATE);
                        $errorLabel.html(validationErrorMessages.join("<br>"));
                        appeaser.publish(_Enums2.default.ACTION.SCROLL_TO_FORM_ERROR_MSG, form);

                        // [AOS] @Description : o-lightbox is-large height 짝수 전환 안되는 현상 수정. @date:2017-11-22 @version : M2. @author : 정병준 – 시작
                        // [customizing-bj] o-lightbox 에러 메세지 노출 후 - height 재조정
                        $('.o-lightbox').css('height','');
                        if (Number($('.o-lightbox').css('height').replace(/[^-\d\.]/g, '')) % 2 == 1 && $('.lightbox-content > .no-change-size').length == 0) {
                        	if ($('.o-lightbox').hasClass('is-large')) {
                        		$('.o-lightbox').attr('style', 'height: ' + (Number($('.o-lightbox').css('height').replace(/[^-\d\.]/g, '')) + 1) + 'px !important');
                        	} else {
                        		$('.o-lightbox').css('height', (Number($('.o-lightbox').css('height').replace(/[^-\d\.]/g, '')) + 1));
                        	}
                        }
                        // [AOS] @Description : o-lightbox is-large height 짝수 전환 안되는 현상 수정. @date:2017-11-22 @version : M2. @author : 정병준 – 끝
                    }
                    isValid = false;
                })();
            }

            callback(isValid);
        }
    },

    Slider: {
        reInitialize: function reInitialize($slider, clearContent) {
            if ($slider.hasClass('slick-initialized')) {
                var slickInstance = $slider.slick("getSlick");

                if (clearContent) {
                    while (slickInstance.slideCount) {
                        slickInstance.removeSlide(0);
                    }
                }

                slickInstance.unslick();
                slickInstance.init();
            }
        }
    },

    Stores: {
        stringToArrayHandler: function stringToArrayHandler(data) {
            if (typeof data === 'string') {
                return [data];
            }
            return data;
        },
        createStoreInformationDataObject: function createStoreInformationDataObject(store) {
            var obj = {
                "title": store.name,
                "phone": store.phone,
                "city": store.city,
                "displayOpeningDate": store.displayOpeningDate
            };

            if (store.openingHours) {
                $.extend(obj, { "openingHours": Utils.Stores.stringToArrayHandler(store.openingHours.openingHour) });
            }

            if (store.address) {
                $.extend(obj, { "addressLines": Utils.Stores.stringToArrayHandler(store.address.addressLine) });
            }

            if (store.openingHourExceptions) {
                $.extend(obj, { "openingHourExceptions": Utils.Stores.stringToArrayHandler(store.openingHourExceptions.openingHourException) });
            }

            if (store.campaignConcepts) {
                $.extend(obj, { "campaignConcepts": Utils.Stores.stringToArrayHandler(store.campaignConcepts.campaignConcept) });
            }
            if (store.departmentsWithConcepts) {
                if (store.departmentsWithConcepts.departmentWithConcepts.name) {
                    $.extend(obj, { "departmentsWithConcepts": Utils.Stores.stringToArrayHandler(store.departmentsWithConcepts) });
                } else {
                    $.extend(obj, { "departmentsWithConcepts": store.departmentsWithConcepts.departmentWithConcepts });
                }
            }

            return obj;
        }
    }
};

module.exports = Utils;

},{"./../../themes/stories/enums.js":54}],50:[function(require,module,exports){
"use strict";var Versions={"bower":{"component-loader-js":{"endpoint":{"name":"component-loader-js","source":"component-loader","target":"~3.0.0"},"canonicalDir":"/Users/cristian.a.sas/WebstormProjects/pattern-lib/src/js/bower-components/component-loader-js","pkgMeta":{"name":"component-loader-js","homepage":"https://github.com/14islands/component-loader","version":"3.0.0","_release":"3.0.0","_resolution":{"type":"version","tag":"v3.0.0","commit":"7a2d641c1d09c82844cb1708a405391a2988003a"},"_source":"https://github.com/14islands/component-loader.git","_target":"~3.0.0","_originalSource":"component-loader"},"dependencies":{},"nrDependants":1,"versions":["4.0.0","3.1.1","3.1.0","3.0.0","2.1.1","2.1.0","2.0.0","1.1.0","1.0.0","0.1.0"],"update":{"target":"3.0.0","latest":"4.0.0"}},"enquire":{"endpoint":{"name":"enquire","source":"enquire","target":"~2.1.2"},"canonicalDir":"/Users/cristian.a.sas/WebstormProjects/pattern-lib/src/js/bower-components/enquire","pkgMeta":{"name":"enquire","description":"Awesome Media Queries in JavaScript","version":"2.1.6","main":["./dist/enquire.js"],"ignore":["functional-test/","spec","src/","Gruntfile.js",".travis.yml"],"homepage":"https://github.com/WickyNilliams/enquire.js","_release":"2.1.6","_resolution":{"type":"version","tag":"v2.1.6","commit":"6ffa52210b5801acccc58f7a0f27e3d0b7ab318c"},"_source":"https://github.com/WickyNilliams/enquire.js.git","_target":"~2.1.2","_originalSource":"enquire"},"dependencies":{},"nrDependants":1,"versions":["2.1.6","2.1.5","2.1.4","2.1.3","2.1.2","2.1.1","2.1.0","2.0.2","2.0.1","2.0.0","1.5.6","1.5.4"],"update":{"target":"2.1.6","latest":"2.1.6"}},"handlebars":{"endpoint":{"name":"handlebars","source":"handlebars","target":"~4.0.5"},"canonicalDir":"/Users/cristian.a.sas/WebstormProjects/pattern-lib/src/js/bower-components/handlebars","pkgMeta":{"name":"handlebars","version":"4.0.10","main":"handlebars.js","license":"MIT","dependencies":{},"homepage":"https://github.com/components/handlebars.js","_release":"4.0.10","_resolution":{"type":"version","tag":"v4.0.10","commit":"ba0e61405892883c970a75e2193b29d070f19e65"},"_source":"https://github.com/components/handlebars.js.git","_target":"~4.0.5","_originalSource":"handlebars"},"dependencies":{},"nrDependants":1,"versions":["4.0.10","4.0.9","4.0.8","4.0.7","4.0.5","4.0.4","4.0.3","4.0.2","4.0.1","4.0.0","3.0.3","3.0.2","3.0.0","2.0.0","2.0.0-beta.1","2.0.0-alpha.4","2.0.0-alpha.3","2.0.0-alpha.2","2.0.0-alpha.1","1.3.0","1.2.1","1.2.0","1.1.2","1.1.0","1.0.0","1.0.0-rc.4","1.0.0-rc.3","1.0.0-rc.2","1.0.0-rc.1","1.0.0-beta.6","1.0.0-RC3"],"update":{"target":"4.0.10","latest":"4.0.10"}},"jquery":{"endpoint":{"name":"jquery","source":"jquery","target":"~2.2.3"},"canonicalDir":"/Users/cristian.a.sas/WebstormProjects/pattern-lib/src/js/bower-components/jquery","pkgMeta":{"name":"jquery","main":"dist/jquery.js","license":"MIT","ignore":["package.json"],"keywords":["jquery","javascript","browser","library"],"homepage":"https://github.com/jquery/jquery-dist","version":"2.2.4","_release":"2.2.4","_resolution":{"type":"version","tag":"2.2.4","commit":"c0185ab7c75aab88762c5aae780b9d83b80eda72"},"_source":"https://github.com/jquery/jquery-dist.git","_target":"~2.2.3","_originalSource":"jquery"},"dependencies":{},"nrDependants":1,"versions":["3.2.1","3.2.0","3.1.1","3.1.0","3.0.0","3.0.0-rc1","3.0.0-beta1","3.0.0-alpha1+compat","3.0.0-alpha1","2.2.4","2.2.3","2.2.2","2.2.1","2.2.0","2.1.4","2.1.3","2.1.2","2.1.1","2.1.1-rc2","2.1.1-rc1","2.1.1-beta1","2.1.0","2.1.0-rc1","2.1.0-beta3","2.1.0-beta2","2.1.0-beta1","2.0.3","2.0.2","2.0.1","2.0.0","2.0.0-beta3","1.12.4","1.12.3","1.12.2","1.12.1+1","1.12.1","1.12.0","1.11.3","1.11.2","1.11.1","1.11.1-rc2","1.11.1-rc1","1.11.1-beta1","1.11.0","1.11.0-rc1","1.11.0-beta3","1.11.0-beta2","1.11.0-beta1","1.10.2","1.10.1","1.10.0","1.10.0-beta1","1.9.1","1.9.0","1.8.3+1","1.8.3","1.8.2","1.8.1","1.8.0","1.7.2","1.7.1","1.7.0","1.6.4","1.6.3","1.6.2","1.6.1","1.6.0","1.5.2","1.5.1","1.5.0","1.4.4","1.4.3","1.4.2","1.4.1","1.4.0","1.3.2","1.3.1","1.3.0","1.2.6","1.2.5","1.2.4","1.2.3","1.2.2","1.2.1","1.1.4","1.1.3","1.1.2","1.1.1","1.0.4","1.0.3","1.0.2","1.0.1"],"update":{"target":"2.2.4","latest":"3.2.1"}},"jquery.panzoom":{"endpoint":{"name":"jquery.panzoom","source":"jquery.panzoom","target":"^2.0.6"},"canonicalDir":"/Users/cristian.a.sas/WebstormProjects/pattern-lib/src/js/bower-components/jquery.panzoom","pkgMeta":{"name":"jquery.panzoom","version":"2.0.6","main":"dist/jquery.panzoom.js","ignore":["**/.*","node_modules","stylesheets","demo","images","test","*.json","*.html","Gruntfile.js"],"devDependencies":{"chai":"~1.9.0","jquery-mousewheel":"~3.1.9","jquery.event.pointertouch":"~0.1.0","mocha":"~1.17.1"},"homepage":"https://github.com/timmywil/jquery.panzoom","_release":"2.0.6","_resolution":{"type":"version","tag":"2.0.6","commit":"2fb33e67143692ef01b262c59789a94730849d1b"},"_source":"https://github.com/timmywil/jquery.panzoom.git","_target":"^2.0.6","_originalSource":"jquery.panzoom"},"extraneous":true,"dependencies":{},"nrDependants":0,"versions":["3.2.2","3.2.1","3.2.0","3.1.1","3.1.0","3.0.0","2.0.6","2.0.5","2.0.4","2.0.3","2.0.2","2.0.1","2.0.0","1.12.6","1.12.5","1.12.4","1.12.3","1.12.2","1.12.1","1.12.0","1.11.3","1.11.2","1.11.1","1.11.0","1.10.1","1.10.0","1.9.0","1.8.6","1.8.5","1.8.4","1.8.3","1.8.2","1.8.1","1.8.0","1.7.0","1.6.8","1.6.7","1.6.6","1.6.5","1.6.4","1.6.3","1.6.2","1.6.1","1.6.0","1.5.1","1.5.0","1.4.3","1.4.2","1.4.1","1.4.0","1.3.8","1.3.7","1.3.6","1.3.4","1.3.3","1.3.2","1.3.1","1.3.0","1.2.1","1.2.0","1.1.1","1.1.0","1.0.4","1.0.3","1.0.2","1.0.1","1.0.0","0.9.8","0.9.0","0.8.0","0.7.5","0.7.4","0.7.3","0.7.2","0.7.1","0.7.0","0.6.1","0.6.0","0.5.3","0.5.2","0.5.1","0.5.0","0.4.3","0.4.2","0.4.1","0.4.0","0.3.5","0.3.4","0.3.3","0.3.2","0.3.1","0.3.0","0.2.5","0.2.1","0.2.0","0.1.1","0.1.0"],"update":{"target":"2.0.6","latest":"3.2.2"}},"js-cookie":{"endpoint":{"name":"js-cookie","source":"js-cookie","target":"^2.1.1"},"canonicalDir":"/Users/cristian.a.sas/WebstormProjects/pattern-lib/src/js/bower-components/js-cookie","pkgMeta":{"name":"js-cookie","license":"MIT","main":["src/js.cookie.js"],"ignore":["travis.sh","test","Gruntfile.js","package.json",".gitignore",".jshintignore",".jshintrc",".tm_properties",".travis.yml"],"homepage":"https://github.com/js-cookie/js-cookie","version":"2.1.4","_release":"2.1.4","_resolution":{"type":"version","tag":"v2.1.4","commit":"8b70250875f7e07445b6a457f9c2474ead4cba44"},"_source":"https://github.com/js-cookie/js-cookie.git","_target":"^2.1.1","_originalSource":"js-cookie"},"dependencies":{},"nrDependants":1,"versions":["2.1.4","2.1.3","2.1.2","2.1.1","2.1.0","2.0.4","2.0.3","2.0.2","2.0.1","2.0.0","2.0.0-beta.1","1.5.1","1.5.0","1.4.1","1.4.0","1.3.1","1.3.0","1.2.0"],"update":{"target":"2.1.4","latest":"2.1.4"}},"picturePolyfill":{"endpoint":{"name":"picturePolyfill","source":"picturePolyfill","target":"~4.2.0"},"canonicalDir":"/Users/cristian.a.sas/WebstormProjects/pattern-lib/src/js/bower-components/picturePolyfill","pkgMeta":{"name":"picturePolyfill","version":"4.2.1","main":"dist/picturePolyfill.min.js","ignore":[".idea",".gitignore","**/.*","node_modules","bower_components","test"],"homepage":"https://github.com/verlok/picturePolyfill","authors":["Andrea Verlicchi <andrea.verlicchi@gmail.com>"],"description":"The real <picture> polyfill to use responsive images today","keywords":["picture","polyfill","picturefill","responsive","images","responsive","design","responsive","images"],"license":"MIT","_release":"4.2.1","_resolution":{"type":"version","tag":"v4.2.1","commit":"6460b57c15d254ab6d0bb1a88eaddf1442cf9c02"},"_source":"https://github.com/verlok/picturePolyfill.git","_target":"~4.2.0","_originalSource":"picturePolyfill"},"extraneous":true,"dependencies":{},"nrDependants":0,"versions":["4.2.1","4.2.0","4.1.3","4.1.2","4.1.1","4.0.0","3.4.0","3.3.3","3.3.2","3.3.0","3.2.1","3.2.0","3.1.0","3.0.0","2.0.6","2.0.5","2.0.4","2.0.3","2.0.2","2.0.1","2.0.0","1.0.1","1.0.0"],"update":{"target":"4.2.1","latest":"4.2.1"}},"picturefill":{"endpoint":{"name":"picturefill","source":"picturefill","target":"^3.0.3"},"canonicalDir":"/Users/cristian.a.sas/WebstormProjects/pattern-lib/src/js/bower-components/picturefill","pkgMeta":{"name":"picturefill","repo":"scottjehl/picturefill","description":"A polyfill for responsive images (http://picture.responsiveimages.org/) that you can use today.","main":"dist/picturefill.js","scripts":["dist/picturefill.js"],"license":"MIT","homepage":"http://scottjehl.github.com/picturefill/","authors":["Scott Jehl <scottjehl@gmail.com>"],"moduleType":["amd","globals","node"],"keywords":["picture","srcset","polyfill"],"ignore":["**/.*","node_modules","bower_components","test","tests","examples","perf-test"],"version":"3.0.3","_release":"3.0.3","_resolution":{"type":"version","tag":"3.0.3","commit":"115dd76cbc9d6c958240758ef8d12fda03aff261"},"_source":"https://github.com/scottjehl/picturefill.git","_target":"^3.0.3","_originalSource":"picturefill"},"dependencies":{},"nrDependants":1,"versions":["3.0.3","3.0.2","3.0.1","3.0.0","3.0.0-rc1","3.0.0-beta1","3.0.0-alpha1","2.3.1","2.3.0","2.3.0-beta","2.2.1","2.2.0","2.2.0-beta","2.1.0","2.1.0-beta2","2.1.0-beta","2.0.0","2.0.0-beta","2.0.0-alpha","1.2.1","1.2.0","1.1.0","1.0.0"],"update":{"target":"3.0.3","latest":"3.0.3"}},"redils":{"endpoint":{"name":"redils","source":"redils","target":"^1.16.2"},"canonicalDir":"/Users/cristian.a.sas/WebstormProjects/pattern-lib/src/js/bower-components/redils","pkgMeta":{"name":"redils","version":"1.17.0","main":["dist/js/redils.min.js","dist/css/redils.min.css"],"authors":["richard@coalescecreate.com - Coalesce Create"],"description":"Redils a slider for almost all situations","license":"MIT","ignore":["**/.*","node_modules","bower_components"],"dependencies":{"jquery":">=1.8"},"devDependencies":{"normalize-scss":"~3.0.1"},"homepage":"https://github.com/coalescecreate/redils","_release":"1.17.0","_resolution":{"type":"version","tag":"1.17.0","commit":"9836b2bf0f540bf4699788bd63ffc4ad029ddf18"},"_source":"https://github.com/coalescecreate/redils.git","_target":"^1.16.2","_originalSource":"redils"},"dependencies":{"jquery":{"endpoint":{"name":"jquery","source":"jquery","target":">=1.8"},"canonicalDir":"/Users/cristian.a.sas/WebstormProjects/pattern-lib/src/js/bower-components/jquery","pkgMeta":{"name":"jquery","main":"dist/jquery.js","license":"MIT","ignore":["package.json"],"keywords":["jquery","javascript","browser","library"],"homepage":"https://github.com/jquery/jquery-dist","version":"2.2.4","_release":"2.2.4","_resolution":{"type":"version","tag":"2.2.4","commit":"c0185ab7c75aab88762c5aae780b9d83b80eda72"},"_source":"https://github.com/jquery/jquery-dist.git","_target":"~2.2.3","_originalSource":"jquery"},"dependencies":{},"nrDependants":1,"versions":["3.2.1","3.2.0","3.1.1","3.1.0","3.0.0","3.0.0-rc1","3.0.0-beta1","3.0.0-alpha1+compat","3.0.0-alpha1","2.2.4","2.2.3","2.2.2","2.2.1","2.2.0","2.1.4","2.1.3","2.1.2","2.1.1","2.1.1-rc2","2.1.1-rc1","2.1.1-beta1","2.1.0","2.1.0-rc1","2.1.0-beta3","2.1.0-beta2","2.1.0-beta1","2.0.3","2.0.2","2.0.1","2.0.0","2.0.0-beta3","1.12.4","1.12.3","1.12.2","1.12.1+1","1.12.1","1.12.0","1.11.3","1.11.2","1.11.1","1.11.1-rc2","1.11.1-rc1","1.11.1-beta1","1.11.0","1.11.0-rc1","1.11.0-beta3","1.11.0-beta2","1.11.0-beta1","1.10.2","1.10.1","1.10.0","1.10.0-beta1","1.9.1","1.9.0","1.8.3+1","1.8.3","1.8.2","1.8.1","1.8.0","1.7.2","1.7.1","1.7.0","1.6.4","1.6.3","1.6.2","1.6.1","1.6.0","1.5.2","1.5.1","1.5.0","1.4.4","1.4.3","1.4.2","1.4.1","1.4.0","1.3.2","1.3.1","1.3.0","1.2.6","1.2.5","1.2.4","1.2.3","1.2.2","1.2.1","1.1.4","1.1.3","1.1.2","1.1.1","1.0.4","1.0.3","1.0.2","1.0.1"],"update":{"target":"3.2.1","latest":"3.2.1"}}},"nrDependants":1,"versions":["1.17.0","1.16.2","1.16.1","1.16.0","1.15.0","1.14.5","1.14.4","1.14.3","1.14.2","1.14.1","1.14.0","1.13.2","1.13.1","1.13.0","1.12.2","1.12.1","1.12.0","1.11.7","1.11.6","1.11.5","1.11.4","1.11.3","1.11.2","1.11.1","1.11.0","1.10.0","1.9.10","1.9.9","1.9.8","1.9.7","1.9.6","1.9.5","1.9.4","1.9.3","1.9.2","1.9.1","1.9.0","1.8.2","1.8.1","1.8.0","1.7.1","1.7.0","1.6.5","1.6.4","1.6.3","1.6.2","1.6.1","1.6.0","1.5.5","1.5.4","1.5.3","1.5.2","1.5.1","1.5.0","1.4.2","1.4.1","1.4.0"],"update":{"target":"1.17.0","latest":"1.17.0"}},"slick-carousel":{"endpoint":{"name":"slick-carousel","source":"slick-carousel","target":"~1.5.9"},"canonicalDir":"/Users/cristian.a.sas/WebstormProjects/pattern-lib/src/js/bower-components/slick-carousel","pkgMeta":{"name":"slick-carousel","main":["slick/slick.min.js","slick/slick.css","slick/slick-theme.css","slick/fonts/*"],"version":"1.5.9","homepage":"https://github.com/kenwheeler/slick","authors":["Ken Wheeler <ken_wheeler@me.com>"],"description":"the last carousel you'll ever need","keywords":["responsive","carousel","jquery"],"license":"MIT","ignore":["**/.*","node_modules","bower_components","test","tests","index.html"],"dependencies":{"jquery":">=1.7"},"_release":"1.5.9","_resolution":{"type":"version","tag":"1.5.9","commit":"96ab6811b302a35f82b2128e350ee25c583df408"},"_source":"https://github.com/kenwheeler/slick.git","_target":"~1.5.9","_originalSource":"slick-carousel"},"dependencies":{"jquery":{"endpoint":{"name":"jquery","source":"jquery","target":">=1.7"},"canonicalDir":"/Users/cristian.a.sas/WebstormProjects/pattern-lib/src/js/bower-components/jquery","pkgMeta":{"name":"jquery","main":"dist/jquery.js","license":"MIT","ignore":["package.json"],"keywords":["jquery","javascript","browser","library"],"homepage":"https://github.com/jquery/jquery-dist","version":"2.2.4","_release":"2.2.4","_resolution":{"type":"version","tag":"2.2.4","commit":"c0185ab7c75aab88762c5aae780b9d83b80eda72"},"_source":"https://github.com/jquery/jquery-dist.git","_target":"~2.2.3","_originalSource":"jquery"},"dependencies":{},"nrDependants":1,"versions":["3.2.1","3.2.0","3.1.1","3.1.0","3.0.0","3.0.0-rc1","3.0.0-beta1","3.0.0-alpha1+compat","3.0.0-alpha1","2.2.4","2.2.3","2.2.2","2.2.1","2.2.0","2.1.4","2.1.3","2.1.2","2.1.1","2.1.1-rc2","2.1.1-rc1","2.1.1-beta1","2.1.0","2.1.0-rc1","2.1.0-beta3","2.1.0-beta2","2.1.0-beta1","2.0.3","2.0.2","2.0.1","2.0.0","2.0.0-beta3","1.12.4","1.12.3","1.12.2","1.12.1+1","1.12.1","1.12.0","1.11.3","1.11.2","1.11.1","1.11.1-rc2","1.11.1-rc1","1.11.1-beta1","1.11.0","1.11.0-rc1","1.11.0-beta3","1.11.0-beta2","1.11.0-beta1","1.10.2","1.10.1","1.10.0","1.10.0-beta1","1.9.1","1.9.0","1.8.3+1","1.8.3","1.8.2","1.8.1","1.8.0","1.7.2","1.7.1","1.7.0","1.6.4","1.6.3","1.6.2","1.6.1","1.6.0","1.5.2","1.5.1","1.5.0","1.4.4","1.4.3","1.4.2","1.4.1","1.4.0","1.3.2","1.3.1","1.3.0","1.2.6","1.2.5","1.2.4","1.2.3","1.2.2","1.2.1","1.1.4","1.1.3","1.1.2","1.1.1","1.0.4","1.0.3","1.0.2","1.0.1"],"update":{"target":"3.2.1","latest":"3.2.1"}}},"nrDependants":1,"versions":["1.7.1","1.6.0","1.5.9","1.5.8","1.5.7","1.5.6","1.5.5","1.5.4","1.5.3","1.5.2","1.5.1","1.5.0","1.4.1","1.4.0","1.3.15","1.3.14","1.3.13","1.3.12","1.3.11","1.3.10","1.3.9","1.3.8","1.3.7","1.3.6","1.3.5","1.3.4","1.3.3","1.3.2","1.3.1","1.3.0","1.2.10","1.2.9","1.2.8","1.2.7","1.2.6","1.2.5","1.2.4","1.2.3","1.2.2","1.2.1","1.2.0","1.1.3","1.1.2","1.1.1","1.1.0","1.0.1","1.0.0"],"update":{"target":"1.5.9","latest":"1.7.1"}},"swiper":{"endpoint":{"name":"swiper","source":"swiper","target":"3.4.0"},"canonicalDir":"/Users/cristian.a.sas/WebstormProjects/pattern-lib/src/js/bower-components/swiper","pkgMeta":{"name":"swiper","repository":{"type":"git","url":"https://github.com/nolimits4web/Swiper.git"},"description":"Most modern mobile touch slider and framework with hardware accelerated transitions","version":"3.4.0","author":"Vladimir Kharlampidi","homepage":"http://www.idangero.us/swiper/","keywords":["swiper","swipe","slider","touch","ios","mobile","cordova","phonegap","app","framework","carousel","gallery"],"dependencies":{},"scripts":["dist/js/swiper.js"],"main":["dist/js/swiper.js","dist/css/swiper.css"],"styles":["dist/css/swiper.css"],"license":["MIT"],"ignore":[".*","demos","gulpfile","build","node_modules","playground","package.json"],"_release":"3.4.0","_resolution":{"type":"version","tag":"v3.4.0","commit":"fb0a8c3f33eed2f3903678390ab4d813915b53f5"},"_source":"https://github.com/nolimits4web/Swiper.git","_target":"3.4.0","_originalSource":"swiper"},"dependencies":{},"nrDependants":1,"versions":["4.0.0-beta.1","3.4.2","3.4.1","3.4.0","3.3.1","3.3.0","3.2.7","3.2.6","3.2.5","3.2.0","3.1.7","3.1.5","3.1.2","3.1.0","3.0.8","3.0.7","3.0.6","3.0.5","3.0.4","3.0.3","3.0.2","3.0.1","3.0.0","2.7.6","2.7.5","2.7.0","2.6.1","2.6.0","2.5.5","2.5.1","2.5.0","2.4.3","2.4.2","2.4.1","2.4.0","2.3.0","2.2.0","2.1.0","2.0.0","1.9.4","1.9.3","1.9.2","1.9.1","1.9.0","1.8.8","1.8.7","1.8.5","1.8.0","1.7.0","1.6.0","1.5.5","1.5.0","1.3.0","1.2.0","1.1.0","1.0.0"],"update":{"target":"3.4.0","latest":"4.0.0-beta.1"}},"trunk8":{"endpoint":{"name":"trunk8","source":"trunk8","target":"^1.3.3"},"canonicalDir":"/Users/cristian.a.sas/WebstormProjects/pattern-lib/src/js/bower-components/trunk8","pkgMeta":{"name":"trunk8","version":"1.3.3","main":"./trunk8.js","dependencies":{"jquery":">=1"},"homepage":"https://github.com/rviscomi/trunk8","_release":"1.3.3","_resolution":{"type":"version","tag":"1.3.3","commit":"872cb528850fac29eac1bbc74201053d18aec414"},"_source":"https://github.com/rviscomi/trunk8.git","_target":"^1.3.3","_originalSource":"trunk8"},"dependencies":{"jquery":{"endpoint":{"name":"jquery","source":"jquery","target":">=1"},"canonicalDir":"/Users/cristian.a.sas/WebstormProjects/pattern-lib/src/js/bower-components/jquery","pkgMeta":{"name":"jquery","main":"dist/jquery.js","license":"MIT","ignore":["package.json"],"keywords":["jquery","javascript","browser","library"],"homepage":"https://github.com/jquery/jquery-dist","version":"2.2.4","_release":"2.2.4","_resolution":{"type":"version","tag":"2.2.4","commit":"c0185ab7c75aab88762c5aae780b9d83b80eda72"},"_source":"https://github.com/jquery/jquery-dist.git","_target":"~2.2.3","_originalSource":"jquery"},"dependencies":{},"nrDependants":1,"versions":["3.2.1","3.2.0","3.1.1","3.1.0","3.0.0","3.0.0-rc1","3.0.0-beta1","3.0.0-alpha1+compat","3.0.0-alpha1","2.2.4","2.2.3","2.2.2","2.2.1","2.2.0","2.1.4","2.1.3","2.1.2","2.1.1","2.1.1-rc2","2.1.1-rc1","2.1.1-beta1","2.1.0","2.1.0-rc1","2.1.0-beta3","2.1.0-beta2","2.1.0-beta1","2.0.3","2.0.2","2.0.1","2.0.0","2.0.0-beta3","1.12.4","1.12.3","1.12.2","1.12.1+1","1.12.1","1.12.0","1.11.3","1.11.2","1.11.1","1.11.1-rc2","1.11.1-rc1","1.11.1-beta1","1.11.0","1.11.0-rc1","1.11.0-beta3","1.11.0-beta2","1.11.0-beta1","1.10.2","1.10.1","1.10.0","1.10.0-beta1","1.9.1","1.9.0","1.8.3+1","1.8.3","1.8.2","1.8.1","1.8.0","1.7.2","1.7.1","1.7.0","1.6.4","1.6.3","1.6.2","1.6.1","1.6.0","1.5.2","1.5.1","1.5.0","1.4.4","1.4.3","1.4.2","1.4.1","1.4.0","1.3.2","1.3.1","1.3.0","1.2.6","1.2.5","1.2.4","1.2.3","1.2.2","1.2.1","1.1.4","1.1.3","1.1.2","1.1.1","1.0.4","1.0.3","1.0.2","1.0.1"],"update":{"target":"3.2.1","latest":"3.2.1"}}},"nrDependants":1,"versions":["1.3.3"],"update":{"target":"1.3.3","latest":"1.3.3"}}},"npm":{"name":"appeaser-pattern-lib","version":"1.7.5","dependencies":{"aliasify":{"version":"2.1.0","from":"aliasify@>=2.0.0 <3.0.0","resolved":"https://registry.npmjs.org/aliasify/-/aliasify-2.1.0.tgz","dependencies":{"browserify-transform-tools":{"version":"1.7.0","from":"browserify-transform-tools@>=1.7.0 <1.8.0","resolved":"https://registry.npmjs.org/browserify-transform-tools/-/browserify-transform-tools-1.7.0.tgz","dependencies":{"falafel":{"version":"2.0.0","from":"falafel@>=2.0.0 <3.0.0","resolved":"https://registry.npmjs.org/falafel/-/falafel-2.0.0.tgz","dependencies":{"acorn":{"version":"3.3.0","from":"acorn@>=3.0.0 <4.0.0","resolved":"https://registry.npmjs.org/acorn/-/acorn-3.3.0.tgz"},"foreach":{"version":"2.0.5","from":"foreach@>=2.0.5 <3.0.0","resolved":"https://registry.npmjs.org/foreach/-/foreach-2.0.5.tgz"},"object-keys":{"version":"1.0.11","from":"object-keys@>=1.0.6 <2.0.0","resolved":"https://registry.npmjs.org/object-keys/-/object-keys-1.0.11.tgz"}}}}}}},"archiver":{"version":"1.3.0","from":"archiver@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/archiver/-/archiver-1.3.0.tgz","dependencies":{"archiver-utils":{"version":"1.3.0","from":"archiver-utils@>=1.3.0 <2.0.0","resolved":"https://registry.npmjs.org/archiver-utils/-/archiver-utils-1.3.0.tgz","dependencies":{"lazystream":{"version":"1.0.0","from":"lazystream@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/lazystream/-/lazystream-1.0.0.tgz"},"normalize-path":{"version":"2.0.1","from":"normalize-path@>=2.0.0 <3.0.0","resolved":"https://registry.npmjs.org/normalize-path/-/normalize-path-2.0.1.tgz"}}},"async":{"version":"2.1.4","from":"async@>=2.0.0 <3.0.0","resolved":"https://registry.npmjs.org/async/-/async-2.1.4.tgz"},"buffer-crc32":{"version":"0.2.13","from":"buffer-crc32@>=0.2.1 <0.3.0","resolved":"https://registry.npmjs.org/buffer-crc32/-/buffer-crc32-0.2.13.tgz"},"lodash":{"version":"4.17.4","from":"lodash@>=4.8.0 <5.0.0","resolved":"https://registry.npmjs.org/lodash/-/lodash-4.17.4.tgz"},"readable-stream":{"version":"2.2.2","from":"readable-stream@>=2.0.0 <3.0.0","resolved":"https://registry.npmjs.org/readable-stream/-/readable-stream-2.2.2.tgz","dependencies":{"buffer-shims":{"version":"1.0.0","from":"buffer-shims@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/buffer-shims/-/buffer-shims-1.0.0.tgz"},"core-util-is":{"version":"1.0.2","from":"core-util-is@>=1.0.0 <1.1.0","resolved":"https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.2.tgz"},"process-nextick-args":{"version":"1.0.7","from":"process-nextick-args@>=1.0.6 <1.1.0","resolved":"https://registry.npmjs.org/process-nextick-args/-/process-nextick-args-1.0.7.tgz"},"isarray":{"version":"1.0.0","from":"isarray@>=1.0.0 <1.1.0","resolved":"https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz"},"string_decoder":{"version":"0.10.31","from":"string_decoder@>=0.10.0 <0.11.0","resolved":"https://registry.npmjs.org/string_decoder/-/string_decoder-0.10.31.tgz"},"util-deprecate":{"version":"1.0.2","from":"util-deprecate@>=1.0.1 <1.1.0","resolved":"https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz"}}},"tar-stream":{"version":"1.5.2","from":"tar-stream@>=1.5.0 <2.0.0","resolved":"https://registry.npmjs.org/tar-stream/-/tar-stream-1.5.2.tgz","dependencies":{"bl":{"version":"1.2.0","from":"bl@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/bl/-/bl-1.2.0.tgz"},"end-of-stream":{"version":"1.1.0","from":"end-of-stream@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.1.0.tgz","dependencies":{"once":{"version":"1.3.3","from":"once@>=1.3.0 <1.4.0","resolved":"https://registry.npmjs.org/once/-/once-1.3.3.tgz"}}}}},"walkdir":{"version":"0.0.11","from":"walkdir@>=0.0.11 <0.0.12","resolved":"https://registry.npmjs.org/walkdir/-/walkdir-0.0.11.tgz"},"zip-stream":{"version":"1.1.1","from":"zip-stream@>=1.1.0 <2.0.0","resolved":"https://registry.npmjs.org/zip-stream/-/zip-stream-1.1.1.tgz","dependencies":{"compress-commons":{"version":"1.1.0","from":"compress-commons@>=1.1.0 <2.0.0","resolved":"https://registry.npmjs.org/compress-commons/-/compress-commons-1.1.0.tgz","dependencies":{"crc32-stream":{"version":"1.0.1","from":"crc32-stream@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/crc32-stream/-/crc32-stream-1.0.1.tgz","dependencies":{"crc":{"version":"3.4.4","from":"crc@>=3.4.4 <4.0.0","resolved":"https://registry.npmjs.org/crc/-/crc-3.4.4.tgz"}}}}}}}}},"basic-auth":{"version":"1.1.0","from":"basic-auth@>=1.0.3 <2.0.0","resolved":"https://registry.npmjs.org/basic-auth/-/basic-auth-1.1.0.tgz"},"body-parser":{"version":"1.17.2","from":"body-parser@1.17.2","resolved":"https://registry.npmjs.org/body-parser/-/body-parser-1.17.2.tgz","dependencies":{"debug":{"version":"2.6.7","from":"debug@2.6.7","resolved":"https://registry.npmjs.org/debug/-/debug-2.6.7.tgz","dependencies":{"ms":{"version":"2.0.0","from":"ms@2.0.0","resolved":"https://registry.npmjs.org/ms/-/ms-2.0.0.tgz"}}},"bytes":{"version":"2.4.0","from":"bytes@2.4.0","resolved":"https://registry.npmjs.org/bytes/-/bytes-2.4.0.tgz"},"content-type":{"version":"1.0.2","from":"content-type@>=1.0.2 <1.1.0","resolved":"https://registry.npmjs.org/content-type/-/content-type-1.0.2.tgz"},"depd":{"version":"1.1.0","from":"depd@>=1.1.0 <1.2.0","resolved":"https://registry.npmjs.org/depd/-/depd-1.1.0.tgz"},"http-errors":{"version":"1.6.1","from":"http-errors@>=1.6.1 <1.7.0","resolved":"https://registry.npmjs.org/http-errors/-/http-errors-1.6.1.tgz"},"iconv-lite":{"version":"0.4.15","from":"iconv-lite@0.4.15","resolved":"https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.15.tgz"},"on-finished":{"version":"2.3.0","from":"on-finished@>=2.3.0 <2.4.0","resolved":"https://registry.npmjs.org/on-finished/-/on-finished-2.3.0.tgz","dependencies":{"ee-first":{"version":"1.1.1","from":"ee-first@1.1.1","resolved":"https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz"}}},"qs":{"version":"6.4.0","from":"qs@6.4.0","resolved":"https://registry.npmjs.org/qs/-/qs-6.4.0.tgz"},"raw-body":{"version":"2.2.0","from":"raw-body@>=2.2.0 <2.3.0","resolved":"https://registry.npmjs.org/raw-body/-/raw-body-2.2.0.tgz","dependencies":{"unpipe":{"version":"1.0.0","from":"unpipe@1.0.0","resolved":"https://registry.npmjs.org/unpipe/-/unpipe-1.0.0.tgz"}}},"type-is":{"version":"1.6.15","from":"type-is@>=1.6.15 <1.7.0","resolved":"https://registry.npmjs.org/type-is/-/type-is-1.6.15.tgz","dependencies":{"media-typer":{"version":"0.3.0","from":"media-typer@0.3.0","resolved":"https://registry.npmjs.org/media-typer/-/media-typer-0.3.0.tgz"},"mime-types":{"version":"2.1.15","from":"mime-types@>=2.1.15 <2.2.0","resolved":"https://registry.npmjs.org/mime-types/-/mime-types-2.1.15.tgz","dependencies":{"mime-db":{"version":"1.27.0","from":"mime-db@>=1.27.0 <1.28.0","resolved":"https://registry.npmjs.org/mime-db/-/mime-db-1.27.0.tgz"}}}}}}},"buffer":{"version":"4.9.1","from":"buffer@>=4.6.0 <5.0.0","resolved":"https://registry.npmjs.org/buffer/-/buffer-4.9.1.tgz","dependencies":{"base64-js":{"version":"1.2.0","from":"base64-js@>=1.0.2 <2.0.0","resolved":"https://registry.npmjs.org/base64-js/-/base64-js-1.2.0.tgz"},"isarray":{"version":"1.0.0","from":"isarray@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz"},"ieee754":{"version":"1.1.8","from":"ieee754@>=1.1.4 <2.0.0","resolved":"https://registry.npmjs.org/ieee754/-/ieee754-1.1.8.tgz"}}},"compression":{"version":"1.6.2","from":"compression@>=1.6.1 <2.0.0","resolved":"https://registry.npmjs.org/compression/-/compression-1.6.2.tgz","dependencies":{"accepts":{"version":"1.3.3","from":"accepts@>=1.3.3 <1.4.0","resolved":"https://registry.npmjs.org/accepts/-/accepts-1.3.3.tgz","dependencies":{"negotiator":{"version":"0.6.1","from":"negotiator@0.6.1","resolved":"https://registry.npmjs.org/negotiator/-/negotiator-0.6.1.tgz"}}},"compressible":{"version":"2.0.9","from":"compressible@>=2.0.8 <2.1.0","resolved":"https://registry.npmjs.org/compressible/-/compressible-2.0.9.tgz","dependencies":{"mime-db":{"version":"1.25.0","from":"mime-db@>=1.25.0 <1.26.0","resolved":"https://registry.npmjs.org/mime-db/-/mime-db-1.25.0.tgz"}}},"bytes":{"version":"2.3.0","from":"bytes@2.3.0","resolved":"https://registry.npmjs.org/bytes/-/bytes-2.3.0.tgz"},"debug":{"version":"2.2.0","from":"debug@>=2.2.0 <2.3.0","resolved":"https://registry.npmjs.org/debug/-/debug-2.2.0.tgz","dependencies":{"ms":{"version":"0.7.1","from":"ms@0.7.1","resolved":"https://registry.npmjs.org/ms/-/ms-0.7.1.tgz"}}},"on-headers":{"version":"1.0.1","from":"on-headers@>=1.0.1 <1.1.0","resolved":"https://registry.npmjs.org/on-headers/-/on-headers-1.0.1.tgz"},"vary":{"version":"1.1.0","from":"vary@>=1.1.0 <1.2.0","resolved":"https://registry.npmjs.org/vary/-/vary-1.1.0.tgz"}}},"convert-source-map":{"version":"1.5.0","from":"convert-source-map@1.5.0","resolved":"https://registry.npmjs.org/convert-source-map/-/convert-source-map-1.5.0.tgz"},"del":{"version":"2.2.2","from":"del@>=2.2.2 <3.0.0","resolved":"https://registry.npmjs.org/del/-/del-2.2.2.tgz","dependencies":{"globby":{"version":"5.0.0","from":"globby@>=5.0.0 <6.0.0","resolved":"https://registry.npmjs.org/globby/-/globby-5.0.0.tgz","dependencies":{"array-union":{"version":"1.0.2","from":"array-union@>=1.0.1 <2.0.0","resolved":"https://registry.npmjs.org/array-union/-/array-union-1.0.2.tgz"},"arrify":{"version":"1.0.1","from":"arrify@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/arrify/-/arrify-1.0.1.tgz"}}},"is-path-cwd":{"version":"1.0.0","from":"is-path-cwd@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/is-path-cwd/-/is-path-cwd-1.0.0.tgz"},"is-path-in-cwd":{"version":"1.0.0","from":"is-path-in-cwd@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/is-path-in-cwd/-/is-path-in-cwd-1.0.0.tgz","dependencies":{"is-path-inside":{"version":"1.0.0","from":"is-path-inside@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/is-path-inside/-/is-path-inside-1.0.0.tgz","dependencies":{"path-is-inside":{"version":"1.0.2","from":"path-is-inside@>=1.0.1 <2.0.0","resolved":"https://registry.npmjs.org/path-is-inside/-/path-is-inside-1.0.2.tgz"}}}}},"object-assign":{"version":"4.1.0","from":"object-assign@>=4.0.1 <5.0.0","resolved":"https://registry.npmjs.org/object-assign/-/object-assign-4.1.0.tgz"},"pify":{"version":"2.3.0","from":"pify@>=2.0.0 <3.0.0","resolved":"https://registry.npmjs.org/pify/-/pify-2.3.0.tgz"},"pinkie-promise":{"version":"2.0.1","from":"pinkie-promise@>=2.0.0 <3.0.0","resolved":"https://registry.npmjs.org/pinkie-promise/-/pinkie-promise-2.0.1.tgz","dependencies":{"pinkie":{"version":"2.0.4","from":"pinkie@>=2.0.0 <3.0.0","resolved":"https://registry.npmjs.org/pinkie/-/pinkie-2.0.4.tgz"}}},"rimraf":{"version":"2.5.4","from":"rimraf@>=2.2.8 <3.0.0","resolved":"https://registry.npmjs.org/rimraf/-/rimraf-2.5.4.tgz"}}},"event-stream":{"version":"3.3.4","from":"event-stream@>=3.3.2 <4.0.0","resolved":"https://registry.npmjs.org/event-stream/-/event-stream-3.3.4.tgz","dependencies":{"duplexer":{"version":"0.1.1","from":"duplexer@>=0.1.1 <0.2.0","resolved":"https://registry.npmjs.org/duplexer/-/duplexer-0.1.1.tgz"},"from":{"version":"0.1.3","from":"from@>=0.0.0 <1.0.0","resolved":"https://registry.npmjs.org/from/-/from-0.1.3.tgz"},"map-stream":{"version":"0.1.0","from":"map-stream@>=0.1.0 <0.2.0","resolved":"https://registry.npmjs.org/map-stream/-/map-stream-0.1.0.tgz"},"pause-stream":{"version":"0.0.11","from":"pause-stream@0.0.11","resolved":"https://registry.npmjs.org/pause-stream/-/pause-stream-0.0.11.tgz"},"split":{"version":"0.3.3","from":"split@>=0.3.0 <0.4.0","resolved":"https://registry.npmjs.org/split/-/split-0.3.3.tgz"},"stream-combiner":{"version":"0.0.4","from":"stream-combiner@>=0.0.4 <0.1.0","resolved":"https://registry.npmjs.org/stream-combiner/-/stream-combiner-0.0.4.tgz"}}},"express":{"version":"4.15.3","from":"express@4.15.3","resolved":"https://registry.npmjs.org/express/-/express-4.15.3.tgz","dependencies":{"array-flatten":{"version":"1.1.1","from":"array-flatten@1.1.1","resolved":"https://registry.npmjs.org/array-flatten/-/array-flatten-1.1.1.tgz"},"content-disposition":{"version":"0.5.2","from":"content-disposition@0.5.2","resolved":"https://registry.npmjs.org/content-disposition/-/content-disposition-0.5.2.tgz"},"cookie":{"version":"0.3.1","from":"cookie@0.3.1","resolved":"https://registry.npmjs.org/cookie/-/cookie-0.3.1.tgz"},"cookie-signature":{"version":"1.0.6","from":"cookie-signature@1.0.6","resolved":"https://registry.npmjs.org/cookie-signature/-/cookie-signature-1.0.6.tgz"},"encodeurl":{"version":"1.0.1","from":"encodeurl@>=1.0.1 <1.1.0","resolved":"https://registry.npmjs.org/encodeurl/-/encodeurl-1.0.1.tgz"},"escape-html":{"version":"1.0.3","from":"escape-html@>=1.0.3 <1.1.0","resolved":"https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz"},"etag":{"version":"1.8.0","from":"etag@>=1.7.0 <2.0.0","resolved":"https://registry.npmjs.org/etag/-/etag-1.8.0.tgz"},"debug":{"version":"2.6.7","from":"debug@2.6.7","resolved":"https://registry.npmjs.org/debug/-/debug-2.6.7.tgz","dependencies":{"ms":{"version":"2.0.0","from":"ms@2.0.0","resolved":"https://registry.npmjs.org/ms/-/ms-2.0.0.tgz"}}},"finalhandler":{"version":"1.0.3","from":"finalhandler@>=1.0.3 <1.1.0","resolved":"https://registry.npmjs.org/finalhandler/-/finalhandler-1.0.3.tgz"},"fresh":{"version":"0.5.0","from":"fresh@0.5.0","resolved":"https://registry.npmjs.org/fresh/-/fresh-0.5.0.tgz"},"send":{"version":"0.15.3","from":"send@0.15.3","resolved":"https://registry.npmjs.org/send/-/send-0.15.3.tgz","dependencies":{"destroy":{"version":"1.0.4","from":"destroy@>=1.0.4 <1.1.0","resolved":"https://registry.npmjs.org/destroy/-/destroy-1.0.4.tgz"},"mime":{"version":"1.3.4","from":"mime@1.3.4","resolved":"https://registry.npmjs.org/mime/-/mime-1.3.4.tgz"}}},"serve-static":{"version":"1.12.3","from":"serve-static@1.12.3","resolved":"https://registry.npmjs.org/serve-static/-/serve-static-1.12.3.tgz"},"vary":{"version":"1.1.1","from":"vary@>=1.1.1 <1.2.0","resolved":"https://registry.npmjs.org/vary/-/vary-1.1.1.tgz"},"merge-descriptors":{"version":"1.0.1","from":"merge-descriptors@1.0.1","resolved":"https://registry.npmjs.org/merge-descriptors/-/merge-descriptors-1.0.1.tgz"},"methods":{"version":"1.1.2","from":"methods@>=1.1.2 <1.2.0","resolved":"https://registry.npmjs.org/methods/-/methods-1.1.2.tgz"},"parseurl":{"version":"1.3.1","from":"parseurl@>=1.3.1 <1.4.0","resolved":"https://registry.npmjs.org/parseurl/-/parseurl-1.3.1.tgz"},"path-to-regexp":{"version":"0.1.7","from":"path-to-regexp@0.1.7","resolved":"https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-0.1.7.tgz"},"proxy-addr":{"version":"1.1.4","from":"proxy-addr@>=1.1.4 <1.2.0","resolved":"https://registry.npmjs.org/proxy-addr/-/proxy-addr-1.1.4.tgz","dependencies":{"forwarded":{"version":"0.1.0","from":"forwarded@>=0.1.0 <0.2.0","resolved":"https://registry.npmjs.org/forwarded/-/forwarded-0.1.0.tgz"},"ipaddr.js":{"version":"1.3.0","from":"ipaddr.js@1.3.0","resolved":"https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.3.0.tgz"}}},"range-parser":{"version":"1.2.0","from":"range-parser@>=1.2.0 <1.3.0","resolved":"https://registry.npmjs.org/range-parser/-/range-parser-1.2.0.tgz"},"setprototypeof":{"version":"1.0.3","from":"setprototypeof@1.0.3","resolved":"https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.0.3.tgz"},"statuses":{"version":"1.3.1","from":"statuses@>=1.3.1 <2.0.0","resolved":"https://registry.npmjs.org/statuses/-/statuses-1.3.1.tgz"},"utils-merge":{"version":"1.0.0","from":"utils-merge@1.0.0","resolved":"https://registry.npmjs.org/utils-merge/-/utils-merge-1.0.0.tgz"}}},"express-urlrewrite":{"version":"1.2.0","from":"express-urlrewrite@>=1.2.0 <2.0.0","resolved":"https://registry.npmjs.org/express-urlrewrite/-/express-urlrewrite-1.2.0.tgz","dependencies":{"path-to-regexp":{"version":"1.7.0","from":"path-to-regexp@>=1.0.3 <2.0.0","resolved":"https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-1.7.0.tgz","dependencies":{"isarray":{"version":"0.0.1","from":"isarray@0.0.1","resolved":"https://registry.npmjs.org/isarray/-/isarray-0.0.1.tgz"}}}}},"glob":{"version":"7.1.2","from":"glob@7.1.2","resolved":"https://registry.npmjs.org/glob/-/glob-7.1.2.tgz","dependencies":{"fs.realpath":{"version":"1.0.0","from":"fs.realpath@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz"},"minimatch":{"version":"3.0.4","from":"minimatch@>=3.0.4 <4.0.0","resolved":"https://registry.npmjs.org/minimatch/-/minimatch-3.0.4.tgz","dependencies":{"brace-expansion":{"version":"1.1.8","from":"brace-expansion@>=1.1.7 <2.0.0","resolved":"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.8.tgz","dependencies":{"concat-map":{"version":"0.0.1","from":"concat-map@0.0.1","resolved":"https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz"},"balanced-match":{"version":"1.0.0","from":"balanced-match@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.0.tgz"}}}}},"inflight":{"version":"1.0.6","from":"inflight@>=1.0.4 <2.0.0","resolved":"https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz","dependencies":{"wrappy":{"version":"1.0.2","from":"wrappy@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz"}}},"inherits":{"version":"2.0.3","from":"inherits@>=2.0.0 <3.0.0","resolved":"https://registry.npmjs.org/inherits/-/inherits-2.0.3.tgz"},"once":{"version":"1.4.0","from":"once@>=1.3.0 <2.0.0","resolved":"https://registry.npmjs.org/once/-/once-1.4.0.tgz"},"path-is-absolute":{"version":"1.0.1","from":"path-is-absolute@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz"}}},"gulp":{"version":"3.9.1","from":"gulp@>=3.9.1 <4.0.0","resolved":"https://registry.npmjs.org/gulp/-/gulp-3.9.1.tgz","dependencies":{"archy":{"version":"1.0.0","from":"archy@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/archy/-/archy-1.0.0.tgz"},"chalk":{"version":"1.1.3","from":"chalk@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/chalk/-/chalk-1.1.3.tgz","dependencies":{"ansi-styles":{"version":"2.2.1","from":"ansi-styles@>=2.2.1 <3.0.0","resolved":"https://registry.npmjs.org/ansi-styles/-/ansi-styles-2.2.1.tgz"},"escape-string-regexp":{"version":"1.0.5","from":"escape-string-regexp@>=1.0.2 <2.0.0","resolved":"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz"},"has-ansi":{"version":"2.0.0","from":"has-ansi@>=2.0.0 <3.0.0","resolved":"https://registry.npmjs.org/has-ansi/-/has-ansi-2.0.0.tgz","dependencies":{"ansi-regex":{"version":"2.0.0","from":"ansi-regex@>=2.0.0 <3.0.0","resolved":"https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.0.0.tgz"}}},"strip-ansi":{"version":"3.0.1","from":"strip-ansi@>=3.0.0 <4.0.0","resolved":"https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz"},"supports-color":{"version":"2.0.0","from":"supports-color@>=2.0.0 <3.0.0","resolved":"https://registry.npmjs.org/supports-color/-/supports-color-2.0.0.tgz"}}},"deprecated":{"version":"0.0.1","from":"deprecated@>=0.0.1 <0.0.2","resolved":"https://registry.npmjs.org/deprecated/-/deprecated-0.0.1.tgz"},"gulp-util":{"version":"3.0.8","from":"gulp-util@>=3.0.0 <4.0.0","resolved":"https://registry.npmjs.org/gulp-util/-/gulp-util-3.0.8.tgz","dependencies":{"array-differ":{"version":"1.0.0","from":"array-differ@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/array-differ/-/array-differ-1.0.0.tgz"},"array-uniq":{"version":"1.0.3","from":"array-uniq@>=1.0.1 <2.0.0","resolved":"https://registry.npmjs.org/array-uniq/-/array-uniq-1.0.3.tgz"},"beeper":{"version":"1.1.1","from":"beeper@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/beeper/-/beeper-1.1.1.tgz"},"dateformat":{"version":"2.0.0","from":"dateformat@>=2.0.0 <3.0.0","resolved":"https://registry.npmjs.org/dateformat/-/dateformat-2.0.0.tgz"},"fancy-log":{"version":"1.3.0","from":"fancy-log@>=1.1.0 <2.0.0","resolved":"https://registry.npmjs.org/fancy-log/-/fancy-log-1.3.0.tgz","dependencies":{"time-stamp":{"version":"1.0.1","from":"time-stamp@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/time-stamp/-/time-stamp-1.0.1.tgz"}}},"object-assign":{"version":"3.0.0","from":"object-assign@>=3.0.0 <4.0.0","resolved":"https://registry.npmjs.org/object-assign/-/object-assign-3.0.0.tgz"},"gulplog":{"version":"1.0.0","from":"gulplog@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/gulplog/-/gulplog-1.0.0.tgz","dependencies":{"glogg":{"version":"1.0.0","from":"glogg@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/glogg/-/glogg-1.0.0.tgz"}}},"has-gulplog":{"version":"0.1.0","from":"has-gulplog@>=0.1.0 <0.2.0","resolved":"https://registry.npmjs.org/has-gulplog/-/has-gulplog-0.1.0.tgz","dependencies":{"sparkles":{"version":"1.0.0","from":"sparkles@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/sparkles/-/sparkles-1.0.0.tgz"}}},"lodash._reescape":{"version":"3.0.0","from":"lodash._reescape@>=3.0.0 <4.0.0","resolved":"https://registry.npmjs.org/lodash._reescape/-/lodash._reescape-3.0.0.tgz"},"lodash._reevaluate":{"version":"3.0.0","from":"lodash._reevaluate@>=3.0.0 <4.0.0","resolved":"https://registry.npmjs.org/lodash._reevaluate/-/lodash._reevaluate-3.0.0.tgz"},"lodash._reinterpolate":{"version":"3.0.0","from":"lodash._reinterpolate@>=3.0.0 <4.0.0","resolved":"https://registry.npmjs.org/lodash._reinterpolate/-/lodash._reinterpolate-3.0.0.tgz"},"lodash.template":{"version":"3.6.2","from":"lodash.template@>=3.0.0 <4.0.0","resolved":"https://registry.npmjs.org/lodash.template/-/lodash.template-3.6.2.tgz","dependencies":{"lodash._basecopy":{"version":"3.0.1","from":"lodash._basecopy@>=3.0.0 <4.0.0","resolved":"https://registry.npmjs.org/lodash._basecopy/-/lodash._basecopy-3.0.1.tgz"},"lodash._basetostring":{"version":"3.0.1","from":"lodash._basetostring@>=3.0.0 <4.0.0","resolved":"https://registry.npmjs.org/lodash._basetostring/-/lodash._basetostring-3.0.1.tgz"},"lodash._basevalues":{"version":"3.0.0","from":"lodash._basevalues@>=3.0.0 <4.0.0","resolved":"https://registry.npmjs.org/lodash._basevalues/-/lodash._basevalues-3.0.0.tgz"},"lodash._isiterateecall":{"version":"3.0.9","from":"lodash._isiterateecall@>=3.0.0 <4.0.0","resolved":"https://registry.npmjs.org/lodash._isiterateecall/-/lodash._isiterateecall-3.0.9.tgz"},"lodash.escape":{"version":"3.2.0","from":"lodash.escape@>=3.0.0 <4.0.0","resolved":"https://registry.npmjs.org/lodash.escape/-/lodash.escape-3.2.0.tgz","dependencies":{"lodash._root":{"version":"3.0.1","from":"lodash._root@>=3.0.0 <4.0.0","resolved":"https://registry.npmjs.org/lodash._root/-/lodash._root-3.0.1.tgz"}}},"lodash.keys":{"version":"3.1.2","from":"lodash.keys@>=3.0.0 <4.0.0","resolved":"https://registry.npmjs.org/lodash.keys/-/lodash.keys-3.1.2.tgz","dependencies":{"lodash._getnative":{"version":"3.9.1","from":"lodash._getnative@>=3.0.0 <4.0.0","resolved":"https://registry.npmjs.org/lodash._getnative/-/lodash._getnative-3.9.1.tgz"},"lodash.isarguments":{"version":"3.1.0","from":"lodash.isarguments@>=3.0.0 <4.0.0","resolved":"https://registry.npmjs.org/lodash.isarguments/-/lodash.isarguments-3.1.0.tgz"},"lodash.isarray":{"version":"3.0.4","from":"lodash.isarray@>=3.0.0 <4.0.0","resolved":"https://registry.npmjs.org/lodash.isarray/-/lodash.isarray-3.0.4.tgz"}}},"lodash.restparam":{"version":"3.6.1","from":"lodash.restparam@>=3.0.0 <4.0.0","resolved":"https://registry.npmjs.org/lodash.restparam/-/lodash.restparam-3.6.1.tgz"},"lodash.templatesettings":{"version":"3.1.1","from":"lodash.templatesettings@>=3.0.0 <4.0.0","resolved":"https://registry.npmjs.org/lodash.templatesettings/-/lodash.templatesettings-3.1.1.tgz"}}},"multipipe":{"version":"0.1.2","from":"multipipe@>=0.1.2 <0.2.0","resolved":"https://registry.npmjs.org/multipipe/-/multipipe-0.1.2.tgz","dependencies":{"duplexer2":{"version":"0.0.2","from":"duplexer2@0.0.2","resolved":"https://registry.npmjs.org/duplexer2/-/duplexer2-0.0.2.tgz","dependencies":{"readable-stream":{"version":"1.1.14","from":"readable-stream@>=1.1.9 <1.2.0","resolved":"https://registry.npmjs.org/readable-stream/-/readable-stream-1.1.14.tgz"}}}}},"replace-ext":{"version":"0.0.1","from":"replace-ext@0.0.1","resolved":"https://registry.npmjs.org/replace-ext/-/replace-ext-0.0.1.tgz"},"vinyl":{"version":"0.5.3","from":"vinyl@>=0.5.0 <0.6.0","resolved":"https://registry.npmjs.org/vinyl/-/vinyl-0.5.3.tgz"}}},"interpret":{"version":"1.0.1","from":"interpret@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/interpret/-/interpret-1.0.1.tgz"},"liftoff":{"version":"2.3.0","from":"liftoff@>=2.1.0 <3.0.0","resolved":"https://registry.npmjs.org/liftoff/-/liftoff-2.3.0.tgz","dependencies":{"findup-sync":{"version":"0.4.3","from":"findup-sync@>=0.4.2 <0.5.0","resolved":"https://registry.npmjs.org/findup-sync/-/findup-sync-0.4.3.tgz","dependencies":{"detect-file":{"version":"0.1.0","from":"detect-file@>=0.1.0 <0.2.0","resolved":"https://registry.npmjs.org/detect-file/-/detect-file-0.1.0.tgz","dependencies":{"fs-exists-sync":{"version":"0.1.0","from":"fs-exists-sync@>=0.1.0 <0.2.0","resolved":"https://registry.npmjs.org/fs-exists-sync/-/fs-exists-sync-0.1.0.tgz"}}},"is-glob":{"version":"2.0.1","from":"is-glob@>=2.0.1 <3.0.0","resolved":"https://registry.npmjs.org/is-glob/-/is-glob-2.0.1.tgz","dependencies":{"is-extglob":{"version":"1.0.0","from":"is-extglob@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/is-extglob/-/is-extglob-1.0.0.tgz"}}},"micromatch":{"version":"2.3.11","from":"micromatch@>=2.3.7 <3.0.0","resolved":"https://registry.npmjs.org/micromatch/-/micromatch-2.3.11.tgz","dependencies":{"arr-diff":{"version":"2.0.0","from":"arr-diff@>=2.0.0 <3.0.0","resolved":"https://registry.npmjs.org/arr-diff/-/arr-diff-2.0.0.tgz","dependencies":{"arr-flatten":{"version":"1.0.1","from":"arr-flatten@>=1.0.1 <2.0.0","resolved":"https://registry.npmjs.org/arr-flatten/-/arr-flatten-1.0.1.tgz"}}},"array-unique":{"version":"0.2.1","from":"array-unique@>=0.2.1 <0.3.0","resolved":"https://registry.npmjs.org/array-unique/-/array-unique-0.2.1.tgz"},"braces":{"version":"1.8.5","from":"braces@>=1.8.2 <2.0.0","resolved":"https://registry.npmjs.org/braces/-/braces-1.8.5.tgz","dependencies":{"expand-range":{"version":"1.8.2","from":"expand-range@>=1.8.1 <2.0.0","resolved":"https://registry.npmjs.org/expand-range/-/expand-range-1.8.2.tgz","dependencies":{"fill-range":{"version":"2.2.3","from":"fill-range@>=2.1.0 <3.0.0","resolved":"https://registry.npmjs.org/fill-range/-/fill-range-2.2.3.tgz","dependencies":{"is-number":{"version":"2.1.0","from":"is-number@>=2.1.0 <3.0.0","resolved":"https://registry.npmjs.org/is-number/-/is-number-2.1.0.tgz"},"isobject":{"version":"2.1.0","from":"isobject@>=2.0.0 <3.0.0","resolved":"https://registry.npmjs.org/isobject/-/isobject-2.1.0.tgz","dependencies":{"isarray":{"version":"1.0.0","from":"isarray@1.0.0","resolved":"https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz"}}},"randomatic":{"version":"1.1.6","from":"randomatic@>=1.1.3 <2.0.0","resolved":"https://registry.npmjs.org/randomatic/-/randomatic-1.1.6.tgz"},"repeat-string":{"version":"1.6.1","from":"repeat-string@>=1.5.2 <2.0.0","resolved":"https://registry.npmjs.org/repeat-string/-/repeat-string-1.6.1.tgz"}}}}},"preserve":{"version":"0.2.0","from":"preserve@>=0.2.0 <0.3.0","resolved":"https://registry.npmjs.org/preserve/-/preserve-0.2.0.tgz"},"repeat-element":{"version":"1.1.2","from":"repeat-element@>=1.1.2 <2.0.0","resolved":"https://registry.npmjs.org/repeat-element/-/repeat-element-1.1.2.tgz"}}},"expand-brackets":{"version":"0.1.5","from":"expand-brackets@>=0.1.4 <0.2.0","resolved":"https://registry.npmjs.org/expand-brackets/-/expand-brackets-0.1.5.tgz","dependencies":{"is-posix-bracket":{"version":"0.1.1","from":"is-posix-bracket@>=0.1.0 <0.2.0","resolved":"https://registry.npmjs.org/is-posix-bracket/-/is-posix-bracket-0.1.1.tgz"}}},"extglob":{"version":"0.3.2","from":"extglob@>=0.3.1 <0.4.0","resolved":"https://registry.npmjs.org/extglob/-/extglob-0.3.2.tgz"},"filename-regex":{"version":"2.0.0","from":"filename-regex@>=2.0.0 <3.0.0","resolved":"https://registry.npmjs.org/filename-regex/-/filename-regex-2.0.0.tgz"},"kind-of":{"version":"3.1.0","from":"kind-of@>=3.0.2 <4.0.0","resolved":"https://registry.npmjs.org/kind-of/-/kind-of-3.1.0.tgz","dependencies":{"is-buffer":{"version":"1.1.4","from":"is-buffer@>=1.0.2 <2.0.0","resolved":"https://registry.npmjs.org/is-buffer/-/is-buffer-1.1.4.tgz"}}},"object.omit":{"version":"2.0.1","from":"object.omit@>=2.0.0 <3.0.0","resolved":"https://registry.npmjs.org/object.omit/-/object.omit-2.0.1.tgz","dependencies":{"for-own":{"version":"0.1.4","from":"for-own@>=0.1.4 <0.2.0","resolved":"https://registry.npmjs.org/for-own/-/for-own-0.1.4.tgz","dependencies":{"for-in":{"version":"0.1.6","from":"for-in@>=0.1.5 <0.2.0","resolved":"https://registry.npmjs.org/for-in/-/for-in-0.1.6.tgz"}}},"is-extendable":{"version":"0.1.1","from":"is-extendable@>=0.1.1 <0.2.0","resolved":"https://registry.npmjs.org/is-extendable/-/is-extendable-0.1.1.tgz"}}},"parse-glob":{"version":"3.0.4","from":"parse-glob@>=3.0.4 <4.0.0","resolved":"https://registry.npmjs.org/parse-glob/-/parse-glob-3.0.4.tgz","dependencies":{"glob-base":{"version":"0.3.0","from":"glob-base@>=0.3.0 <0.4.0","resolved":"https://registry.npmjs.org/glob-base/-/glob-base-0.3.0.tgz","dependencies":{"glob-parent":{"version":"2.0.0","from":"glob-parent@>=2.0.0 <3.0.0","resolved":"https://registry.npmjs.org/glob-parent/-/glob-parent-2.0.0.tgz"}}},"is-dotfile":{"version":"1.0.2","from":"is-dotfile@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/is-dotfile/-/is-dotfile-1.0.2.tgz"}}},"regex-cache":{"version":"0.4.3","from":"regex-cache@>=0.4.2 <0.5.0","resolved":"https://registry.npmjs.org/regex-cache/-/regex-cache-0.4.3.tgz","dependencies":{"is-equal-shallow":{"version":"0.1.3","from":"is-equal-shallow@>=0.1.3 <0.2.0","resolved":"https://registry.npmjs.org/is-equal-shallow/-/is-equal-shallow-0.1.3.tgz"},"is-primitive":{"version":"2.0.0","from":"is-primitive@>=2.0.0 <3.0.0","resolved":"https://registry.npmjs.org/is-primitive/-/is-primitive-2.0.0.tgz"}}}}},"resolve-dir":{"version":"0.1.1","from":"resolve-dir@>=0.1.0 <0.2.0","resolved":"https://registry.npmjs.org/resolve-dir/-/resolve-dir-0.1.1.tgz","dependencies":{"global-modules":{"version":"0.2.3","from":"global-modules@>=0.2.3 <0.3.0","resolved":"https://registry.npmjs.org/global-modules/-/global-modules-0.2.3.tgz","dependencies":{"global-prefix":{"version":"0.1.5","from":"global-prefix@>=0.1.4 <0.2.0","resolved":"https://registry.npmjs.org/global-prefix/-/global-prefix-0.1.5.tgz","dependencies":{"homedir-polyfill":{"version":"1.0.1","from":"homedir-polyfill@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/homedir-polyfill/-/homedir-polyfill-1.0.1.tgz","dependencies":{"parse-passwd":{"version":"1.0.0","from":"parse-passwd@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/parse-passwd/-/parse-passwd-1.0.0.tgz"}}},"ini":{"version":"1.3.4","from":"ini@>=1.3.4 <2.0.0","resolved":"https://registry.npmjs.org/ini/-/ini-1.3.4.tgz"}}},"is-windows":{"version":"0.2.0","from":"is-windows@>=0.2.0 <0.3.0","resolved":"https://registry.npmjs.org/is-windows/-/is-windows-0.2.0.tgz"}}}}}}},"fined":{"version":"1.0.2","from":"fined@>=1.0.1 <2.0.0","resolved":"https://registry.npmjs.org/fined/-/fined-1.0.2.tgz","dependencies":{"expand-tilde":{"version":"1.2.2","from":"expand-tilde@>=1.2.2 <2.0.0","resolved":"https://registry.npmjs.org/expand-tilde/-/expand-tilde-1.2.2.tgz"},"lodash.assignwith":{"version":"4.2.0","from":"lodash.assignwith@>=4.0.7 <5.0.0","resolved":"https://registry.npmjs.org/lodash.assignwith/-/lodash.assignwith-4.2.0.tgz"},"lodash.isempty":{"version":"4.4.0","from":"lodash.isempty@>=4.2.1 <5.0.0","resolved":"https://registry.npmjs.org/lodash.isempty/-/lodash.isempty-4.4.0.tgz"},"lodash.pick":{"version":"4.4.0","from":"lodash.pick@>=4.2.1 <5.0.0","resolved":"https://registry.npmjs.org/lodash.pick/-/lodash.pick-4.4.0.tgz"},"parse-filepath":{"version":"1.0.1","from":"parse-filepath@>=1.0.1 <2.0.0","resolved":"https://registry.npmjs.org/parse-filepath/-/parse-filepath-1.0.1.tgz","dependencies":{"is-absolute":{"version":"0.2.6","from":"is-absolute@>=0.2.3 <0.3.0","resolved":"https://registry.npmjs.org/is-absolute/-/is-absolute-0.2.6.tgz","dependencies":{"is-relative":{"version":"0.2.1","from":"is-relative@>=0.2.1 <0.3.0","resolved":"https://registry.npmjs.org/is-relative/-/is-relative-0.2.1.tgz","dependencies":{"is-unc-path":{"version":"0.1.2","from":"is-unc-path@>=0.1.1 <0.2.0","resolved":"https://registry.npmjs.org/is-unc-path/-/is-unc-path-0.1.2.tgz","dependencies":{"unc-path-regex":{"version":"0.1.2","from":"unc-path-regex@>=0.1.0 <0.2.0","resolved":"https://registry.npmjs.org/unc-path-regex/-/unc-path-regex-0.1.2.tgz"}}}}}}},"map-cache":{"version":"0.2.2","from":"map-cache@>=0.2.0 <0.3.0","resolved":"https://registry.npmjs.org/map-cache/-/map-cache-0.2.2.tgz"},"path-root":{"version":"0.1.1","from":"path-root@>=0.1.1 <0.2.0","resolved":"https://registry.npmjs.org/path-root/-/path-root-0.1.1.tgz","dependencies":{"path-root-regex":{"version":"0.1.2","from":"path-root-regex@>=0.1.0 <0.2.0","resolved":"https://registry.npmjs.org/path-root-regex/-/path-root-regex-0.1.2.tgz"}}}}}}},"flagged-respawn":{"version":"0.3.2","from":"flagged-respawn@>=0.3.2 <0.4.0","resolved":"https://registry.npmjs.org/flagged-respawn/-/flagged-respawn-0.3.2.tgz"},"lodash.isplainobject":{"version":"4.0.6","from":"lodash.isplainobject@>=4.0.4 <5.0.0","resolved":"https://registry.npmjs.org/lodash.isplainobject/-/lodash.isplainobject-4.0.6.tgz"},"lodash.isstring":{"version":"4.0.1","from":"lodash.isstring@>=4.0.1 <5.0.0","resolved":"https://registry.npmjs.org/lodash.isstring/-/lodash.isstring-4.0.1.tgz"},"lodash.mapvalues":{"version":"4.6.0","from":"lodash.mapvalues@>=4.4.0 <5.0.0","resolved":"https://registry.npmjs.org/lodash.mapvalues/-/lodash.mapvalues-4.6.0.tgz"},"rechoir":{"version":"0.6.2","from":"rechoir@>=0.6.2 <0.7.0","resolved":"https://registry.npmjs.org/rechoir/-/rechoir-0.6.2.tgz"},"resolve":{"version":"1.2.0","from":"resolve@>=1.1.7 <2.0.0","resolved":"https://registry.npmjs.org/resolve/-/resolve-1.2.0.tgz"}}},"orchestrator":{"version":"0.3.8","from":"orchestrator@>=0.3.0 <0.4.0","resolved":"https://registry.npmjs.org/orchestrator/-/orchestrator-0.3.8.tgz","dependencies":{"end-of-stream":{"version":"0.1.5","from":"end-of-stream@>=0.1.5 <0.2.0","resolved":"https://registry.npmjs.org/end-of-stream/-/end-of-stream-0.1.5.tgz","dependencies":{"once":{"version":"1.3.3","from":"once@>=1.3.0 <1.4.0","resolved":"https://registry.npmjs.org/once/-/once-1.3.3.tgz"}}},"sequencify":{"version":"0.0.7","from":"sequencify@>=0.0.7 <0.1.0","resolved":"https://registry.npmjs.org/sequencify/-/sequencify-0.0.7.tgz"},"stream-consume":{"version":"0.1.0","from":"stream-consume@>=0.1.0 <0.2.0","resolved":"https://registry.npmjs.org/stream-consume/-/stream-consume-0.1.0.tgz"}}},"pretty-hrtime":{"version":"1.0.3","from":"pretty-hrtime@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/pretty-hrtime/-/pretty-hrtime-1.0.3.tgz"},"semver":{"version":"4.3.6","from":"semver@>=4.1.0 <5.0.0","resolved":"https://registry.npmjs.org/semver/-/semver-4.3.6.tgz"},"tildify":{"version":"1.2.0","from":"tildify@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/tildify/-/tildify-1.2.0.tgz","dependencies":{"os-homedir":{"version":"1.0.2","from":"os-homedir@>=1.0.1 <2.0.0","resolved":"https://registry.npmjs.org/os-homedir/-/os-homedir-1.0.2.tgz"}}},"v8flags":{"version":"2.0.11","from":"v8flags@>=2.0.2 <3.0.0","resolved":"https://registry.npmjs.org/v8flags/-/v8flags-2.0.11.tgz","dependencies":{"user-home":{"version":"1.1.1","from":"user-home@>=1.1.1 <2.0.0","resolved":"https://registry.npmjs.org/user-home/-/user-home-1.1.1.tgz"}}},"vinyl-fs":{"version":"0.3.14","from":"vinyl-fs@>=0.3.0 <0.4.0","resolved":"https://registry.npmjs.org/vinyl-fs/-/vinyl-fs-0.3.14.tgz","dependencies":{"defaults":{"version":"1.0.3","from":"defaults@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/defaults/-/defaults-1.0.3.tgz"},"glob-stream":{"version":"3.1.18","from":"glob-stream@>=3.1.5 <4.0.0","resolved":"https://registry.npmjs.org/glob-stream/-/glob-stream-3.1.18.tgz","dependencies":{"glob":{"version":"4.5.3","from":"glob@>=4.3.1 <5.0.0","resolved":"https://registry.npmjs.org/glob/-/glob-4.5.3.tgz"},"minimatch":{"version":"2.0.10","from":"minimatch@>=2.0.1 <3.0.0","resolved":"https://registry.npmjs.org/minimatch/-/minimatch-2.0.10.tgz"},"through2":{"version":"0.6.5","from":"through2@>=0.6.1 <0.7.0","resolved":"https://registry.npmjs.org/through2/-/through2-0.6.5.tgz","dependencies":{"readable-stream":{"version":"1.0.34","from":"readable-stream@>=1.0.33-1 <1.1.0-0","resolved":"https://registry.npmjs.org/readable-stream/-/readable-stream-1.0.34.tgz"}}},"glob2base":{"version":"0.0.12","from":"glob2base@>=0.0.12 <0.0.13","resolved":"https://registry.npmjs.org/glob2base/-/glob2base-0.0.12.tgz","dependencies":{"find-index":{"version":"0.1.1","from":"find-index@>=0.1.1 <0.2.0","resolved":"https://registry.npmjs.org/find-index/-/find-index-0.1.1.tgz"}}},"ordered-read-streams":{"version":"0.1.0","from":"ordered-read-streams@>=0.1.0 <0.2.0","resolved":"https://registry.npmjs.org/ordered-read-streams/-/ordered-read-streams-0.1.0.tgz"},"unique-stream":{"version":"1.0.0","from":"unique-stream@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/unique-stream/-/unique-stream-1.0.0.tgz"}}},"glob-watcher":{"version":"0.0.6","from":"glob-watcher@>=0.0.6 <0.0.7","resolved":"https://registry.npmjs.org/glob-watcher/-/glob-watcher-0.0.6.tgz","dependencies":{"gaze":{"version":"0.5.2","from":"gaze@>=0.5.1 <0.6.0","resolved":"https://registry.npmjs.org/gaze/-/gaze-0.5.2.tgz","dependencies":{"globule":{"version":"0.1.0","from":"globule@>=0.1.0 <0.2.0","resolved":"https://registry.npmjs.org/globule/-/globule-0.1.0.tgz","dependencies":{"glob":{"version":"3.1.21","from":"glob@>=3.1.21 <3.2.0","resolved":"https://registry.npmjs.org/glob/-/glob-3.1.21.tgz","dependencies":{"graceful-fs":{"version":"1.2.3","from":"graceful-fs@>=1.2.0 <1.3.0","resolved":"https://registry.npmjs.org/graceful-fs/-/graceful-fs-1.2.3.tgz"},"inherits":{"version":"1.0.2","from":"inherits@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/inherits/-/inherits-1.0.2.tgz"}}},"lodash":{"version":"1.0.2","from":"lodash@>=1.0.1 <1.1.0","resolved":"https://registry.npmjs.org/lodash/-/lodash-1.0.2.tgz"},"minimatch":{"version":"0.2.14","from":"minimatch@>=0.2.11 <0.3.0","resolved":"https://registry.npmjs.org/minimatch/-/minimatch-0.2.14.tgz","dependencies":{"lru-cache":{"version":"2.7.3","from":"lru-cache@>=2.0.0 <3.0.0","resolved":"https://registry.npmjs.org/lru-cache/-/lru-cache-2.7.3.tgz"},"sigmund":{"version":"1.0.1","from":"sigmund@>=1.0.0 <1.1.0","resolved":"https://registry.npmjs.org/sigmund/-/sigmund-1.0.1.tgz"}}}}}}}}},"mkdirp":{"version":"0.5.1","from":"mkdirp@>=0.5.0 <0.6.0","resolved":"https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.1.tgz","dependencies":{"minimist":{"version":"0.0.8","from":"minimist@0.0.8","resolved":"https://registry.npmjs.org/minimist/-/minimist-0.0.8.tgz"}}},"strip-bom":{"version":"1.0.0","from":"strip-bom@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/strip-bom/-/strip-bom-1.0.0.tgz","dependencies":{"first-chunk-stream":{"version":"1.0.0","from":"first-chunk-stream@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/first-chunk-stream/-/first-chunk-stream-1.0.0.tgz"},"is-utf8":{"version":"0.2.1","from":"is-utf8@>=0.2.0 <0.3.0","resolved":"https://registry.npmjs.org/is-utf8/-/is-utf8-0.2.1.tgz"}}},"graceful-fs":{"version":"3.0.11","from":"graceful-fs@>=3.0.0 <4.0.0","resolved":"https://registry.npmjs.org/graceful-fs/-/graceful-fs-3.0.11.tgz","dependencies":{"natives":{"version":"1.1.0","from":"natives@>=1.1.0 <2.0.0","resolved":"https://registry.npmjs.org/natives/-/natives-1.1.0.tgz"}}},"through2":{"version":"0.6.5","from":"through2@>=0.6.1 <0.7.0","resolved":"https://registry.npmjs.org/through2/-/through2-0.6.5.tgz","dependencies":{"readable-stream":{"version":"1.0.34","from":"readable-stream@>=1.0.33-1 <1.1.0-0","resolved":"https://registry.npmjs.org/readable-stream/-/readable-stream-1.0.34.tgz"}}},"vinyl":{"version":"0.4.6","from":"vinyl@>=0.4.0 <0.5.0","resolved":"https://registry.npmjs.org/vinyl/-/vinyl-0.4.6.tgz","dependencies":{"clone":{"version":"0.2.0","from":"clone@>=0.2.0 <0.3.0","resolved":"https://registry.npmjs.org/clone/-/clone-0.2.0.tgz"}}}}}}},"gulp-clean-css":{"version":"3.4.2","from":"gulp-clean-css@^3.0.4","resolved":"https://registry.npmjs.org/gulp-clean-css/-/gulp-clean-css-3.4.2.tgz","dependencies":{"clean-css":{"version":"4.1.4","from":"clean-css@4.1.4","resolved":"https://registry.npmjs.org/clean-css/-/clean-css-4.1.4.tgz"}}},"gulp-concat-sourcemap":{"version":"1.3.1","from":"gulp-concat-sourcemap@^1.3.1","resolved":"https://registry.npmjs.org/gulp-concat-sourcemap/-/gulp-concat-sourcemap-1.3.1.tgz","dependencies":{"gulp-util":{"version":"2.2.20","from":"gulp-util@^2.2.14","resolved":"https://registry.npmjs.org/gulp-util/-/gulp-util-2.2.20.tgz","dependencies":{"chalk":{"version":"0.5.1","from":"chalk@^0.5.0","resolved":"https://registry.npmjs.org/chalk/-/chalk-0.5.1.tgz","dependencies":{"ansi-styles":{"version":"1.1.0","from":"ansi-styles@^1.1.0","resolved":"https://registry.npmjs.org/ansi-styles/-/ansi-styles-1.1.0.tgz"},"has-ansi":{"version":"0.1.0","from":"has-ansi@^0.1.0","resolved":"https://registry.npmjs.org/has-ansi/-/has-ansi-0.1.0.tgz","dependencies":{"ansi-regex":{"version":"0.2.1","from":"ansi-regex@^0.2.0","resolved":"https://registry.npmjs.org/ansi-regex/-/ansi-regex-0.2.1.tgz"}}},"strip-ansi":{"version":"0.3.0","from":"strip-ansi@^0.3.0","resolved":"https://registry.npmjs.org/strip-ansi/-/strip-ansi-0.3.0.tgz"},"supports-color":{"version":"0.2.0","from":"supports-color@^0.2.0","resolved":"https://registry.npmjs.org/supports-color/-/supports-color-0.2.0.tgz"}}},"dateformat":{"version":"1.0.12","from":"dateformat@^1.0.7-1.2.3","resolved":"https://registry.npmjs.org/dateformat/-/dateformat-1.0.12.tgz"},"lodash._reinterpolate":{"version":"2.4.1","from":"lodash._reinterpolate@^2.4.1","resolved":"https://registry.npmjs.org/lodash._reinterpolate/-/lodash._reinterpolate-2.4.1.tgz"},"lodash.template":{"version":"2.4.1","from":"lodash.template@^2.4.1","resolved":"https://registry.npmjs.org/lodash.template/-/lodash.template-2.4.1.tgz","dependencies":{"lodash.defaults":{"version":"2.4.1","from":"lodash.defaults@~2.4.1","resolved":"https://registry.npmjs.org/lodash.defaults/-/lodash.defaults-2.4.1.tgz","dependencies":{"lodash._objecttypes":{"version":"2.4.1","from":"lodash._objecttypes@~2.4.1","resolved":"https://registry.npmjs.org/lodash._objecttypes/-/lodash._objecttypes-2.4.1.tgz"}}},"lodash.escape":{"version":"2.4.1","from":"lodash.escape@~2.4.1","resolved":"https://registry.npmjs.org/lodash.escape/-/lodash.escape-2.4.1.tgz","dependencies":{"lodash._escapehtmlchar":{"version":"2.4.1","from":"lodash._escapehtmlchar@~2.4.1","resolved":"https://registry.npmjs.org/lodash._escapehtmlchar/-/lodash._escapehtmlchar-2.4.1.tgz","dependencies":{"lodash._htmlescapes":{"version":"2.4.1","from":"lodash._htmlescapes@~2.4.1","resolved":"https://registry.npmjs.org/lodash._htmlescapes/-/lodash._htmlescapes-2.4.1.tgz"}}},"lodash._reunescapedhtml":{"version":"2.4.1","from":"lodash._reunescapedhtml@~2.4.1","resolved":"https://registry.npmjs.org/lodash._reunescapedhtml/-/lodash._reunescapedhtml-2.4.1.tgz","dependencies":{"lodash.keys":{"version":"2.4.1","from":"lodash.keys@~2.4.1","resolved":"https://registry.npmjs.org/lodash.keys/-/lodash.keys-2.4.1.tgz","dependencies":{"lodash.isobject":{"version":"2.4.1","from":"lodash.isobject@~2.4.1","resolved":"https://registry.npmjs.org/lodash.isobject/-/lodash.isobject-2.4.1.tgz"}}}}}}},"lodash.keys":{"version":"2.4.1","from":"lodash.keys@~2.4.1","resolved":"https://registry.npmjs.org/lodash.keys/-/lodash.keys-2.4.1.tgz","dependencies":{"lodash.isobject":{"version":"2.4.1","from":"lodash.isobject@~2.4.1","resolved":"https://registry.npmjs.org/lodash.isobject/-/lodash.isobject-2.4.1.tgz"},"lodash._isnative":{"version":"2.4.1","from":"lodash._isnative@~2.4.1","resolved":"https://registry.npmjs.org/lodash._isnative/-/lodash._isnative-2.4.1.tgz"},"lodash._shimkeys":{"version":"2.4.1","from":"lodash._shimkeys@~2.4.1","resolved":"https://registry.npmjs.org/lodash._shimkeys/-/lodash._shimkeys-2.4.1.tgz"}}},"lodash.templatesettings":{"version":"2.4.1","from":"lodash.templatesettings@~2.4.1","resolved":"https://registry.npmjs.org/lodash.templatesettings/-/lodash.templatesettings-2.4.1.tgz"},"lodash._escapestringchar":{"version":"2.4.1","from":"lodash._escapestringchar@~2.4.1","resolved":"https://registry.npmjs.org/lodash._escapestringchar/-/lodash._escapestringchar-2.4.1.tgz"},"lodash.values":{"version":"2.4.1","from":"lodash.values@~2.4.1","resolved":"https://registry.npmjs.org/lodash.values/-/lodash.values-2.4.1.tgz","dependencies":{"lodash.keys":{"version":"2.4.1","from":"lodash.keys@~2.4.1","resolved":"https://registry.npmjs.org/lodash.keys/-/lodash.keys-2.4.1.tgz","dependencies":{"lodash.isobject":{"version":"2.4.1","from":"lodash.isobject@~2.4.1","resolved":"https://registry.npmjs.org/lodash.isobject/-/lodash.isobject-2.4.1.tgz"}}}}}}},"minimist":{"version":"0.2.0","from":"minimist@^0.2.0","resolved":"https://registry.npmjs.org/minimist/-/minimist-0.2.0.tgz"},"through2":{"version":"0.5.1","from":"through2@^0.5.0","resolved":"https://registry.npmjs.org/through2/-/through2-0.5.1.tgz","dependencies":{"readable-stream":{"version":"1.0.34","from":"readable-stream@~1.0.17","resolved":"https://registry.npmjs.org/readable-stream/-/readable-stream-1.0.34.tgz"},"xtend":{"version":"3.0.0","from":"xtend@~3.0.0","resolved":"https://registry.npmjs.org/xtend/-/xtend-3.0.0.tgz"}}},"vinyl":{"version":"0.2.3","from":"vinyl@^0.2.1","resolved":"https://registry.npmjs.org/vinyl/-/vinyl-0.2.3.tgz"}}},"source-map":{"version":"0.1.33","from":"source-map@0.1.33","resolved":"https://registry.npmjs.org/source-map/-/source-map-0.1.33.tgz","dependencies":{"amdefine":{"version":"1.0.1","from":"amdefine@>=0.0.4","resolved":"https://registry.npmjs.org/amdefine/-/amdefine-1.0.1.tgz"}}}}},"gulp-css-purge":{"version":"1.0.27","from":"gulp-css-purge@>=1.0.27 <2.0.0","resolved":"https://registry.npmjs.org/gulp-css-purge/-/gulp-css-purge-1.0.27.tgz","dependencies":{"css-purge-alt":{"version":"1.1.15","from":"css-purge-alt@>=1.1.1 <2.0.0","resolved":"https://registry.npmjs.org/css-purge-alt/-/css-purge-alt-1.1.15.tgz","dependencies":{"cli-color":{"version":"0.2.2","from":"cli-color@0.2.2","resolved":"https://registry.npmjs.org/cli-color/-/cli-color-0.2.2.tgz","dependencies":{"es5-ext":{"version":"0.9.2","from":"es5-ext@>=0.9.1 <0.10.0","resolved":"https://registry.npmjs.org/es5-ext/-/es5-ext-0.9.2.tgz"},"memoizee":{"version":"0.2.6","from":"memoizee@>=0.2.0 <0.3.0","resolved":"https://registry.npmjs.org/memoizee/-/memoizee-0.2.6.tgz","dependencies":{"event-emitter":{"version":"0.2.2","from":"event-emitter@>=0.2.2 <0.3.0","resolved":"https://registry.npmjs.org/event-emitter/-/event-emitter-0.2.2.tgz"},"next-tick":{"version":"0.1.0","from":"next-tick@>=0.1.0 <0.2.0","resolved":"https://registry.npmjs.org/next-tick/-/next-tick-0.1.0.tgz"}}}}},"commander":{"version":"1.1.1","from":"commander@1.1.1","resolved":"https://registry.npmjs.org/commander/-/commander-1.1.1.tgz","dependencies":{"keypress":{"version":"0.1.0","from":"keypress@>=0.1.0 <0.2.0","resolved":"https://registry.npmjs.org/keypress/-/keypress-0.1.0.tgz"}}},"css-parse":{"version":"1.1.0","from":"css-parse@1.1.0","resolved":"https://registry.npmjs.org/css-parse/-/css-parse-1.1.0.tgz"}}},"through2":{"version":"0.6.5","from":"through2@>=0.6.3 <0.7.0","resolved":"https://registry.npmjs.org/through2/-/through2-0.6.5.tgz","dependencies":{"readable-stream":{"version":"1.0.34","from":"readable-stream@>=1.0.33-1 <1.1.0-0","resolved":"https://registry.npmjs.org/readable-stream/-/readable-stream-1.0.34.tgz"}}}}},"gulp-csslint":{"version":"0.3.1","from":"gulp-csslint@>=0.3.0 <0.4.0","resolved":"https://registry.npmjs.org/gulp-csslint/-/gulp-csslint-0.3.1.tgz","dependencies":{"csslint":{"version":"0.10.0","from":"csslint@>=0.10.0 <0.11.0","resolved":"https://registry.npmjs.org/csslint/-/csslint-0.10.0.tgz","dependencies":{"parserlib":{"version":"0.2.5","from":"parserlib@>=0.2.2 <0.3.0","resolved":"https://registry.npmjs.org/parserlib/-/parserlib-0.2.5.tgz"}}},"rcloader":{"version":"0.1.4","from":"rcloader@>=0.1.4 <0.2.0","resolved":"https://registry.npmjs.org/rcloader/-/rcloader-0.1.4.tgz","dependencies":{"rcfinder":{"version":"0.1.9","from":"rcfinder@>=0.1.6 <0.2.0","resolved":"https://registry.npmjs.org/rcfinder/-/rcfinder-0.1.9.tgz"},"lodash":{"version":"3.10.1","from":"lodash@>=3.0.1 <4.0.0","resolved":"https://registry.npmjs.org/lodash/-/lodash-3.10.1.tgz"}}}}},"gulp-data":{"version":"1.2.1","from":"gulp-data@>=1.2.1 <2.0.0","resolved":"https://registry.npmjs.org/gulp-data/-/gulp-data-1.2.1.tgz","dependencies":{"util-extend":{"version":"1.0.3","from":"util-extend@>=1.0.1 <2.0.0","resolved":"https://registry.npmjs.org/util-extend/-/util-extend-1.0.3.tgz"}}},"gulp-jshint":{"version":"2.0.4","from":"gulp-jshint@>=2.0.0 <3.0.0","resolved":"https://registry.npmjs.org/gulp-jshint/-/gulp-jshint-2.0.4.tgz","dependencies":{"rcloader":{"version":"0.2.2","from":"rcloader@>=0.2.2 <0.3.0","resolved":"https://registry.npmjs.org/rcloader/-/rcloader-0.2.2.tgz","dependencies":{"lodash.assign":{"version":"4.2.0","from":"lodash.assign@>=4.2.0 <5.0.0","resolved":"https://registry.npmjs.org/lodash.assign/-/lodash.assign-4.2.0.tgz"},"lodash.isobject":{"version":"3.0.2","from":"lodash.isobject@>=3.0.2 <4.0.0","resolved":"https://registry.npmjs.org/lodash.isobject/-/lodash.isobject-3.0.2.tgz"},"lodash.merge":{"version":"4.6.0","from":"lodash.merge@>=4.6.0 <5.0.0","resolved":"https://registry.npmjs.org/lodash.merge/-/lodash.merge-4.6.0.tgz"}}},"minimatch":{"version":"3.0.3","from":"minimatch@>=3.0.2 <4.0.0","resolved":"https://registry.npmjs.org/minimatch/-/minimatch-3.0.3.tgz","dependencies":{"brace-expansion":{"version":"1.1.6","from":"brace-expansion@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.6.tgz","dependencies":{"balanced-match":{"version":"0.4.2","from":"balanced-match@>=0.4.1 <0.5.0","resolved":"https://registry.npmjs.org/balanced-match/-/balanced-match-0.4.2.tgz"}}}}}}},"gulp-minify-css":{"version":"1.2.4","from":"gulp-minify-css@>=1.2.4 <2.0.0","resolved":"https://registry.npmjs.org/gulp-minify-css/-/gulp-minify-css-1.2.4.tgz","dependencies":{"clean-css":{"version":"3.4.23","from":"clean-css@>=3.3.3 <4.0.0","resolved":"https://registry.npmjs.org/clean-css/-/clean-css-3.4.23.tgz","dependencies":{"commander":{"version":"2.8.1","from":"commander@>=2.8.0 <2.9.0","resolved":"https://registry.npmjs.org/commander/-/commander-2.8.1.tgz","dependencies":{"graceful-readlink":{"version":"1.0.1","from":"graceful-readlink@>=1.0.0","resolved":"https://registry.npmjs.org/graceful-readlink/-/graceful-readlink-1.0.1.tgz"}}},"source-map":{"version":"0.4.4","from":"source-map@>=0.4.0 <0.5.0","resolved":"https://registry.npmjs.org/source-map/-/source-map-0.4.4.tgz"}}},"vinyl-bufferstream":{"version":"1.0.1","from":"vinyl-bufferstream@>=1.0.1 <2.0.0","resolved":"https://registry.npmjs.org/vinyl-bufferstream/-/vinyl-bufferstream-1.0.1.tgz","dependencies":{"bufferstreams":{"version":"1.0.1","from":"bufferstreams@1.0.1","resolved":"https://registry.npmjs.org/bufferstreams/-/bufferstreams-1.0.1.tgz","dependencies":{"readable-stream":{"version":"1.1.14","from":"readable-stream@>=1.0.33 <2.0.0","resolved":"https://registry.npmjs.org/readable-stream/-/readable-stream-1.1.14.tgz"}}}}}}},"gulp-plumber":{"version":"1.1.0","from":"gulp-plumber@>=1.1.0 <2.0.0","resolved":"https://registry.npmjs.org/gulp-plumber/-/gulp-plumber-1.1.0.tgz"},"gulp-sort":{"version":"2.0.0","from":"gulp-sort@>=2.0.0 <3.0.0","resolved":"https://registry.npmjs.org/gulp-sort/-/gulp-sort-2.0.0.tgz"},"gulp-sourcemaps":{"version":"2.6.0","from":"gulp-sourcemaps@^2.5.1","resolved":"https://registry.npmjs.org/gulp-sourcemaps/-/gulp-sourcemaps-2.6.0.tgz","dependencies":{"@gulp-sourcemaps/identity-map":{"version":"1.0.1","from":"@gulp-sourcemaps/identity-map@1.X","resolved":"https://registry.npmjs.org/@gulp-sourcemaps/identity-map/-/identity-map-1.0.1.tgz","dependencies":{"acorn":{"version":"5.0.3","from":"acorn@^5.0.3","resolved":"https://registry.npmjs.org/acorn/-/acorn-5.0.3.tgz"},"css":{"version":"2.2.1","from":"css@^2.2.1","resolved":"https://registry.npmjs.org/css/-/css-2.2.1.tgz","dependencies":{"source-map":{"version":"0.1.43","from":"source-map@^0.1.38","resolved":"https://registry.npmjs.org/source-map/-/source-map-0.1.43.tgz"}}},"normalize-path":{"version":"2.1.1","from":"normalize-path@^2.1.1","resolved":"https://registry.npmjs.org/normalize-path/-/normalize-path-2.1.1.tgz","dependencies":{"remove-trailing-separator":{"version":"1.0.1","from":"remove-trailing-separator@>=1.0.1 <2.0.0","resolved":"https://registry.npmjs.org/remove-trailing-separator/-/remove-trailing-separator-1.0.1.tgz"}}}}},"@gulp-sourcemaps/map-sources":{"version":"1.0.0","from":"@gulp-sourcemaps/map-sources@1.X","resolved":"https://registry.npmjs.org/@gulp-sourcemaps/map-sources/-/map-sources-1.0.0.tgz"},"debug-fabulous":{"version":"0.1.0","from":"debug-fabulous@0.1.X","resolved":"https://registry.npmjs.org/debug-fabulous/-/debug-fabulous-0.1.0.tgz"},"detect-newline":{"version":"2.1.0","from":"detect-newline@2.X","resolved":"https://registry.npmjs.org/detect-newline/-/detect-newline-2.1.0.tgz"},"graceful-fs":{"version":"4.1.11","from":"graceful-fs@>=4.1.0 <5.0.0","resolved":"https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.1.11.tgz"},"acorn":{"version":"4.0.13","from":"acorn@4.X","resolved":"https://registry.npmjs.org/acorn/-/acorn-4.0.13.tgz"},"css":{"version":"2.2.1","from":"css@2.X","resolved":"https://registry.npmjs.org/css/-/css-2.2.1.tgz","dependencies":{"source-map":{"version":"0.1.43","from":"source-map@^0.1.38","resolved":"https://registry.npmjs.org/source-map/-/source-map-0.1.43.tgz"},"source-map-resolve":{"version":"0.3.1","from":"source-map-resolve@^0.3.0","resolved":"https://registry.npmjs.org/source-map-resolve/-/source-map-resolve-0.3.1.tgz","dependencies":{"atob":{"version":"1.1.3","from":"atob@~1.1.0","resolved":"https://registry.npmjs.org/atob/-/atob-1.1.3.tgz"},"resolve-url":{"version":"0.2.1","from":"resolve-url@~0.2.1","resolved":"https://registry.npmjs.org/resolve-url/-/resolve-url-0.2.1.tgz"},"source-map-url":{"version":"0.3.0","from":"source-map-url@~0.3.0","resolved":"https://registry.npmjs.org/source-map-url/-/source-map-url-0.3.0.tgz"}}},"urix":{"version":"0.1.0","from":"urix@^0.1.0","resolved":"https://registry.npmjs.org/urix/-/urix-0.1.0.tgz"}}},"vinyl":{"version":"1.2.0","from":"vinyl@1.X","resolved":"https://registry.npmjs.org/vinyl/-/vinyl-1.2.0.tgz","dependencies":{"clone":{"version":"1.0.2","from":"clone@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/clone/-/clone-1.0.2.tgz"},"clone-stats":{"version":"0.0.1","from":"clone-stats@>=0.0.1 <0.0.2","resolved":"https://registry.npmjs.org/clone-stats/-/clone-stats-0.0.1.tgz"}}},"strip-bom-string":{"version":"1.0.0","from":"strip-bom-string@1.X","resolved":"https://registry.npmjs.org/strip-bom-string/-/strip-bom-string-1.0.0.tgz"}}},"gulp-sprockets":{"version":"0.1.1","from":"gulp-sprockets@>=0.1.1 <0.2.0","resolved":"https://registry.npmjs.org/gulp-sprockets/-/gulp-sprockets-0.1.1.tgz","dependencies":{"babel-polyfill":{"version":"6.20.0","from":"babel-polyfill@>=6.2.0 <7.0.0","resolved":"https://registry.npmjs.org/babel-polyfill/-/babel-polyfill-6.20.0.tgz","dependencies":{"babel-runtime":{"version":"6.20.0","from":"babel-runtime@>=6.20.0 <7.0.0","resolved":"https://registry.npmjs.org/babel-runtime/-/babel-runtime-6.20.0.tgz"},"core-js":{"version":"2.4.1","from":"core-js@>=2.4.0 <3.0.0","resolved":"https://registry.npmjs.org/core-js/-/core-js-2.4.1.tgz"},"regenerator-runtime":{"version":"0.10.1","from":"regenerator-runtime@>=0.10.0 <0.11.0","resolved":"https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.10.1.tgz"}}},"coffee-script":{"version":"1.12.2","from":"coffee-script@>=1.10.0 <2.0.0","resolved":"https://registry.npmjs.org/coffee-script/-/coffee-script-1.12.2.tgz"},"escodegen":{"version":"1.8.1","from":"escodegen@>=1.7.0 <2.0.0","resolved":"https://registry.npmjs.org/escodegen/-/escodegen-1.8.1.tgz","dependencies":{"source-map":{"version":"0.2.0","from":"source-map@>=0.2.0 <0.3.0","resolved":"https://registry.npmjs.org/source-map/-/source-map-0.2.0.tgz"},"estraverse":{"version":"1.9.3","from":"estraverse@>=1.9.1 <2.0.0","resolved":"https://registry.npmjs.org/estraverse/-/estraverse-1.9.3.tgz"},"esutils":{"version":"2.0.2","from":"esutils@>=2.0.2 <3.0.0","resolved":"https://registry.npmjs.org/esutils/-/esutils-2.0.2.tgz"},"optionator":{"version":"0.8.2","from":"optionator@>=0.8.1 <0.9.0","resolved":"https://registry.npmjs.org/optionator/-/optionator-0.8.2.tgz","dependencies":{"deep-is":{"version":"0.1.3","from":"deep-is@>=0.1.3 <0.2.0","resolved":"https://registry.npmjs.org/deep-is/-/deep-is-0.1.3.tgz"},"fast-levenshtein":{"version":"2.0.6","from":"fast-levenshtein@>=2.0.4 <2.1.0","resolved":"https://registry.npmjs.org/fast-levenshtein/-/fast-levenshtein-2.0.6.tgz"},"levn":{"version":"0.3.0","from":"levn@>=0.3.0 <0.4.0","resolved":"https://registry.npmjs.org/levn/-/levn-0.3.0.tgz"},"prelude-ls":{"version":"1.1.2","from":"prelude-ls@>=1.1.2 <1.2.0","resolved":"https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.1.2.tgz"},"type-check":{"version":"0.3.2","from":"type-check@>=0.3.2 <0.4.0","resolved":"https://registry.npmjs.org/type-check/-/type-check-0.3.2.tgz"},"wordwrap":{"version":"1.0.0","from":"wordwrap@>=1.0.0 <1.1.0","resolved":"https://registry.npmjs.org/wordwrap/-/wordwrap-1.0.0.tgz"}}}}},"esprima":{"version":"2.7.3","from":"esprima@>=2.7.0 <3.0.0","resolved":"https://registry.npmjs.org/esprima/-/esprima-2.7.3.tgz"},"fs-extra":{"version":"0.24.0","from":"fs-extra@>=0.24.0 <0.25.0","resolved":"https://registry.npmjs.org/fs-extra/-/fs-extra-0.24.0.tgz","dependencies":{"jsonfile":{"version":"2.4.0","from":"jsonfile@>=2.1.0 <3.0.0","resolved":"https://registry.npmjs.org/jsonfile/-/jsonfile-2.4.0.tgz"}}},"lodash":{"version":"3.10.1","from":"lodash@>=3.10.1 <4.0.0","resolved":"https://registry.npmjs.org/lodash/-/lodash-3.10.1.tgz"},"vinyl":{"version":"1.2.0","from":"vinyl@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/vinyl/-/vinyl-1.2.0.tgz"},"node-sass":{"version":"3.13.1","from":"node-sass@>=3.3.3 <4.0.0","resolved":"https://registry.npmjs.org/node-sass/-/node-sass-3.13.1.tgz","dependencies":{"async-foreach":{"version":"0.1.3","from":"async-foreach@>=0.1.3 <0.2.0","resolved":"https://registry.npmjs.org/async-foreach/-/async-foreach-0.1.3.tgz"},"cross-spawn":{"version":"3.0.1","from":"cross-spawn@>=3.0.0 <4.0.0","resolved":"https://registry.npmjs.org/cross-spawn/-/cross-spawn-3.0.1.tgz","dependencies":{"lru-cache":{"version":"4.0.2","from":"lru-cache@>=4.0.1 <5.0.0","resolved":"https://registry.npmjs.org/lru-cache/-/lru-cache-4.0.2.tgz","dependencies":{"pseudomap":{"version":"1.0.2","from":"pseudomap@>=1.0.1 <2.0.0","resolved":"https://registry.npmjs.org/pseudomap/-/pseudomap-1.0.2.tgz"},"yallist":{"version":"2.0.0","from":"yallist@>=2.0.0 <3.0.0","resolved":"https://registry.npmjs.org/yallist/-/yallist-2.0.0.tgz"}}},"which":{"version":"1.2.12","from":"which@>=1.2.12 <2.0.0","resolved":"https://registry.npmjs.org/which/-/which-1.2.12.tgz","dependencies":{"isexe":{"version":"1.1.2","from":"isexe@>=1.1.1 <2.0.0","resolved":"https://registry.npmjs.org/isexe/-/isexe-1.1.2.tgz"}}}}},"get-stdin":{"version":"4.0.1","from":"get-stdin@>=4.0.1 <5.0.0","resolved":"https://registry.npmjs.org/get-stdin/-/get-stdin-4.0.1.tgz"},"in-publish":{"version":"2.0.0","from":"in-publish@>=2.0.0 <3.0.0","resolved":"https://registry.npmjs.org/in-publish/-/in-publish-2.0.0.tgz"},"lodash.clonedeep":{"version":"4.5.0","from":"lodash.clonedeep@>=4.3.2 <5.0.0","resolved":"https://registry.npmjs.org/lodash.clonedeep/-/lodash.clonedeep-4.5.0.tgz"},"meow":{"version":"3.7.0","from":"meow@>=3.7.0 <4.0.0","resolved":"https://registry.npmjs.org/meow/-/meow-3.7.0.tgz","dependencies":{"camelcase-keys":{"version":"2.1.0","from":"camelcase-keys@>=2.0.0 <3.0.0","resolved":"https://registry.npmjs.org/camelcase-keys/-/camelcase-keys-2.1.0.tgz","dependencies":{"camelcase":{"version":"2.1.1","from":"camelcase@>=2.0.0 <3.0.0","resolved":"https://registry.npmjs.org/camelcase/-/camelcase-2.1.1.tgz"}}},"decamelize":{"version":"1.2.0","from":"decamelize@>=1.1.2 <2.0.0","resolved":"https://registry.npmjs.org/decamelize/-/decamelize-1.2.0.tgz"},"loud-rejection":{"version":"1.6.0","from":"loud-rejection@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/loud-rejection/-/loud-rejection-1.6.0.tgz","dependencies":{"currently-unhandled":{"version":"0.4.1","from":"currently-unhandled@>=0.4.1 <0.5.0","resolved":"https://registry.npmjs.org/currently-unhandled/-/currently-unhandled-0.4.1.tgz","dependencies":{"array-find-index":{"version":"1.0.2","from":"array-find-index@>=1.0.1 <2.0.0","resolved":"https://registry.npmjs.org/array-find-index/-/array-find-index-1.0.2.tgz"}}},"signal-exit":{"version":"3.0.2","from":"signal-exit@>=3.0.0 <4.0.0","resolved":"https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.2.tgz"}}},"map-obj":{"version":"1.0.1","from":"map-obj@>=1.0.1 <2.0.0","resolved":"https://registry.npmjs.org/map-obj/-/map-obj-1.0.1.tgz"},"normalize-package-data":{"version":"2.3.5","from":"normalize-package-data@>=2.3.4 <3.0.0","resolved":"https://registry.npmjs.org/normalize-package-data/-/normalize-package-data-2.3.5.tgz","dependencies":{"hosted-git-info":{"version":"2.1.5","from":"hosted-git-info@>=2.1.4 <3.0.0","resolved":"https://registry.npmjs.org/hosted-git-info/-/hosted-git-info-2.1.5.tgz"},"is-builtin-module":{"version":"1.0.0","from":"is-builtin-module@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/is-builtin-module/-/is-builtin-module-1.0.0.tgz","dependencies":{"builtin-modules":{"version":"1.1.1","from":"builtin-modules@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/builtin-modules/-/builtin-modules-1.1.1.tgz"}}},"validate-npm-package-license":{"version":"3.0.1","from":"validate-npm-package-license@>=3.0.1 <4.0.0","resolved":"https://registry.npmjs.org/validate-npm-package-license/-/validate-npm-package-license-3.0.1.tgz","dependencies":{"spdx-correct":{"version":"1.0.2","from":"spdx-correct@>=1.0.0 <1.1.0","resolved":"https://registry.npmjs.org/spdx-correct/-/spdx-correct-1.0.2.tgz","dependencies":{"spdx-license-ids":{"version":"1.2.2","from":"spdx-license-ids@>=1.0.2 <2.0.0","resolved":"https://registry.npmjs.org/spdx-license-ids/-/spdx-license-ids-1.2.2.tgz"}}},"spdx-expression-parse":{"version":"1.0.4","from":"spdx-expression-parse@>=1.0.0 <1.1.0","resolved":"https://registry.npmjs.org/spdx-expression-parse/-/spdx-expression-parse-1.0.4.tgz"}}}}},"read-pkg-up":{"version":"1.0.1","from":"read-pkg-up@>=1.0.1 <2.0.0","resolved":"https://registry.npmjs.org/read-pkg-up/-/read-pkg-up-1.0.1.tgz","dependencies":{"find-up":{"version":"1.1.2","from":"find-up@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/find-up/-/find-up-1.1.2.tgz","dependencies":{"path-exists":{"version":"2.1.0","from":"path-exists@>=2.0.0 <3.0.0","resolved":"https://registry.npmjs.org/path-exists/-/path-exists-2.1.0.tgz"}}},"read-pkg":{"version":"1.1.0","from":"read-pkg@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/read-pkg/-/read-pkg-1.1.0.tgz","dependencies":{"load-json-file":{"version":"1.1.0","from":"load-json-file@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/load-json-file/-/load-json-file-1.1.0.tgz","dependencies":{"strip-bom":{"version":"2.0.0","from":"strip-bom@>=2.0.0 <3.0.0","resolved":"https://registry.npmjs.org/strip-bom/-/strip-bom-2.0.0.tgz"},"parse-json":{"version":"2.2.0","from":"parse-json@>=2.2.0 <3.0.0","resolved":"https://registry.npmjs.org/parse-json/-/parse-json-2.2.0.tgz","dependencies":{"error-ex":{"version":"1.3.0","from":"error-ex@>=1.2.0 <2.0.0","resolved":"https://registry.npmjs.org/error-ex/-/error-ex-1.3.0.tgz","dependencies":{"is-arrayish":{"version":"0.2.1","from":"is-arrayish@>=0.2.1 <0.3.0","resolved":"https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.2.1.tgz"}}}}}}},"path-type":{"version":"1.1.0","from":"path-type@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/path-type/-/path-type-1.1.0.tgz"}}}}},"redent":{"version":"1.0.0","from":"redent@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/redent/-/redent-1.0.0.tgz","dependencies":{"indent-string":{"version":"2.1.0","from":"indent-string@>=2.1.0 <3.0.0","resolved":"https://registry.npmjs.org/indent-string/-/indent-string-2.1.0.tgz","dependencies":{"repeating":{"version":"2.0.1","from":"repeating@>=2.0.0 <3.0.0","resolved":"https://registry.npmjs.org/repeating/-/repeating-2.0.1.tgz","dependencies":{"is-finite":{"version":"1.0.2","from":"is-finite@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/is-finite/-/is-finite-1.0.2.tgz"}}}}},"strip-indent":{"version":"1.0.1","from":"strip-indent@>=1.0.1 <2.0.0","resolved":"https://registry.npmjs.org/strip-indent/-/strip-indent-1.0.1.tgz"}}},"trim-newlines":{"version":"1.0.0","from":"trim-newlines@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/trim-newlines/-/trim-newlines-1.0.0.tgz"}}},"nan":{"version":"2.5.0","from":"nan@>=2.3.2 <3.0.0","resolved":"https://registry.npmjs.org/nan/-/nan-2.5.0.tgz"},"node-gyp":{"version":"3.5.0","from":"node-gyp@>=3.3.1 <4.0.0","resolved":"https://registry.npmjs.org/node-gyp/-/node-gyp-3.5.0.tgz","dependencies":{"fstream":{"version":"1.0.10","from":"fstream@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/fstream/-/fstream-1.0.10.tgz"},"nopt":{"version":"3.0.6","from":"nopt@>=2.0.0 <3.0.0||>=3.0.0 <4.0.0","resolved":"https://registry.npmjs.org/nopt/-/nopt-3.0.6.tgz"},"osenv":{"version":"0.1.4","from":"osenv@>=0.0.0 <1.0.0","resolved":"https://registry.npmjs.org/osenv/-/osenv-0.1.4.tgz","dependencies":{"os-tmpdir":{"version":"1.0.2","from":"os-tmpdir@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/os-tmpdir/-/os-tmpdir-1.0.2.tgz"}}},"tar":{"version":"2.2.1","from":"tar@>=2.0.0 <3.0.0","resolved":"https://registry.npmjs.org/tar/-/tar-2.2.1.tgz","dependencies":{"block-stream":{"version":"0.0.9","from":"block-stream@*","resolved":"https://registry.npmjs.org/block-stream/-/block-stream-0.0.9.tgz"}}}}},"gaze":{"version":"1.1.2","from":"gaze@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/gaze/-/gaze-1.1.2.tgz","dependencies":{"globule":{"version":"1.1.0","from":"globule@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/globule/-/globule-1.1.0.tgz","dependencies":{"lodash":{"version":"4.16.6","from":"lodash@>=4.16.4 <4.17.0","resolved":"https://registry.npmjs.org/lodash/-/lodash-4.16.6.tgz"}}}}},"npmlog":{"version":"4.0.2","from":"npmlog@>=4.0.0 <5.0.0","resolved":"https://registry.npmjs.org/npmlog/-/npmlog-4.0.2.tgz","dependencies":{"are-we-there-yet":{"version":"1.1.2","from":"are-we-there-yet@>=1.1.2 <1.2.0","resolved":"https://registry.npmjs.org/are-we-there-yet/-/are-we-there-yet-1.1.2.tgz","dependencies":{"delegates":{"version":"1.0.0","from":"delegates@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/delegates/-/delegates-1.0.0.tgz"}}},"console-control-strings":{"version":"1.1.0","from":"console-control-strings@>=1.1.0 <1.2.0","resolved":"https://registry.npmjs.org/console-control-strings/-/console-control-strings-1.1.0.tgz"},"gauge":{"version":"2.7.2","from":"gauge@>=2.7.1 <2.8.0","resolved":"https://registry.npmjs.org/gauge/-/gauge-2.7.2.tgz","dependencies":{"aproba":{"version":"1.0.4","from":"aproba@>=1.0.3 <2.0.0","resolved":"https://registry.npmjs.org/aproba/-/aproba-1.0.4.tgz"},"supports-color":{"version":"0.2.0","from":"supports-color@>=0.2.0 <0.3.0","resolved":"https://registry.npmjs.org/supports-color/-/supports-color-0.2.0.tgz"},"has-unicode":{"version":"2.0.1","from":"has-unicode@>=2.0.0 <3.0.0","resolved":"https://registry.npmjs.org/has-unicode/-/has-unicode-2.0.1.tgz"},"string-width":{"version":"1.0.2","from":"string-width@>=1.0.1 <2.0.0","resolved":"https://registry.npmjs.org/string-width/-/string-width-1.0.2.tgz","dependencies":{"code-point-at":{"version":"1.1.0","from":"code-point-at@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/code-point-at/-/code-point-at-1.1.0.tgz"},"is-fullwidth-code-point":{"version":"1.0.0","from":"is-fullwidth-code-point@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-1.0.0.tgz","dependencies":{"number-is-nan":{"version":"1.0.1","from":"number-is-nan@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/number-is-nan/-/number-is-nan-1.0.1.tgz"}}}}},"wide-align":{"version":"1.1.0","from":"wide-align@>=1.1.0 <2.0.0","resolved":"https://registry.npmjs.org/wide-align/-/wide-align-1.1.0.tgz"}}},"set-blocking":{"version":"2.0.0","from":"set-blocking@>=2.0.0 <2.1.0","resolved":"https://registry.npmjs.org/set-blocking/-/set-blocking-2.0.0.tgz"}}},"sass-graph":{"version":"2.1.2","from":"sass-graph@>=2.1.1 <3.0.0","resolved":"https://registry.npmjs.org/sass-graph/-/sass-graph-2.1.2.tgz","dependencies":{"yargs":{"version":"4.8.1","from":"yargs@>=4.7.1 <5.0.0","resolved":"https://registry.npmjs.org/yargs/-/yargs-4.8.1.tgz","dependencies":{"cliui":{"version":"3.2.0","from":"cliui@>=3.2.0 <4.0.0","resolved":"https://registry.npmjs.org/cliui/-/cliui-3.2.0.tgz","dependencies":{"wrap-ansi":{"version":"2.1.0","from":"wrap-ansi@>=2.0.0 <3.0.0","resolved":"https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-2.1.0.tgz"}}},"get-caller-file":{"version":"1.0.2","from":"get-caller-file@>=1.0.1 <2.0.0","resolved":"https://registry.npmjs.org/get-caller-file/-/get-caller-file-1.0.2.tgz"},"os-locale":{"version":"1.4.0","from":"os-locale@>=1.4.0 <2.0.0","resolved":"https://registry.npmjs.org/os-locale/-/os-locale-1.4.0.tgz","dependencies":{"lcid":{"version":"1.0.0","from":"lcid@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/lcid/-/lcid-1.0.0.tgz","dependencies":{"invert-kv":{"version":"1.0.0","from":"invert-kv@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/invert-kv/-/invert-kv-1.0.0.tgz"}}}}},"require-directory":{"version":"2.1.1","from":"require-directory@>=2.1.1 <3.0.0","resolved":"https://registry.npmjs.org/require-directory/-/require-directory-2.1.1.tgz"},"require-main-filename":{"version":"1.0.1","from":"require-main-filename@>=1.0.1 <2.0.0","resolved":"https://registry.npmjs.org/require-main-filename/-/require-main-filename-1.0.1.tgz"},"which-module":{"version":"1.0.0","from":"which-module@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/which-module/-/which-module-1.0.0.tgz"},"window-size":{"version":"0.2.0","from":"window-size@>=0.2.0 <0.3.0","resolved":"https://registry.npmjs.org/window-size/-/window-size-0.2.0.tgz"},"y18n":{"version":"3.2.1","from":"y18n@>=3.2.1 <4.0.0","resolved":"https://registry.npmjs.org/y18n/-/y18n-3.2.1.tgz"},"yargs-parser":{"version":"2.4.1","from":"yargs-parser@>=2.4.1 <3.0.0","resolved":"https://registry.npmjs.org/yargs-parser/-/yargs-parser-2.4.1.tgz","dependencies":{"camelcase":{"version":"3.0.0","from":"camelcase@>=3.0.0 <4.0.0","resolved":"https://registry.npmjs.org/camelcase/-/camelcase-3.0.0.tgz"}}}}}}}}},"postcss":{"version":"5.2.10","from":"postcss@>=5.0.10 <6.0.0","resolved":"https://registry.npmjs.org/postcss/-/postcss-5.2.10.tgz","dependencies":{"js-base64":{"version":"2.1.9","from":"js-base64@>=2.1.9 <3.0.0","resolved":"https://registry.npmjs.org/js-base64/-/js-base64-2.1.9.tgz"},"supports-color":{"version":"3.1.2","from":"supports-color@>=3.1.2 <4.0.0","resolved":"https://registry.npmjs.org/supports-color/-/supports-color-3.1.2.tgz","dependencies":{"has-flag":{"version":"1.0.0","from":"has-flag@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/has-flag/-/has-flag-1.0.0.tgz"}}}}},"postcss-scss":{"version":"0.1.9","from":"postcss-scss@>=0.1.3 <0.2.0","resolved":"https://registry.npmjs.org/postcss-scss/-/postcss-scss-0.1.9.tgz"},"vinyl-file":{"version":"1.3.0","from":"vinyl-file@>=1.2.1 <2.0.0","resolved":"https://registry.npmjs.org/vinyl-file/-/vinyl-file-1.3.0.tgz","dependencies":{"strip-bom-stream":{"version":"1.0.0","from":"strip-bom-stream@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/strip-bom-stream/-/strip-bom-stream-1.0.0.tgz","dependencies":{"strip-bom":{"version":"2.0.0","from":"strip-bom@>=2.0.0 <3.0.0","resolved":"https://registry.npmjs.org/strip-bom/-/strip-bom-2.0.0.tgz"}}},"strip-bom":{"version":"2.0.0","from":"strip-bom@>=2.0.0 <3.0.0","resolved":"https://registry.npmjs.org/strip-bom/-/strip-bom-2.0.0.tgz"},"vinyl":{"version":"1.2.0","from":"vinyl@>=1.1.0 <2.0.0","resolved":"https://registry.npmjs.org/vinyl/-/vinyl-1.2.0.tgz"}}}}},"gutil":{"version":"1.6.4","from":"gutil@>=1.6.4 <2.0.0","resolved":"https://registry.npmjs.org/gutil/-/gutil-1.6.4.tgz","dependencies":{"sliced":{"version":"1.0.1","from":"sliced@*","resolved":"https://registry.npmjs.org/sliced/-/sliced-1.0.1.tgz"}}},"jshint":{"version":"2.9.5","from":"jshint@2.9.5","resolved":"https://registry.npmjs.org/jshint/-/jshint-2.9.5.tgz","dependencies":{"cli":{"version":"1.0.1","from":"cli@>=1.0.0 <1.1.0","resolved":"https://registry.npmjs.org/cli/-/cli-1.0.1.tgz"},"console-browserify":{"version":"1.1.0","from":"console-browserify@>=1.1.0 <1.2.0","resolved":"https://registry.npmjs.org/console-browserify/-/console-browserify-1.1.0.tgz","dependencies":{"date-now":{"version":"0.1.4","from":"date-now@>=0.1.4 <0.2.0","resolved":"https://registry.npmjs.org/date-now/-/date-now-0.1.4.tgz"}}},"exit":{"version":"0.1.2","from":"exit@>=0.1.0 <0.2.0","resolved":"https://registry.npmjs.org/exit/-/exit-0.1.2.tgz"},"htmlparser2":{"version":"3.8.3","from":"htmlparser2@>=3.8.0 <3.9.0","resolved":"https://registry.npmjs.org/htmlparser2/-/htmlparser2-3.8.3.tgz","dependencies":{"domelementtype":{"version":"1.3.0","from":"domelementtype@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/domelementtype/-/domelementtype-1.3.0.tgz"},"domhandler":{"version":"2.3.0","from":"domhandler@>=2.3.0 <2.4.0","resolved":"https://registry.npmjs.org/domhandler/-/domhandler-2.3.0.tgz"},"domutils":{"version":"1.5.1","from":"domutils@>=1.5.0 <1.6.0","resolved":"https://registry.npmjs.org/domutils/-/domutils-1.5.1.tgz","dependencies":{"dom-serializer":{"version":"0.1.0","from":"dom-serializer@>=0.0.0 <1.0.0","resolved":"https://registry.npmjs.org/dom-serializer/-/dom-serializer-0.1.0.tgz","dependencies":{"domelementtype":{"version":"1.1.3","from":"domelementtype@>=1.1.1 <1.2.0","resolved":"https://registry.npmjs.org/domelementtype/-/domelementtype-1.1.3.tgz"},"entities":{"version":"1.1.1","from":"entities@>=1.1.1 <1.2.0","resolved":"https://registry.npmjs.org/entities/-/entities-1.1.1.tgz"}}}}},"entities":{"version":"1.0.0","from":"entities@>=1.0.0 <1.1.0","resolved":"https://registry.npmjs.org/entities/-/entities-1.0.0.tgz"},"readable-stream":{"version":"1.1.14","from":"readable-stream@>=1.1.0 <1.2.0","resolved":"https://registry.npmjs.org/readable-stream/-/readable-stream-1.1.14.tgz"}}},"lodash":{"version":"3.7.0","from":"lodash@>=3.7.0 <3.8.0","resolved":"https://registry.npmjs.org/lodash/-/lodash-3.7.0.tgz"},"shelljs":{"version":"0.3.0","from":"shelljs@>=0.3.0 <0.4.0","resolved":"https://registry.npmjs.org/shelljs/-/shelljs-0.3.0.tgz"},"strip-json-comments":{"version":"1.0.4","from":"strip-json-comments@>=1.0.0 <1.1.0","resolved":"https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-1.0.4.tgz"}}},"main-bower-files":{"version":"2.13.1","from":"main-bower-files@>=2.13.0 <3.0.0","resolved":"https://registry.npmjs.org/main-bower-files/-/main-bower-files-2.13.1.tgz","dependencies":{"extend":{"version":"2.0.1","from":"extend@>=2.0.1 <3.0.0","resolved":"https://registry.npmjs.org/extend/-/extend-2.0.1.tgz"},"globby":{"version":"2.1.0","from":"globby@>=2.0.0 <3.0.0","resolved":"https://registry.npmjs.org/globby/-/globby-2.1.0.tgz","dependencies":{"async":{"version":"1.5.2","from":"async@>=1.2.1 <2.0.0","resolved":"https://registry.npmjs.org/async/-/async-1.5.2.tgz"},"glob":{"version":"5.0.15","from":"glob@>=5.0.3 <6.0.0","resolved":"https://registry.npmjs.org/glob/-/glob-5.0.15.tgz"},"object-assign":{"version":"3.0.0","from":"object-assign@>=3.0.0 <4.0.0","resolved":"https://registry.npmjs.org/object-assign/-/object-assign-3.0.0.tgz"}}},"path-exists":{"version":"1.0.0","from":"path-exists@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/path-exists/-/path-exists-1.0.0.tgz"},"vinyl-fs":{"version":"2.4.4","from":"vinyl-fs@>=2.4.3 <3.0.0","resolved":"https://registry.npmjs.org/vinyl-fs/-/vinyl-fs-2.4.4.tgz","dependencies":{"duplexify":{"version":"3.5.0","from":"duplexify@>=3.2.0 <4.0.0","resolved":"https://registry.npmjs.org/duplexify/-/duplexify-3.5.0.tgz","dependencies":{"end-of-stream":{"version":"1.0.0","from":"end-of-stream@1.0.0","resolved":"https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.0.0.tgz","dependencies":{"once":{"version":"1.3.3","from":"once@>=1.3.0 <1.4.0","resolved":"https://registry.npmjs.org/once/-/once-1.3.3.tgz"}}},"stream-shift":{"version":"1.0.0","from":"stream-shift@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/stream-shift/-/stream-shift-1.0.0.tgz"}}},"is-valid-glob":{"version":"0.3.0","from":"is-valid-glob@>=0.3.0 <0.4.0","resolved":"https://registry.npmjs.org/is-valid-glob/-/is-valid-glob-0.3.0.tgz"},"lodash.isequal":{"version":"4.5.0","from":"lodash.isequal@>=4.0.0 <5.0.0","resolved":"https://registry.npmjs.org/lodash.isequal/-/lodash.isequal-4.5.0.tgz"},"glob-stream":{"version":"5.3.5","from":"glob-stream@>=5.3.2 <6.0.0","resolved":"https://registry.npmjs.org/glob-stream/-/glob-stream-5.3.5.tgz","dependencies":{"glob-parent":{"version":"3.1.0","from":"glob-parent@>=3.0.0 <4.0.0","resolved":"https://registry.npmjs.org/glob-parent/-/glob-parent-3.1.0.tgz","dependencies":{"is-glob":{"version":"3.1.0","from":"is-glob@>=3.1.0 <4.0.0","resolved":"https://registry.npmjs.org/is-glob/-/is-glob-3.1.0.tgz","dependencies":{"is-extglob":{"version":"2.1.1","from":"is-extglob@>=2.1.0 <3.0.0","resolved":"https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz"}}},"path-dirname":{"version":"1.0.2","from":"path-dirname@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/path-dirname/-/path-dirname-1.0.2.tgz"}}},"extend":{"version":"3.0.0","from":"extend@^3.0.0","resolved":"https://registry.npmjs.org/extend/-/extend-3.0.0.tgz"},"through2":{"version":"0.6.5","from":"through2@>=0.6.0 <0.7.0","resolved":"https://registry.npmjs.org/through2/-/through2-0.6.5.tgz","dependencies":{"readable-stream":{"version":"1.0.34","from":"readable-stream@>=1.0.33-1 <1.1.0-0","resolved":"https://registry.npmjs.org/readable-stream/-/readable-stream-1.0.34.tgz"}}},"ordered-read-streams":{"version":"0.3.0","from":"ordered-read-streams@>=0.3.0 <0.4.0","resolved":"https://registry.npmjs.org/ordered-read-streams/-/ordered-read-streams-0.3.0.tgz","dependencies":{"is-stream":{"version":"1.1.0","from":"is-stream@>=1.0.1 <2.0.0","resolved":"https://registry.npmjs.org/is-stream/-/is-stream-1.1.0.tgz"}}},"unique-stream":{"version":"2.2.1","from":"unique-stream@>=2.0.2 <3.0.0","resolved":"https://registry.npmjs.org/unique-stream/-/unique-stream-2.2.1.tgz"},"to-absolute-glob":{"version":"0.1.1","from":"to-absolute-glob@>=0.1.1 <0.2.0","resolved":"https://registry.npmjs.org/to-absolute-glob/-/to-absolute-glob-0.1.1.tgz","dependencies":{"extend-shallow":{"version":"2.0.1","from":"extend-shallow@>=2.0.1 <3.0.0","resolved":"https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz"}}}}},"gulp-sourcemaps":{"version":"1.6.0","from":"gulp-sourcemaps@1.6.0","resolved":"https://registry.npmjs.org/gulp-sourcemaps/-/gulp-sourcemaps-1.6.0.tgz"},"strip-bom":{"version":"2.0.0","from":"strip-bom@>=2.0.0 <3.0.0","resolved":"https://registry.npmjs.org/strip-bom/-/strip-bom-2.0.0.tgz"},"vinyl":{"version":"1.2.0","from":"vinyl@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/vinyl/-/vinyl-1.2.0.tgz"},"object-assign":{"version":"4.1.0","from":"object-assign@^4.0.0","resolved":"https://registry.npmjs.org/object-assign/-/object-assign-4.1.0.tgz"},"merge-stream":{"version":"1.0.1","from":"merge-stream@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/merge-stream/-/merge-stream-1.0.1.tgz"},"through2-filter":{"version":"2.0.0","from":"through2-filter@>=2.0.0 <3.0.0","resolved":"https://registry.npmjs.org/through2-filter/-/through2-filter-2.0.0.tgz"},"vali-date":{"version":"1.0.0","from":"vali-date@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/vali-date/-/vali-date-1.0.0.tgz"}}},"multimatch":{"version":"2.1.0","from":"multimatch@>=2.0.0 <3.0.0","resolved":"https://registry.npmjs.org/multimatch/-/multimatch-2.1.0.tgz"}}},"md5-file":{"version":"2.0.7","from":"md5-file@>=2.0.4 <3.0.0","resolved":"https://registry.npmjs.org/md5-file/-/md5-file-2.0.7.tgz"},"minimist":{"version":"1.2.0","from":"minimist@>=1.2.0 <2.0.0","resolved":"https://registry.npmjs.org/minimist/-/minimist-1.2.0.tgz"},"pass":{"version":"0.2.0","from":"pass@>=0.2.0 <0.3.0","resolved":"https://registry.npmjs.org/pass/-/pass-0.2.0.tgz"},"request":{"version":"2.81.0","from":"request@2.81.0","resolved":"https://registry.npmjs.org/request/-/request-2.81.0.tgz","dependencies":{"aws-sign2":{"version":"0.6.0","from":"aws-sign2@>=0.6.0 <0.7.0","resolved":"https://registry.npmjs.org/aws-sign2/-/aws-sign2-0.6.0.tgz"},"aws4":{"version":"1.6.0","from":"aws4@>=1.2.1 <2.0.0","resolved":"https://registry.npmjs.org/aws4/-/aws4-1.6.0.tgz"},"combined-stream":{"version":"1.0.5","from":"combined-stream@>=1.0.5 <1.1.0","resolved":"https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.5.tgz","dependencies":{"delayed-stream":{"version":"1.0.0","from":"delayed-stream@>=1.0.0 <1.1.0","resolved":"https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz"}}},"extend":{"version":"3.0.0","from":"extend@>=3.0.0 <4.0.0","resolved":"https://registry.npmjs.org/extend/-/extend-3.0.0.tgz"},"forever-agent":{"version":"0.6.1","from":"forever-agent@>=0.6.1 <0.7.0","resolved":"https://registry.npmjs.org/forever-agent/-/forever-agent-0.6.1.tgz"},"form-data":{"version":"2.1.4","from":"form-data@>=2.1.1 <2.2.0","resolved":"https://registry.npmjs.org/form-data/-/form-data-2.1.4.tgz","dependencies":{"asynckit":{"version":"0.4.0","from":"asynckit@>=0.4.0 <0.5.0","resolved":"https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz"}}},"hawk":{"version":"3.1.3","from":"hawk@>=3.1.3 <3.2.0","resolved":"https://registry.npmjs.org/hawk/-/hawk-3.1.3.tgz","dependencies":{"boom":{"version":"2.10.1","from":"boom@>=2.0.0 <3.0.0","resolved":"https://registry.npmjs.org/boom/-/boom-2.10.1.tgz"},"cryptiles":{"version":"2.0.5","from":"cryptiles@>=2.0.0 <3.0.0","resolved":"https://registry.npmjs.org/cryptiles/-/cryptiles-2.0.5.tgz"},"hoek":{"version":"2.16.3","from":"hoek@>=2.0.0 <3.0.0","resolved":"https://registry.npmjs.org/hoek/-/hoek-2.16.3.tgz"},"sntp":{"version":"1.0.9","from":"sntp@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/sntp/-/sntp-1.0.9.tgz"}}},"http-signature":{"version":"1.1.1","from":"http-signature@>=1.1.0 <1.2.0","resolved":"https://registry.npmjs.org/http-signature/-/http-signature-1.1.1.tgz","dependencies":{"assert-plus":{"version":"0.2.0","from":"assert-plus@>=0.2.0 <0.3.0","resolved":"https://registry.npmjs.org/assert-plus/-/assert-plus-0.2.0.tgz"},"jsprim":{"version":"1.4.0","from":"jsprim@>=1.2.2 <2.0.0","resolved":"https://registry.npmjs.org/jsprim/-/jsprim-1.4.0.tgz","dependencies":{"extsprintf":{"version":"1.0.2","from":"extsprintf@1.0.2","resolved":"https://registry.npmjs.org/extsprintf/-/extsprintf-1.0.2.tgz"},"json-schema":{"version":"0.2.3","from":"json-schema@0.2.3","resolved":"https://registry.npmjs.org/json-schema/-/json-schema-0.2.3.tgz"},"assert-plus":{"version":"1.0.0","from":"assert-plus@1.0.0","resolved":"https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz"},"verror":{"version":"1.3.6","from":"verror@1.3.6","resolved":"https://registry.npmjs.org/verror/-/verror-1.3.6.tgz"}}},"sshpk":{"version":"1.13.1","from":"sshpk@>=1.7.0 <2.0.0","resolved":"https://registry.npmjs.org/sshpk/-/sshpk-1.13.1.tgz","dependencies":{"asn1":{"version":"0.2.3","from":"asn1@>=0.2.3 <0.3.0","resolved":"https://registry.npmjs.org/asn1/-/asn1-0.2.3.tgz"},"bcrypt-pbkdf":{"version":"1.0.1","from":"bcrypt-pbkdf@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/bcrypt-pbkdf/-/bcrypt-pbkdf-1.0.1.tgz"},"dashdash":{"version":"1.14.1","from":"dashdash@>=1.12.0 <2.0.0","resolved":"https://registry.npmjs.org/dashdash/-/dashdash-1.14.1.tgz","dependencies":{"assert-plus":{"version":"1.0.0","from":"assert-plus@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz"}}},"ecc-jsbn":{"version":"0.1.1","from":"ecc-jsbn@>=0.1.1 <0.2.0","resolved":"https://registry.npmjs.org/ecc-jsbn/-/ecc-jsbn-0.1.1.tgz"},"getpass":{"version":"0.1.7","from":"getpass@>=0.1.1 <0.2.0","resolved":"https://registry.npmjs.org/getpass/-/getpass-0.1.7.tgz","dependencies":{"assert-plus":{"version":"1.0.0","from":"assert-plus@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz"}}},"jsbn":{"version":"0.1.1","from":"jsbn@>=0.1.0 <0.2.0","resolved":"https://registry.npmjs.org/jsbn/-/jsbn-0.1.1.tgz"},"assert-plus":{"version":"1.0.0","from":"assert-plus@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz"},"tweetnacl":{"version":"0.14.5","from":"tweetnacl@>=0.14.0 <0.15.0","resolved":"https://registry.npmjs.org/tweetnacl/-/tweetnacl-0.14.5.tgz"}}}}},"is-typedarray":{"version":"1.0.0","from":"is-typedarray@>=1.0.0 <1.1.0","resolved":"https://registry.npmjs.org/is-typedarray/-/is-typedarray-1.0.0.tgz"},"isstream":{"version":"0.1.2","from":"isstream@>=0.1.2 <0.2.0","resolved":"https://registry.npmjs.org/isstream/-/isstream-0.1.2.tgz"},"json-stringify-safe":{"version":"5.0.1","from":"json-stringify-safe@>=5.0.1 <5.1.0","resolved":"https://registry.npmjs.org/json-stringify-safe/-/json-stringify-safe-5.0.1.tgz"},"mime-types":{"version":"2.1.13","from":"mime-types@>=2.1.13 <2.2.0","resolved":"https://registry.npmjs.org/mime-types/-/mime-types-2.1.13.tgz"},"oauth-sign":{"version":"0.8.2","from":"oauth-sign@>=0.8.1 <0.9.0","resolved":"https://registry.npmjs.org/oauth-sign/-/oauth-sign-0.8.2.tgz"},"performance-now":{"version":"0.2.0","from":"performance-now@>=0.2.0 <0.3.0","resolved":"https://registry.npmjs.org/performance-now/-/performance-now-0.2.0.tgz"},"caseless":{"version":"0.12.0","from":"caseless@>=0.12.0 <0.13.0","resolved":"https://registry.npmjs.org/caseless/-/caseless-0.12.0.tgz"},"har-validator":{"version":"4.2.1","from":"har-validator@>=4.2.1 <4.3.0","resolved":"https://registry.npmjs.org/har-validator/-/har-validator-4.2.1.tgz","dependencies":{"ajv":{"version":"4.11.8","from":"ajv@>=4.9.1 <5.0.0","resolved":"https://registry.npmjs.org/ajv/-/ajv-4.11.8.tgz","dependencies":{"co":{"version":"4.6.0","from":"co@>=4.6.0 <5.0.0","resolved":"https://registry.npmjs.org/co/-/co-4.6.0.tgz"},"json-stable-stringify":{"version":"1.0.1","from":"json-stable-stringify@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/json-stable-stringify/-/json-stable-stringify-1.0.1.tgz","dependencies":{"jsonify":{"version":"0.0.0","from":"jsonify@>=0.0.0 <0.1.0","resolved":"https://registry.npmjs.org/jsonify/-/jsonify-0.0.0.tgz"}}}}},"har-schema":{"version":"1.0.5","from":"har-schema@>=1.0.5 <2.0.0","resolved":"https://registry.npmjs.org/har-schema/-/har-schema-1.0.5.tgz"}}},"tunnel-agent":{"version":"0.6.0","from":"tunnel-agent@>=0.6.0 <0.7.0","resolved":"https://registry.npmjs.org/tunnel-agent/-/tunnel-agent-0.6.0.tgz"},"uuid":{"version":"3.1.0","from":"uuid@>=3.0.0 <4.0.0","resolved":"https://registry.npmjs.org/uuid/-/uuid-3.1.0.tgz"},"safe-buffer":{"version":"5.1.1","from":"safe-buffer@>=5.0.1 <6.0.0","resolved":"https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.1.tgz"},"stringstream":{"version":"0.0.5","from":"stringstream@>=0.0.4 <0.1.0","resolved":"https://registry.npmjs.org/stringstream/-/stringstream-0.0.5.tgz"},"tough-cookie":{"version":"2.3.2","from":"tough-cookie@>=2.3.0 <2.4.0","resolved":"https://registry.npmjs.org/tough-cookie/-/tough-cookie-2.3.2.tgz","dependencies":{"punycode":{"version":"1.4.1","from":"punycode@>=1.4.1 <2.0.0","resolved":"https://registry.npmjs.org/punycode/-/punycode-1.4.1.tgz"}}}}},"slack-node":{"version":"0.2.0","from":"slack-node@>=0.2.0 <0.3.0","resolved":"https://registry.npmjs.org/slack-node/-/slack-node-0.2.0.tgz","dependencies":{"requestretry":{"version":"1.12.0","from":"requestretry@>=1.2.2 <2.0.0","resolved":"https://registry.npmjs.org/requestretry/-/requestretry-1.12.0.tgz","dependencies":{"when":{"version":"3.7.7","from":"when@>=3.7.7 <4.0.0","resolved":"https://registry.npmjs.org/when/-/when-3.7.7.tgz"}}}}},"source-map":{"version":"0.5.6","from":"source-map@>=0.5.5 <0.6.0","resolved":"https://registry.npmjs.org/source-map/-/source-map-0.5.6.tgz"},"through":{"version":"2.3.8","from":"through@>=2.3.8 <3.0.0","resolved":"https://registry.npmjs.org/through/-/through-2.3.8.tgz"},"through2":{"version":"2.0.3","from":"through2@>=2.0.1 <3.0.0","resolved":"https://registry.npmjs.org/through2/-/through2-2.0.3.tgz","dependencies":{"xtend":{"version":"4.0.1","from":"xtend@>=4.0.0 <5.0.0","resolved":"https://registry.npmjs.org/xtend/-/xtend-4.0.1.tgz"}}},"touch":{"version":"1.0.0","from":"touch@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/touch/-/touch-1.0.0.tgz","dependencies":{"nopt":{"version":"1.0.10","from":"nopt@>=1.0.10 <1.1.0","resolved":"https://registry.npmjs.org/nopt/-/nopt-1.0.10.tgz","dependencies":{"abbrev":{"version":"1.0.9","from":"abbrev@>=1.0.0 <2.0.0","resolved":"https://registry.npmjs.org/abbrev/-/abbrev-1.0.9.tgz"}}}}},"underscore":{"version":"1.8.3","from":"underscore@>=1.8.3 <2.0.0","resolved":"https://registry.npmjs.org/underscore/-/underscore-1.8.3.tgz"},"vinyl-paths":{"version":"2.1.0","from":"vinyl-paths@>=2.1.0 <3.0.0","resolved":"https://registry.npmjs.org/vinyl-paths/-/vinyl-paths-2.1.0.tgz"},"vinyl-sourcemaps-apply":{"version":"0.2.1","from":"vinyl-sourcemaps-apply@>=0.2.1 <0.3.0","resolved":"https://registry.npmjs.org/vinyl-sourcemaps-apply/-/vinyl-sourcemaps-apply-0.2.1.tgz"}}},"version":"1.7.5"};module.exports=Versions;

},{}],51:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * ComponentLoader Class
 *
 * Instantiates JavaScript Classes when their name is found in the DOM using attribute data-component=""
 *
 */
var ComponentLoader = function () {

	/**
  * Constructor for the ComponentLoader
  * @class
  * @public
  * @param {Object} components - Optional collection of available components: {componentName: classDefinition}
  * @param {Node} context - Optional DOM node to search for components. Defaults to document.
  */
	function ComponentLoader() {
		var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
		var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : document;

		_classCallCheck(this, ComponentLoader);

		this.contextEl = context;
		this.initializedComponents = {};
		this.numberOfInitializedComponents = 0;
		this.components = {};
		this.topics = {};
		this.register(components);
	}

	/**
  * Add component(s) to collection of available components
  * @public
  * @param {Object} components - Collection of components: {componentName: classDefinition}
  */


	_createClass(ComponentLoader, [{
		key: "register",
		value: function register() {
			var _this = this;

			var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

			Object.keys(components).forEach(function (componentName) {
				_this.components[componentName] = components[componentName];
			});
		}

		/**
   * Remove component from collection of available components
   * @public
   * @param {String} componentName - Name of the component to remove
   */

	}, {
		key: "unregister",
		value: function unregister(componentName) {
			delete this.components[componentName];
		}

		/**
   * Mediator functionality.
   * Stores the topic and callback given by the component.
   * for further reference.
   * @param  {String} topic      Topic string
   * @param  {Function} callback Callback function that would be triggered.
   * @param  {Function} context  Class instance which owns the callback
   */

	}, {
		key: "subscribe",
		value: function subscribe(topic, callback, context) {

			// Is this a new topic?
			if (!this.topics.hasOwnProperty(topic)) {
				this.topics[topic] = [];
			}

			// Store the subscriber callback
			this.topics[topic].push({ context: context, callback: callback });
		}

		/**
   * Mediator functionality.
   * Removes the stored topic and callback given by the component.
   * @param  {String}   topic    Topic string
   * @param  {Function} callback Callback function that would be triggered.
   * @param  {Function} context  Class instance which owns the callback
   * @return {Boolean}           True on success, False otherwise.
   */

	}, {
		key: "unsubscribe",
		value: function unsubscribe(topic, callback, context) {
			// Do we have this topic?
			if (!this.topics.hasOwnProperty(topic)) {
				return false;
			}

			// Find out where this is and remove it
			for (var i = 0, len = this.topics[topic].length; i < len; i++) {
				if (this.topics[topic][i].callback === callback) {
					if (!context || this.topics[topic][i].context === context) {
						this.topics[topic].splice(i, 1);
						return true;
					}
				}
			}

			return false;
		}

		/**
   * [publish description]
   * @param  {[type]} topic [description]
   * @return {[type]}       [description]
   */

	}, {
		key: "publish",
		value: function publish(topic) {
			// Check if we have subcribers to this topic
			if (!this.topics.hasOwnProperty(topic)) {
				return false;
			}

			// don't slice on arguments because it prevents optimizations in JavaScript engines (V8 for example)
			// https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Functions/arguments
			// https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#32-leaking-arguments
			var args = new Array(arguments.length - 1);
			for (var i = 0; i < args.length; ++i) {
				args[i] = arguments[i + 1]; // remove first argument
			}

			// Loop through them and fire the callbacks
			for (var _i = 0, len = this.topics[topic].length; _i < len; _i++) {
				var subscription = this.topics[topic][_i];
				// Call it's callback
				if (subscription && subscription.callback) {
					subscription.callback.apply(subscription.context, args);
				}
			}

			return true;
		}

		/**
   * Scan the DOM, initialize new components and destroy removed components.
   * @public
   * @param {Object} data - Optional data object to pass to the component constructor
   */

	}, {
		key: "scan",
		value: function scan() {
			var _this2 = this;

			var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

			var activeComponents = {},
			    elements = this.contextEl.querySelectorAll("[data-component]");

			[].forEach.call(elements, function (el) {
				_this2._scanElement(el, activeComponents, data);
			});

			if (this.numberOfInitializedComponents > 0) this.cleanUp_(activeComponents);
		}

		/**
   * Find all components registered on a specific DOM element and initialize them if new
   * @private
   * @param {Element} el - DOM element to scan for components
   * @param {Object} activeComponents - All componentIds currently found in the DOM
   * @param {Object} data - Optional data object to pass to the component constructor
   */

	}, {
		key: "_scanElement",
		value: function _scanElement(el, activeComponents, data) {
			var _this3 = this;

			// check of component(s) for this DOM element already have been initialized
			var elementId = el.getAttribute("data-component-id");

			if (!elementId) {
				// give unique id so we can track it on next scan
				elementId = this._generateUUID();
				el.setAttribute('data-component-id', elementId);
			}

			// find the name of the component instance
			var componentList = el.getAttribute("data-component").match(/\S+/g);
			componentList.forEach(function (componentName) {

				var componentId = componentName + "-" + elementId;
				activeComponents[componentId] = true;

				// check if component not initialized before
				if (!_this3.initializedComponents[componentId]) {
					_this3._initializeComponent(componentName, componentId, el, data);
				}
			});
		}

		/**
   * Call constructor of component and add instance to the collection of initialized components
   * @private
   * @param {String} componentName - Name of the component to initialize. Used to lookup class definition in components collection.
   * @param {String} componentId - Unique component ID (combination of component name and element ID)
   * @param {Element} el - DOM element that is the context of this component
   * @param {Object} data - Optional data object to pass to the component constructor
   */

	}, {
		key: "_initializeComponent",
		value: function _initializeComponent(componentName, componentId, el, data) {
			var component = this.components[componentName];

			if (typeof component !== 'function') throw "ComponentLoader: unknown component '" + componentName + "'";

			var instance = new component(el, data, this);

			this.initializedComponents[componentId] = instance;
			this.numberOfInitializedComponents++;
		}

		/**
   * Call destroy() on a component instance and remove it from the collection of initialized components
   * @private
   * @param {String} componentId - Unique component ID used to find component instance
   */

	}, {
		key: "_destroyComponent",
		value: function _destroyComponent(componentId) {
			var instance = this.initializedComponents[componentId];
			if (instance && typeof instance.destroy === 'function') instance.destroy();

			// safe to delete while object keys while loopinghttp://stackoverflow.com/questions/3463048/is-it-safe-to-delete-an-object-property-while-iterating-over-them
			delete this.initializedComponents[componentId];
			this.numberOfInitializedComponents--;
		}

		/**
   * Destroy inaitialized components that no longer are active
   * @private
   * @param {Object} activeComponents - All componentIds currently found in the DOM
   */

	}, {
		key: "cleanUp_",
		value: function cleanUp_() {
			var _this4 = this;

			var activeComponents = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

			Object.keys(this.initializedComponents).forEach(function (componentId) {
				if (!activeComponents[componentId]) {
					_this4._destroyComponent(componentId);
				}
			});
		}

		/**
   * Generates a rfc4122 version 4 compliant unique ID
   * http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript
   * @private
   */

	}, {
		key: "_generateUUID",
		value: function _generateUUID() {
			return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
				var r = Math.random() * 16 | 0,
				    v = c == 'x' ? r : r & 0x3 | 0x8;
				return v.toString(16);
			});
		}
	}]);

	return ComponentLoader;
}();

exports.default = ComponentLoader;

},{}],52:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * Component Base Class
 *
 * Sets all arguments passed in to constructor from ComponentLoader
 *
 * Exposes pub/sub methods for triggering events to other components
 *
 */
var Component = function () {

	/**
  * Constructor for the Component
  *
  * Call `super(...arguments);` in the base class constructor
  *
  * @public
  * @param {Node} context - DOM node that contains the component markup
  * @param {Object} data - Optional data object from ComponentLoader.scan()
  * @param {Object} mediator - instance of ComponentLoader for pub/sub
  */
	function Component() {
		_classCallCheck(this, Component);

		this.el = arguments[0];
		if (typeof jQuery !== 'undefined') this.$el = jQuery(this.el);
		this.data = arguments[1];
		this.__mediator = arguments[2];
	}

	/**
  * Publish an event for other components
  * @protected
  * @param {String} topic - Event name
  * @param {Object} data - Optional params to pass with the event
  */


	_createClass(Component, [{
		key: 'publish',
		value: function publish() {
			var _mediator;

			(_mediator = this.__mediator).publish.apply(_mediator, arguments);
		}

		/**
   * Subscribe to an event from another component
   * @protected
   * @param {String} topic - Event name
   * @param {Function} callback - Function to bind
   */

	}, {
		key: 'subscribe',
		value: function subscribe(topic, callback) {
			this.__mediator.subscribe(topic, callback, this);
		}

		/**
   * Unsubscribe from an event from another component
   * @protected
   * @param {String} topic - Event name
   * @param {Function} callback - Function to unbind
   */

	}, {
		key: 'unsubscribe',
		value: function unsubscribe(topic, callback) {
			this.__mediator.unsubscribe(topic, callback, this);
		}

		/**
   * Utility method for triggering the ComponentLoader to scan the markup for new components
   * @protected
   * @param {Object} data - Optional data to pass to the constructor of any Component initialized by this scan
   */

	}, {
		key: 'scan',
		value: function scan(data) {
			this.__mediator.scan(data);
		}

		/**
   * Utility method for defering a function call
   * @protected
   * @param {Function} callback - Function to call
   * @param {Number} ms - Optional ms to delay, defaults to 17ms (just over 1 frame at 60fps)
   */

	}, {
		key: 'defer',
		value: function defer(callback) {
			var ms = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 17;

			setTimeout(callback, ms);
		}

		/**
   * Called by ComponentLoader when component is no longer found in the markup
   * usually happens as a result of replacing the markup using AJAX
   *
   * Override in subclass and make sure to clean up event handlers etc
   *
   * @protected
   */

	}, {
		key: 'destroy',
		value: function destroy() {}
	}]);

	return Component;
}();

exports.default = Component;

},{}],53:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
var ANIMATION = void 0,
    ANIMATION_END = void 0,
    TRANSITION_END = void 0,
    name = void 0;

var el = document.createElement('div'),
    animationNames = {
	'WebkitAnimation': 'webkitAnimationEnd',
	'MozAnimation': 'animationend',
	'OAnimation': 'oAnimationEnd oanimationend',
	'animation': 'animationend'
},
    transitionNames = {
	'WebkitAnimation': 'webkitTransitionEnd',
	'MozAnimation': 'transitionend',
	'OAnimation': 'oTransitionEnd otransitionend',
	'animation': 'transitionend'
};

for (name in animationNames) {
	if (el.style[name] !== undefined) {
		ANIMATION = name;
		ANIMATION_END = animationNames[name];
		TRANSITION_END = transitionNames[name];
	}
}

/**
 * Assigns an animation class to the selected elements, removing it when
 * the animation finishes.
 * @param  {jQuery}   el     The jQuery element.
 * @param  {string}   name   Class name to add.
 * @param  {Function} cb     Callback function when animation finishes.
 * @param  {Boolean}  nowait Call the callback without waiting.
 * @param  {String}   child  Child element that runs the animation or transition.
 * @param  {Boolean}  revert to previous state
 */

exports.default = function (el, name, cb, nowait, child, revert) {
	var elem = child ? el.find(child) : el;

	elem.one(ANIMATION_END + ' ' + TRANSITION_END, function (e) {
		if (revert) el.removeClass(name);
		if (cb && nowait) {
			cb.apply(el[0]);
		} else if (cb) {
			setTimeout(function () {
				cb.apply(el[0]);
			}, 0);
		}
	});
	el.addClass(name);
};

},{}],54:[function(require,module,exports){
'use strict';

var _BaseEnums = require('./../../js/base/enums.js');

var _BaseEnums2 = _interopRequireDefault(_BaseEnums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Enums = $.extend({}, _BaseEnums2.default, {});

module.exports = Enums;

},{"./../../js/base/enums.js":43}],55:[function(require,module,exports){
'use strict';

var _Enums = require('./enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

var _appeaserComponentLoader = require('./../../js/base/appeaser-component-loader.js');

var _appeaserComponentLoader2 = _interopRequireDefault(_appeaserComponentLoader);

var _ellipsis = require('./../../js/base/ellipsis.js');

var _ellipsis2 = _interopRequireDefault(_ellipsis);

var _index = require('../../themes/stories/molecules/m-cart-addition/index');

var _index2 = _interopRequireDefault(_index);

var _index3 = require('../../themes/stories/molecules/m-dropdown/index');

var _index4 = _interopRequireDefault(_index3);

var _index5 = require('../../themes/stories/molecules/m-dropdown-filter/index');

var _index6 = _interopRequireDefault(_index5);

var _index7 = require('../../themes/stories/molecules/m-input/index');

var _index8 = _interopRequireDefault(_index7);

var _index9 = require('../../themes/stories/molecules/m-video-tile/index');

var _index10 = _interopRequireDefault(_index9);

var _index11 = require('./organisms/o-accordion/index');

var _index12 = _interopRequireDefault(_index11);

var _index13 = require('../../themes/stories/organisms/o-address-box-edit/index');

var _index14 = _interopRequireDefault(_index13);

var _index15 = require('../../themes/stories/organisms/o-blog-hero/index');

var _index16 = _interopRequireDefault(_index15);

var _index17 = require('../../themes/stories/organisms/o-checkout/index');

var _index18 = _interopRequireDefault(_index17);

var _index19 = require('../../themes/stories/molecules/m-cookie-bar/index');

var _index20 = _interopRequireDefault(_index19);

var _index21 = require('../../themes/stories/organisms/o-country-selector/index');

var _index22 = _interopRequireDefault(_index21);

var _index23 = require('../../themes/stories/organisms/o-delivery/index');

var _index24 = _interopRequireDefault(_index23);

var _index25 = require('../../themes/stories/organisms/o-footer/index');

var _index26 = _interopRequireDefault(_index25);

var _index27 = require('../../themes/stories/organisms/o-header/index');

var _index28 = _interopRequireDefault(_index27);

var _index29 = require('../../themes/stories/organisms/o-main-menu/index');

var _index30 = _interopRequireDefault(_index29);

var _index31 = require('../../themes/stories/organisms/o-map/index');

var _index32 = _interopRequireDefault(_index31);

var _index33 = require('../../themes/stories/organisms/o-minicart/index');

var _index34 = _interopRequireDefault(_index33);

var _index35 = require('../../themes/stories/organisms/o-product-information/index');

var _index36 = _interopRequireDefault(_index35);

var _index37 = require('../../themes/stories/organisms/o-product-gallery/index');

var _index38 = _interopRequireDefault(_index37);

var _index39 = require('../../themes/stories/organisms/o-olapic-gallery/index');

var _index40 = _interopRequireDefault(_index39);

var _index41 = require('../../themes/stories/organisms/o-product-filter/index');

var _index42 = _interopRequireDefault(_index41);

var _index43 = require('../../themes/stories/organisms/o-product-sort/index');

var _index44 = _interopRequireDefault(_index43);

var _index45 = require('../../themes/stories/molecules/m-product-zoom/index');

var _index46 = _interopRequireDefault(_index45);

var _index47 = require('../../themes/stories/organisms/o-pick-up-location/index');

var _index48 = _interopRequireDefault(_index47);

var _index49 = require('../../themes/stories/organisms/o-page/index');

var _index50 = _interopRequireDefault(_index49);

var _index51 = require('../../themes/stories/organisms/o-page-content/index');

var _index52 = _interopRequireDefault(_index51);

var _index53 = require('../../themes/stories/organisms/o-quick-buy/index');

var _index54 = _interopRequireDefault(_index53);

var _index55 = require('../../themes/stories/organisms/o-search/index');

var _index56 = _interopRequireDefault(_index55);

var _index57 = require('../../themes/stories/organisms/o-slider/index');

var _index58 = _interopRequireDefault(_index57);

var _index59 = require('../../themes/stories/organisms/o-store-locator/index');

var _index60 = _interopRequireDefault(_index59);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// combine common imports with theme imports


// optional theme based imports
var imports = $.extend({}, commonImports, {
    MDropdown: _index4.default,
    MProductZoom: _index46.default,
    MCookieBar: _index20.default,
    MCartAdittion: _index2.default,
    MInput: _index8.default,
    MVideoTile: _index10.default,
    MDropdownFilter: _index6.default,
    OAccordion: _index12.default,
    OAddressBoxEdit: _index14.default,
    OBlogHero: _index16.default,
    OCheckout: _index18.default,
    OCountrySelector: _index22.default,
    ODelivery: _index24.default,
    OFooter: _index26.default,
    OHeader: _index28.default,
    OMainMenu: _index30.default,
    OOlapicgallery: _index40.default,
    OQuickBuy: _index54.default,
    OPage: _index50.default,
    OProductInformation: _index36.default,
    OProductGallery: _index38.default,
    OPageContent: _index52.default,
    OProductFilter: _index42.default,
    OProductSort: _index44.default,
    OPickupLocation: _index48.default,
    OMap: _index32.default,
    OMinicart: _index34.default,
    OSearch: _index56.default,
    OSlider: _index58.default,
    OStoreLocator: _index60.default
});

// load all imported components
// needed imports
var loader = new _appeaserComponentLoader2.default(imports);

// Initialize new components.
// Destroy components no longer in DOM.
// Tell component this scan was not trigger after a pjax (smoothstate) load
loader.scan({ pjax: false });

// publish loader for external access
window.appeaser = function () {
    return {
        publish: function publish(topic, options, callback) {
            loader.publish(topic, options, callback);
        },
        subscribe: function subscribe(topic, callback) {
            loader.subscribe(topic, callback, loader);
        },
        unsubscribe: function unsubscribe(topic, callback) {
            loader.unsubscribe(topic, callback);
        },
        scan: function scan() {
            loader.scan({ pjax: true });
        },
        Enums: {
            trigger: _Enums2.default.ACTION,
            listen: _Enums2.default.EVENT,
            MQ: _Enums2.default.MQ,
            ENDPOINT: _Enums2.default.ENDPOINT
        }
    };
}();

},{"../../themes/stories/molecules/m-cart-addition/index":56,"../../themes/stories/molecules/m-cookie-bar/index":57,"../../themes/stories/molecules/m-dropdown-filter/index":58,"../../themes/stories/molecules/m-dropdown/index":59,"../../themes/stories/molecules/m-input/index":60,"../../themes/stories/molecules/m-product-zoom/index":61,"../../themes/stories/molecules/m-video-tile/index":62,"../../themes/stories/organisms/o-address-box-edit/index":64,"../../themes/stories/organisms/o-blog-hero/index":65,"../../themes/stories/organisms/o-checkout/index":66,"../../themes/stories/organisms/o-country-selector/index":67,"../../themes/stories/organisms/o-delivery/index":68,"../../themes/stories/organisms/o-footer/index":70,"../../themes/stories/organisms/o-header/index":71,"../../themes/stories/organisms/o-main-menu/index":72,"../../themes/stories/organisms/o-map/index":73,"../../themes/stories/organisms/o-minicart/index":74,"../../themes/stories/organisms/o-olapic-gallery/index":75,"../../themes/stories/organisms/o-page-content/index":76,"../../themes/stories/organisms/o-page/index":77,"../../themes/stories/organisms/o-pick-up-location/index":78,"../../themes/stories/organisms/o-product-filter/index":79,"../../themes/stories/organisms/o-product-gallery/index":80,"../../themes/stories/organisms/o-product-information/index":81,"../../themes/stories/organisms/o-product-sort/index":82,"../../themes/stories/organisms/o-quick-buy/index":83,"../../themes/stories/organisms/o-search/index":84,"../../themes/stories/organisms/o-slider/index":85,"../../themes/stories/organisms/o-store-locator/index":86,"./../../js/base/appeaser-component-loader.js":40,"./../../js/base/ellipsis.js":42,"./enums.js":54,"./organisms/o-accordion/index":63}],56:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _appeaserComponentBase = require('./../../../../js/base/appeaser-component-base.js');

var _appeaserComponentBase2 = _interopRequireDefault(_appeaserComponentBase);

var _Logger = require('./../../../../js/base/logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var MCartAddition = function (_AppeaserComponentBas) {
    _inherits(MCartAddition, _AppeaserComponentBas);

    /**
     * Constructor, will run before page loaded
     */
    function MCartAddition() {
        _classCallCheck(this, MCartAddition);

        var _this = _possibleConstructorReturn(this, (MCartAddition.__proto__ || Object.getPrototypeOf(MCartAddition)).apply(this, arguments));

        _Logger2.default.INFO(_this.constructor.name, ':: Constructor');

        _this._declareConstants();
        _this._jQueryScopeBinding();
        _this.subscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed
        return _this;
    }

    /**
     * Destructor, will run after page unload (or destroy)
     */


    _createClass(MCartAddition, [{
        key: 'destroy',
        value: function destroy() {
            _Logger2.default.INFO(this.constructor.name, ':: Destructor');

            this._detachDOMListeners();
            this._detachSubscribers();
            this._detachMQHandlers();

            _get(MCartAddition.prototype.__proto__ || Object.getPrototypeOf(MCartAddition.prototype), 'destroy', this).call(this);
        }

        /************************************************************************************************************
         ******************************************** Internal functions ********************************************
         ************************************************************************************************************/

        /**
         * Declare class constants here
         * @private
         */

    }, {
        key: '_declareConstants',
        value: function _declareConstants() {
            this.DISPLAY_NEW_ITEM_DURATION = 2000;
            this.HIDE_NEW_ITEM_DURATION = 300;

            this.SELECTOR_ITEM_ADDED_IMG = '.product-section .a-image';

            this.CLASS_HAS_NEW_CART_ITEM = 'has-new-cart-item';
            this.CLASS_IS_CLOSING = 'is-closing';
            this.CLASS_IS_CART_ADITION_OVERLAY = 'is-cart-addition-overlay';
        }

        /**
         * Runs on DOM Ready
         * Should be used to attach DOM listeners etc
         * @private
         */

    }, {
        key: '_onDOMReady',
        value: function _onDOMReady() {
            _Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');
            this._cacheDOMElements();
            this._attachSubscribers();
            this._attachDOMListeners();
        }
    }, {
        key: '_cacheDOMElements',
        value: function _cacheDOMElements() {
            this.$window = $(window);
            this.$itemAddedImg = this.$el.find(this.SELECTOR_ITEM_ADDED_IMG);
        }

        /**
         * Scopes "this" to use the "this" of the outside function
         * Since JQuery creates a new function with a new "this"
         * Attach all functions that needs to be binded here
         * @private
         */

    }, {
        key: '_jQueryScopeBinding',
        value: function _jQueryScopeBinding() {
            this._onDOMReady = this._onDOMReady.bind(this);
            this._onScroll = this._onScroll.bind(this);
        }

        /**
         * Attach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_attachSubscribers',
        value: function _attachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');
            this.subscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
            this.subscribe(_Enums2.default.EVENT.ON_ITEM_ADDED_TO_CART, this._onItemAddedToCart);
        }

        /**
         * Detach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_detachSubscribers',
        value: function _detachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');

            this.unsubscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
            this.unsubscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
            this.unsubscribe(_Enums2.default.EVENT.ON_ITEM_ADDED_TO_CART, this._onItemAddedToCart);
        }

        /**
         * At this point the framework is ready.
         * Add all publish events here (if any)
         * @private
         */

    }, {
        key: '_onFrameworkReady',
        value: function _onFrameworkReady() {}

        /**
         * Attach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_attachDOMListeners',
        value: function _attachDOMListeners() {
            this.$window.on("scroll", this._onScroll);
        }

        /**
         * Detach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_detachDOMListeners',
        value: function _detachDOMListeners() {
            this.$window.off("scroll", this._onScroll);
        }

        /************************************************************************************************************
         ****************************************** Implementation functions ****************************************
         ************************************************************************************************************/

        /**
         * Remove a class so m-cart-addition is in-visible.
         * @private
         */

    }, {
        key: '_closeNewCartAddition',
        value: function _closeNewCartAddition() {
            var _this2 = this;

            this.$el.addClass(this.CLASS_IS_CLOSING);

            setTimeout(function () {

                _this2.$el.removeClass(_this2.CLASS_HAS_NEW_CART_ITEM);
                _this2.$el.removeClass(_this2.CLASS_IS_CLOSING);
            }, this.HIDE_NEW_ITEM_DURATION);

            if (this.displayNewItemTimeout) {
                clearTimeout(this.displayNewItemTimeout);
                this.displayNewItemTimeout = undefined;
            }

            this.publish(_Enums2.default.ACTION.HIDE_OVERLAY);
        }

        /**
         * Displays the appropriate overlay
         * @private
         */

    }, {
        key: '_showOverlay',
        value: function _showOverlay() {
            this.publish(_Enums2.default.ACTION.SHOW_OVERLAY, {
                classes: this.CLASS_IS_CART_ADITION_OVERLAY,
                keepScroll: true
            });
        }

        /**
         * Temporarily adds a class so m-cart-addition is visible.
         * @private
         */

    }, {
        key: '_onItemAddedToCart',
        value: function _onItemAddedToCart(data) {
            var _this3 = this;

            // [customizing-bj] 장바구니 담기 완료 후 슬라이드 노출 수정
            try {
                // 장바구니 담기 완료 후 슬라이드 노출
                function chkCartFlag() {
            		if ($('#cartFlag') != null && $('#cartFlag').val() == "N") {
            			setTimeout(chkCartFlag, 500);
            		} else {
            			// 장바구니 처리상태 초기화
            			$('#cartFlag').val('N');

            			// 장바구니 내의 퀵샵에서 장바구니 담기 완료 후 미니카트 노출 안되도록 수정
            			if (location.href.indexOf('odb/basktList') == -1) {
    	        			if (_this3.displayNewItemTimeout) {
    	                        clearTimeout(_this3.displayNewItemTimeout);
    	                    }
    	        			_this3.$itemAddedImg.attr('src', data.imgSrc);
    	        			console.log("34325233333333333333333");
    	        			_this3.$el.addClass(_this3.CLASS_HAS_NEW_CART_ITEM);

    	        			_this3.displayNewItemTimeout = setTimeout(function () {

    	                        _this3._closeNewCartAddition();
    	                    }, _this3.DISPLAY_NEW_ITEM_DURATION);

    	        			_this3._showOverlay();
            			}
            			// 장바구니 내의 퀵샵에서 장바구니 담기 완료 후 페이지 리로딩
            			else {
            				location.reload();
            			}
            		}
            	}

            	chkCartFlag();
            } catch (e) {
            	console.error("_onItemAddedToCart\n    >>" + e);
            }
        }
        /**
         * Handles scroll
         * @private
         */

    }, {
        key: '_onScroll',
        value: function _onScroll() {
            if (this.$window.scrollTop() > 0) {
                this.$el.addClass(_Enums2.default.CLASS.IS_STICKY);
            } else {
                this.$el.removeClass(_Enums2.default.CLASS.IS_STICKY);
            }
        }
    }]);

    return MCartAddition;
}(_appeaserComponentBase2.default);

// Export this so we can pick it up and import in main.js


module.exports = MCartAddition;

},{"./../../../../js/base/appeaser-component-base.js":39,"./../../../../js/base/logger.js":44,"./../../enums.js":54}],57:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _appeaserComponentBase = require('./../../../../js/base/appeaser-component-base.js');

var _appeaserComponentBase2 = _interopRequireDefault(_appeaserComponentBase);

var _Logger = require('./../../../../js/base/logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var MCookieBar = function (_AppeaserComponentBas) {
    _inherits(MCookieBar, _AppeaserComponentBas);

    /**
     * Constructor, will run before page loaded
     */
    function MCookieBar() {
        _classCallCheck(this, MCookieBar);

        var _this = _possibleConstructorReturn(this, (MCookieBar.__proto__ || Object.getPrototypeOf(MCookieBar)).apply(this, arguments));

        _Logger2.default.INFO(_this.constructor.name, ':: Constructor');

        _this._jQueryScopeBinding();
        _this._declareConstants();

        _this.subscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed
        return _this;
    }

    /**
     * Destructor, will run after page unload (or destroy)
     */


    _createClass(MCookieBar, [{
        key: 'destroy',
        value: function destroy() {
            _Logger2.default.INFO(this.constructor.name, ':: Destructor');

            this._detachDOMListeners();
            this._detachSubscribers();

            _get(MCookieBar.prototype.__proto__ || Object.getPrototypeOf(MCookieBar.prototype), 'destroy', this).call(this);
        }

        /************************************************************************************************************
         ******************************************** Internal functions ********************************************
         ************************************************************************************************************/

        /**
         * Declare class constants here
         * @private
         */

    }, {
        key: '_declareConstants',
        value: function _declareConstants() {
            this.CLASS_IS_ERROR = 'is-disaster';
            this.SELECTOR_CLOSE = '.close-click-area';
            this.COOKIE_HISTORY = 'cookie-notification';
        }

        /**
         * Called on onDomReady, cache DOM elements
         * @private
         */

    }, {
        key: '_cacheDOMElements',
        value: function _cacheDOMElements() {
            this.$window = $(window);
            this.$closeElements = this.$el.find(this.SELECTOR_CLOSE);
        }

        /**
         * Scopes "this" to use the "this" of the outside function
         * Since JQuery creates a new function with a new "this"
         * Attach all functions that needs to be binded here
         * @private
         */

    }, {
        key: '_jQueryScopeBinding',
        value: function _jQueryScopeBinding() {
            this._onDOMReady = this._onDOMReady.bind(this);
            this._close = this._close.bind(this);
            this._onResize = this._onResize.bind(this);
        }

        /**
         * Attach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_attachSubscribers',
        value: function _attachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');

            this.subscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
        }

        /**
         * Detach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_detachSubscribers',
        value: function _detachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');

            this.unsubscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
            this.unsubscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
        }

        /**
         * At this point the framework is ready.
         * Add all publish events here (if any)
         * @private
         */

    }, {
        key: '_onFrameworkReady',
        value: function _onFrameworkReady() {
            if (this.isDisasterMessage) {
                this._onResize();
            }
        }

        /**
         * Attach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_attachDOMListeners',
        value: function _attachDOMListeners() {
            this.$closeElements.on('click', this._close);

            if (this.isDisasterMessage) {
                $(window).on('resize', this._onResize);
            }
        }

        /**
         * Detach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_detachDOMListeners',
        value: function _detachDOMListeners() {
            this.$closeElements.off('click', this._close);

            if (this.isDisasterMessage) {
                $(window).off('resize', this._onResize);
            }
        }

        /**
         * Runs on DOM Ready
         * Should be used to attach DOM listeners etc
         * @private
         */

    }, {
        key: '_onDOMReady',
        value: function _onDOMReady() {
            _Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');
            
            // 뒤로가기 위치 수정 20200129
            $('.page-title a.btn-pt-prev').css('top','57px');

            this.isDisasterMessage = this.$el.hasClass(this.CLASS_IS_ERROR);

            this._cacheDOMElements();
            this._attachSubscribers();
            this._attachDOMListeners();

            this._setVisibilityState();
        }

        /************************************************************************************************************
         ****************************************** Implementation functions ****************************************
         ************************************************************************************************************/

        /**
         * Add this point set and check Cookies Visibility State.
         * @private
         */

    }, {
        key: '_setVisibilityState',
        value: function _setVisibilityState() {
            if (Cookies.get(this.COOKIE_HISTORY) === "viewed" && !this.isDisasterMessage) {
                this.$el.remove();
            } else {
                this.$el.addClass(_Enums2.default.CLASS.IS_VISIBLE_STATE);
            }
        }

        /**
         * Add this for Close the Cookies Message
         * @param e
         * @private
         */

    }, {
        key: '_close',
        value: function _close() {
            this.$el.removeClass(_Enums2.default.CLASS.IS_VISIBLE_STATE);

            if (!this.$el.hasClass(this.CLASS_IS_ERROR)) {

                Cookies.set(this.COOKIE_HISTORY, 'viewed');
            }
            // 뒤로가기 위치 수정 20200129 
            $('.page-title a.btn-pt-prev').css('top','12px');
            // 위치 리사이즈 20200129 
            this._onResize();	 
        }

        /**
         * Communicates height changes to the header
         * @private
         */

    }, {
        key: '_onResize',
        value: function _onResize() {
            var currentHeight = this.$el.outerHeight();

            if (currentHeight != this.bannerHeight) {
                this.bannerHeight = currentHeight;

                this.publish(_Enums2.default.EVENT.ON_ERROR_BANNER_RESIZE, this.bannerHeight);
                this.publish(_Enums2.default.ACTION.UPDATE_PAGE_CONTENT_MARGIN_CONTRIBUTION, {
                    margin: this.bannerHeight,
                    element: this.$el
                });
            }
        }
    }]);

    return MCookieBar;
}(_appeaserComponentBase2.default);

// Export this so we can pick it up and import in main.js


module.exports = MCookieBar;

},{"./../../../../js/base/appeaser-component-base.js":39,"./../../../../js/base/logger.js":44,"./../../enums.js":54}],58:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _dropdown = require('./../../../../js/base/dropdown.js');

var _dropdown2 = _interopRequireDefault(_dropdown);

var _Logger = require('./../../../../js/base/logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var MDropdownFilter = function (_Dropdown) {
    _inherits(MDropdownFilter, _Dropdown);

    /**
     * Constructor, will run before page loaded
     */
    function MDropdownFilter() {
        _classCallCheck(this, MDropdownFilter);

        var _this = _possibleConstructorReturn(this, (MDropdownFilter.__proto__ || Object.getPrototypeOf(MDropdownFilter)).apply(this, arguments));

        _Logger2.default.INFO(_this.constructor.name, ':: Constructor');

        return _this;
    }

    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */


    _createClass(MDropdownFilter, [{
        key: '_declareConstants',
        value: function _declareConstants() {

            _get(MDropdownFilter.prototype.__proto__ || Object.getPrototypeOf(MDropdownFilter.prototype), '_declareConstants', this).call(this);

            //Classes
            this.CLASS_DISPLAY_NONE = 'u-display-none';
            this.CLASS_ALIGN_STICKY_HEADER = 'align-sticky';

            //SELECTORS
            this.SELECTOR_INPUT = '.a-input.filter';
            this.SELECTOR_ICON_ARROW = '.a-icon-arrowdown';
            this.SELECTOR_CLOSE_ICON = '.a-icon-close';
            this.SELECTOR_SCROLLBODY = 'html,body';
            this.SELECTOR_OPTION_LIST = '.options';

            this.optionHeight = null;
            this.TOP_MARGIN = 88;
        }

        /**
         * Scopes "this" to use the "this" of the outside function
         * Since JQuery creates a new function with a new "this"
         * Attach all functions that needs to be binded here
         * @private
         */

    }, {
        key: '_jQueryScopeBinding',
        value: function _jQueryScopeBinding() {
            _get(MDropdownFilter.prototype.__proto__ || Object.getPrototypeOf(MDropdownFilter.prototype), '_jQueryScopeBinding', this).call(this);

            this._removeFilter = this._removeFilter.bind(this);
        }

        /**
         * Runs on DOM Ready
         * Should be used to attach DOM listeners etc
         * @private
         */

    }, {
        key: '_onDOMReady',
        value: function _onDOMReady() {
            _Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');

            //Elements
            this.$input = this.$el.find(this.SELECTOR_INPUT);
            this.$closeIcon = this.$el.find(this.SELECTOR_CLOSE_ICON);
            this.$scrollBody = $(this.SELECTOR_SCROLLBODY);
            this.$optionList = this.$el.find(this.SELECTOR_OPTION_LIST);

            this._checkInputValue();

            //_onDOMReady in parent calls _attachDOMListeners, so we need perform our own actions first.
            _get(MDropdownFilter.prototype.__proto__ || Object.getPrototypeOf(MDropdownFilter.prototype), '_onDOMReady', this).call(this);

            this._attachMQHandlers();
        }

        /**
         * Attach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_attachSubscribers',
        value: function _attachSubscribers() {
            _get(MDropdownFilter.prototype.__proto__ || Object.getPrototypeOf(MDropdownFilter.prototype), '_attachSubscribers', this).call(this);

            this.subscribe(_Enums2.default.ACTION.SET_DROPDOWN_SELECTED_OPTION, this._checkInputValue);
        }

        /**
         * Detach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_detachSubscribers',
        value: function _detachSubscribers() {
            _get(MDropdownFilter.prototype.__proto__ || Object.getPrototypeOf(MDropdownFilter.prototype), '_detachSubscribers', this).call(this);

            this.unsubscribe(_Enums2.default.ACTION.SET_DROPDOWN_SELECTED_OPTION, this._checkInputValue);
        }

        /**
         * Attach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_attachDOMListeners',
        value: function _attachDOMListeners() {

            _get(MDropdownFilter.prototype.__proto__ || Object.getPrototypeOf(MDropdownFilter.prototype), '_attachDOMListeners', this).call(this);

            this.$input.on('click', this._open);
            this.$input.on('input', this._filterOptions);
            this.$closeIcon.on('click', this._close);
        }

        /**
         * Detach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_detachDOMListeners',
        value: function _detachDOMListeners() {

            _get(MDropdownFilter.prototype.__proto__ || Object.getPrototypeOf(MDropdownFilter.prototype), '_detachDOMListeners', this).call(this);

            this.$input.off('focus', this._open);
            this.$input.off('input', this._filterOptions);
            this.$closeIcon.off('click', this._close);
        }
    }, {
        key: '_attachMQHandlers',
        value: function _attachMQHandlers() {

            this.MQMobileHandler = {
                deferSetup: true,
                match: this._close,
                unmatch: this._close
            };

            enquire.register(_Enums2.default.MQ.IS_MOBILE, this.MQMobileHandler);
        }
    }, {
        key: '_detachMQHandlers',
        value: function _detachMQHandlers() {
            enquire.unregister(_Enums2.default.MQ.IS_MOBILE, this.MQMobileHandler);
        }

        /************************************************************************************************************
         ****************************************** Implementation functions ****************************************
         ************************************************************************************************************/

        /**
         * Removes filter so all options are visible.
         * @private
         */

    }, {
        key: '_removeFilter',
        value: function _removeFilter() {
            this.$options.removeClass(this.CLASS_DISPLAY_NONE);
        }

        /**
         * Opens dropdown
         * @private
         */

    }, {
        key: '_open',
        value: function _open() {
            this._removeFilter();
            this.$el.addClass(_Enums2.default.CLASS.IS_OPEN_STATE);

            if (Modernizr.mq(_Enums2.default.MQ.IS_MOBILE)) {
                var height = $(window).outerHeight(),
                    optionHeight = height / 2 - this.TOP_MARGIN;

                this.$optionList.css('max-height', optionHeight);

                this.publish(_Enums2.default.ACTION.DISABLE_SCROLL, { $touchScrollElement: this.$optionList });
                this.$scrollBody.scrollTop(0);
            }
        }

        /**
         * Closes dropdown
         * @private
         */

    }, {
        key: '_close',
        value: function _close() {
            if (this.$el.hasClass(_Enums2.default.CLASS.IS_OPEN_STATE)) {
                this.$el.removeClass(_Enums2.default.CLASS.IS_OPEN_STATE);
                this.publish(_Enums2.default.ACTION.ENABLE_SCROLL);
                this._checkInputValue();
            }
        }

        /**
         * Filters the options of the dropdown.
         * @private
         */

    }, {
        key: '_filterOptions',
        value: function _filterOptions() {

            var searchString = this.$input.val().toLowerCase();

            this.$options.each(function (index, element) {

                var $element = $(element);

                if ($element.html().toLowerCase().substring(0, searchString.length) == searchString) {
                    $element.removeClass(_Enums2.default.CLASS.DISPLAY_NONE);
                } else {
                    $element.addClass(_Enums2.default.CLASS.DISPLAY_NONE);
                    $element.removeClass(_Enums2.default.CLASS.IS_SELECTED);
                }
            });
        }
    }, {
        key: '_checkInputValue',
        value: function _checkInputValue() {
            if (this.$input.val()) {
                this.$input.css("border-color", "black");
            } else {
                this.$input.css("border-color", "");
            }
        }
    }]);

    return MDropdownFilter;
}(_dropdown2.default);

// Export this so we can pick it up and import in main.js


module.exports = MDropdownFilter;

},{"./../../../../js/base/dropdown.js":41,"./../../../../js/base/logger.js":44,"./../../enums.js":54}],59:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _MDropdownCommon2 = require('./../../../../js/base/m-dropdown.js');

var _MDropdownCommon3 = _interopRequireDefault(_MDropdownCommon2);

var _Logger = require('./../../../../js/base/logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var MDropdown = function (_MDropdownCommon) {
    _inherits(MDropdown, _MDropdownCommon);

    /**
     * Constructor, will run before page loaded
     */
    function MDropdown() {
        _classCallCheck(this, MDropdown);

        var _this = _possibleConstructorReturn(this, (MDropdown.__proto__ || Object.getPrototypeOf(MDropdown)).apply(this, arguments));

        _Logger2.default.INFO(_this.constructor.name, ':: Constructor');
        return _this;
    }

    /**
     * Declare class constants here
     * @private
     */


    _createClass(MDropdown, [{
        key: '_declareConstants',
        value: function _declareConstants() {

            _get(MDropdown.prototype.__proto__ || Object.getPrototypeOf(MDropdown.prototype), '_declareConstants', this).call(this);

            this.SELECTOR_LIST_WRAPPER = '.list-wrapper';
            this.SELECTOR_ICON_CLOSE = '.a-icon-close';
            this.SCROLL_MARGIN = 10; //When scrollTop is adjusted to fit the dropdown into the viewport, this margin is added for better visual effect.
            this.SCROLL_DURATION;
            this.SELECTOR_PLACEHOLDER_IMAGE = '.placeholder-image';
            this.SELECTOR_VALUE_LABEL = '.value-label';
            this.SELECTOR_CHECKBOX = '.m-checkbox';
            this.SELECTOR_CHECKBOX_ATOM = '.a-checkbox';

            this.CLASS_ONE_SIZE = 'is-one-size';
            this.CLASS_VALUE_LABEL = 'value-label';
        }

        /**
         * Runs on DOM Ready
         * Should be used to attach DOM listeners etc
         * @private
         */

    }, {
        key: '_onDOMReady',
        value: function _onDOMReady() {

            this.$listWrapper = this.$el.find(this.SELECTOR_LIST_WRAPPER);
            this.$iconClose = this.$el.find(this.SELECTOR_ICON_CLOSE);
            this.$window = $(window);
            this.$body = $('body');
            this.$placeholderImage = this.$el.find(this.SELECTOR_PLACEHOLDER_IMAGE);
            this.isFilterDropdown = this.$el.data("filter-dropdown");

            if (this.isFilterDropdown) {
                this.$filterCheckboxes = this.$el.find(this.SELECTOR_CHECKBOX);
            }

            _get(MDropdown.prototype.__proto__ || Object.getPrototypeOf(MDropdown.prototype), '_onDOMReady', this).call(this);

            if (this.$input.val() && this.$input.val().length) {
                this.$el.addClass(_Enums2.default.CLASS.IS_FILLED);
            }
        }
    }, {
        key: '_attachSubscribers',
        value: function _attachSubscribers() {
            _get(MDropdown.prototype.__proto__ || Object.getPrototypeOf(MDropdown.prototype), '_attachSubscribers', this).call(this);

            if (this.isFilterDropdown) {
                this.subscribe(_Enums2.default.ACTION.CLEAR_FILTERS, this._onClearFilters);
            }
        }
    }, {
        key: '_detachSubscribers',
        value: function _detachSubscribers() {
            _get(MDropdown.prototype.__proto__ || Object.getPrototypeOf(MDropdown.prototype), '_detachSubscribers', this).call(this);

            if (this.isFilterDropdown) {
                this.unsubscribe(_Enums2.default.ACTION.CLEAR_FILTERS, this._onClearFilters);
            }
        }

        /**
         * Attach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_attachDOMListeners',
        value: function _attachDOMListeners() {

            _get(MDropdown.prototype.__proto__ || Object.getPrototypeOf(MDropdown.prototype), '_attachDOMListeners', this).call(this);

            this.$iconClose.on('click', this._close);

            if (this.isFilterDropdown) {
                this.$filterCheckboxes.on("change", this._onFilterCheckboxChange);
            }
        }

        /**
         * Detach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_detachDOMListeners',
        value: function _detachDOMListeners() {

            _get(MDropdown.prototype.__proto__ || Object.getPrototypeOf(MDropdown.prototype), '_detachDOMListeners', this).call(this);

            this.$iconClose.off('click', this._close);

            if (this.isFilterDropdown) {
                this.$filterCheckboxes.off("change", this._onFilterCheckboxChange);
            }
        }

        /**
         * Scopes "this" to use the "this" of the outside function
         * Since JQuery creates a new function with a new "this"
         * Attach all functions that needs to be binded here
         * @private
         */

    }, {
        key: '_jQueryScopeBinding',
        value: function _jQueryScopeBinding() {
            _get(MDropdown.prototype.__proto__ || Object.getPrototypeOf(MDropdown.prototype), '_jQueryScopeBinding', this).call(this);

            this._onFilterCheckboxChange = this._onFilterCheckboxChange.bind(this);
        }

        /************************************************************************************************************
         ****************************************** Implementation functions ****************************************
         ************************************************************************************************************/

        /**
         * Sets the value of the hidden input element.
         * @private
         */

    }, {
        key: '_setInputValue',
        value: function _setInputValue($target) {
            var currentValue = $target.text();
            var currentSwatchImage = $target.children('img').attr('src');

            this.$input.val(currentValue).attr('data-value', $target.attr('data-value')).trigger('change');
            this.$selectedOption = $target;
            if (!this.isFilterDropdown) {
                this.$placeholder.text(currentValue);
            }
            this.$placeholderImage.attr('src', currentSwatchImage);

            if (this.$placeholder.hasClass(this.CLASS_TEMPORARY)) {
                this._resetPlaceholderColor();
            } else if (this.isFilterDropdown) {
                this.$placeholder.find(this.SELECTOR_VALUE_LABEL).remove();

                // [customizing-bj] 카테고리 필터 '/ ' 문자 제거 - 시작
                var prefixValueLabel = "/ ";
                if (typeof this.$placeholder.attr('id') != 'undefined' && this.$placeholder.attr('id') == 'ctgr-filter-locator') {
                	prefixValueLabel = "";
                }

                var $valueLabel = $("<span></span>").addClass(this.CLASS_VALUE_LABEL).html(prefixValueLabel + currentValue);
                this.$placeholder.append($valueLabel);
                this.publish(_Enums2.default.EVENT.ON_FILTER_SELECTED, this);
            }

            if ($target.size()) {

                this.$el.addClass(_Enums2.default.CLASS.IS_FILLED);
            }
        }
    }, {
        key: '_onOptionClick',
        value: function _onOptionClick(e) {
            _get(MDropdown.prototype.__proto__ || Object.getPrototypeOf(MDropdown.prototype), '_onOptionClick', this).call(this, e);

            this.publish(_Enums2.default.EVENT.ON_DROPDOWN_OPTION_CHOSEN, this.$el);
        }

        /**
         * Opens dropdown
         * @private
         */

    }, {
        key: '_open',
        value: function _open() {
            if (!this.$el.hasClass(this.CLASS_ONE_SIZE)) {
                this.$el.addClass(_Enums2.default.CLASS.IS_OPEN_STATE);
                if (Modernizr.mq(_Enums2.default.MQ.IS_MOBILE) && !this.isFilterDropdown) {
                    this._preventMobileScroll();
                } else {

                    var listWrapperRect = this.$listWrapper[0].getBoundingClientRect();

                    //If the opened options do not fit into the viewport, scroll down.
                    if (this.$window.height() < listWrapperRect.top + listWrapperRect.height) {

                        var newScrollTop = listWrapperRect.top + this.$window.scrollTop() + listWrapperRect.height - this.$window.height() + this.SCROLL_MARGIN;
                        this.$body.animate({ scrollTop: newScrollTop }, this.SCROLL_DURATION);
                    }
                }
                this.publish(_Enums2.default.EVENT.ON_DROPDOWN_OPEN);
            }
        }

        /**
         * Checks if any filter has been selected
         * @private
         */

    }, {
        key: '_onFilterCheckboxChange',
        value: function _onFilterCheckboxChange() {
            var _this2 = this;

            this.nrFilterSelected = 0;

            this.$filterCheckboxes.each(function (index, element) {
                var $checkbox = $(element).find(_this2.SELECTOR_CHECKBOX_ATOM);

                if ($checkbox.prop("checked")) {
                    _this2.nrFilterSelected++;
                    _this2.selectedVal = $(element).find('.a-label:last-child').html();
                    return;
                }
            });

            if (!this.nrFilterSelected) {
                this.$el.removeClass(_Enums2.default.CLASS.IS_FILLED);
                this.publish(_Enums2.default.EVENT.ON_FILTER_DESELECTED, this);
            } else {
                this.$el.addClass(_Enums2.default.CLASS.IS_FILLED);
                this.publish(_Enums2.default.EVENT.ON_FILTER_SELECTED, this);
            }
        }

        /**
         * Handle a global filter clear request
         * @private
         */

    }, {
        key: '_onClearFilters',
        value: function _onClearFilters() {
            var _this3 = this;

            this.$filterCheckboxes.each(function (index, element) {
                $(element).find(_this3.SELECTOR_CHECKBOX_ATOM).prop("checked", false);
            });

            this.$placeholder.find(this.SELECTOR_VALUE_LABEL).remove();
            this.$options.removeClass(_Enums2.default.CLASS.IS_SELECTED).removeClass(this.CLASS_IS_DROPDOWN_VALUE);
            this.$el.removeClass(_Enums2.default.CLASS.IS_FILLED);
            this.$input.attr("value", "");
        }
    }]);

    return MDropdown;
}(_MDropdownCommon3.default);

// Export this so we can pick it up and import in main.js


module.exports = MDropdown;

},{"./../../../../js/base/logger.js":44,"./../../../../js/base/m-dropdown.js":45,"./../../enums.js":54}],60:[function(require,module,exports){
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _index = require("common/molecules/m-input/index");

var _index2 = _interopRequireDefault(_index);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var MInput = function (_BaseInput) {
    _inherits(MInput, _BaseInput);

    /**
     * Constructor, will run before page loaded
     */
    function MInput() {
        _classCallCheck(this, MInput);

        return _possibleConstructorReturn(this, (MInput.__proto__ || Object.getPrototypeOf(MInput)).apply(this, arguments));
    }

    /**
     * Destructor, will run after page unload (or destroy)
     */


    _createClass(MInput, [{
        key: "destroy",
        value: function destroy() {

            _get(MInput.prototype.__proto__ || Object.getPrototypeOf(MInput.prototype), "destroy", this).call(this);
        }
    }, {
        key: "_displayErrorMessage",
        value: function _displayErrorMessage(errormessage) {
            this.$placeholder.html(this.$placeholder.data("placeholder") + " <span>" + errormessage + "</span>");
        }
    }]);

    return MInput;
}(_index2.default);

// Export this so we can pick it up and import in main.js


module.exports = MInput;

},{"common/molecules/m-input/index":7}],61:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _appeaserComponentBase = require('./../../../../js/base/appeaser-component-base.js');

var _appeaserComponentBase2 = _interopRequireDefault(_appeaserComponentBase);

var _Logger = require('./../../../../js/base/logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var MProductZoom = function (_AppeaserComponentBas) {
    _inherits(MProductZoom, _AppeaserComponentBas);

    /**
     * Constructor, will run before page loaded
     */
    function MProductZoom() {
        _classCallCheck(this, MProductZoom);

        var _this = _possibleConstructorReturn(this, (MProductZoom.__proto__ || Object.getPrototypeOf(MProductZoom)).apply(this, arguments));

        _Logger2.default.INFO(_this.constructor.name, ':: Constructor');

        _this._jQueryScopeBinding();
        _this._declareConstants();
        _this.subscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed
        return _this;
    }

    /**
     * Destructor, will run after page unload (or destroy)
     */


    _createClass(MProductZoom, [{
        key: 'destroy',
        value: function destroy() {
            _Logger2.default.INFO(this.constructor.name, ':: Destructor');

            this._detachDOMListeners();
            this._detachSubscribers();

            _get(MProductZoom.prototype.__proto__ || Object.getPrototypeOf(MProductZoom.prototype), 'destroy', this).call(this);
        }

        /************************************************************************************************************
         ******************************************** Internal functions ********************************************
         ************************************************************************************************************/

        /**
         * Declare class constants here
         * @private
         */

    }, {
        key: '_declareConstants',
        value: function _declareConstants() {
            this.SELECTOR_CLOSE = '.js-close-icon';
            this.SELECTOR_IMAGE_WRAPPER = '.img-wrapper';

            this.CLASS_FULL_OPACITY = 'full-opacity';
            this.CLASS_O_SLIDER = 'o-slider';

            this.SLIDER_SPEED = 1500;
        }

        /**
         * Runs on DOM Ready
         * Should be used to attach DOM listeners etc
         * @private
         */

    }, {
        key: '_onDOMReady',
        value: function _onDOMReady() {
            _Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');

            this.$closeIcon = this.$el.find(this.SELECTOR_CLOSE);
            this.$imgWrapper = this.$el.find(this.SELECTOR_IMAGE_WRAPPER);

            if (Modernizr.touchevents) {
                this.$imgWrapper.panzoom({
                    minScale: 1,
                    contain: 'invert'
                });
            }

            this._attachSubscribers();
            this._attachDOMListeners();
        }

        /**
         * Scopes "this" to use the "this" of the outside function
         * Since JQuery creates a new function with a new "this"
         * Attach all functions that needs to be binded here
         * @private
         */

    }, {
        key: '_jQueryScopeBinding',
        value: function _jQueryScopeBinding() {
            this._onDOMReady = this._onDOMReady.bind(this);
            this._show = this._show.bind(this);
            this._hide = this._hide.bind(this);
        }

        /**
         * Attach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_attachSubscribers',
        value: function _attachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');

            this.subscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
            this.subscribe(_Enums2.default.ACTION.SHOW_ZOOMED_IMAGE, this._show);
        }

        /**
         * Detach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_detachSubscribers',
        value: function _detachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');

            this.unsubscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
            this.unsubscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
            this.unsubscribe(_Enums2.default.ACTION.SHOW_ZOOMED_IMAGE, this._show);
        }

        /**
         * At this point the framework is ready.
         * Add all publish events here (if any)
         * @private
         */

    }, {
        key: '_onFrameworkReady',
        value: function _onFrameworkReady() {}

        /**
         * Attach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_attachDOMListeners',
        value: function _attachDOMListeners() {
            this.$closeIcon.on('click', this._hide);
        }

        /**
         * Detach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_detachDOMListeners',
        value: function _detachDOMListeners() {
            this.$closeIcon.off('click', this._hide);
        }

        /************************************************************************************************************
         ****************************************** Implementation functions ****************************************
         ************************************************************************************************************/

        /**
         * Handles opening of the overlay and makes sure to trigger the correct zoom
         * @param imageSources
         * @private
         */

    }, {
        key: '_show',
        value: function _show(imageSources) {
            var _this2 = this;

            this.$el.addClass(_Enums2.default.CLASS.IS_VISIBLE_STATE);
            setTimeout(function () {
                _this2.$el.addClass(_this2.CLASS_FULL_OPACITY);
            }, 25);

            this.publish(_Enums2.default.ACTION.DISABLE_SCROLL);

            if (imageSources.allSources.length > 1) {
                this._showSliderZoom(imageSources.allSources, imageSources.allSources.indexOf(imageSources.currentSrc));
            } else {
                this._showSingleImageZoom(imageSources.currentSrc);
            }
        }

        /**
         * Hides the overlay
         * @param event
         * @private
         */

    }, {
        key: '_hide',
        value: function _hide(event) {
            var _this3 = this;

            event.preventDefault();

            this.$el.removeClass(this.CLASS_FULL_OPACITY);
            setTimeout(function () {
                _this3.$el.removeClass(_Enums2.default.CLASS.IS_VISIBLE_STATE);
            }, 250);

            this.publish(_Enums2.default.ACTION.ENABLE_SCROLL);
        }

        /**
         * Applies the slider zoom
         * @param allSources
         * @param currentImageIndex
         * @private
         */

    }, {
        key: '_showSliderZoom',
        value: function _showSliderZoom(allSources, currentImageIndex) {
            var _this4 = this;

            if (!this.slider) {
                (function () {
                    var $sliderWrapper = $("<div class='" + _Enums2.default.SWIPER.CLASS_WRAPPER + "'></div>");

                    allSources.forEach(function (element) {
                        $sliderWrapper.append($("<div class='" + _Enums2.default.SWIPER.CLASS_SLIDE + "'> " + "<img alt='zoomed image' src='" + element + "' class='a-image'/> " + "</div>"));
                    });

                    _this4.$imgWrapper.append($sliderWrapper).append("<div class='" + _Enums2.default.SWIPER.CLASS_ARROW_NEXT + "'></div>").append("<div class='" + _Enums2.default.SWIPER.CLASS_ARROW_PREV + "'></div>");

                    _this4.$imgWrapper.addClass(_this4.CLASS_O_SLIDER).addClass(_Enums2.default.SWIPER.CLASS_CONTAINER);

                    _this4.slider = new Swiper(_this4.$imgWrapper, {
                        nextButton: _Enums2.default.SWIPER.SELECTOR_ARROW_NEXT,
                        prevButton: _Enums2.default.SWIPER.SELECTOR_ARROW_PREV,
                        speed: _this4.SLIDER_SPEED,
                        loop: true,
                        initialSlide: currentImageIndex
                    });
                })();
            } else {
                // Unfortunately we need to calculate this since Swiper wont do it for us in loop mode
                var $allSlides = this.$el.find(_Enums2.default.SWIPER.SELECTOR_SLIDE),
                    matchingSlide = this.$el.find("[data-swiper-slide-index='" + currentImageIndex + "']:not(.swiper-slide-duplicate)"),
                    matchingSlideIndex = $allSlides.index(matchingSlide);

                this.slider.slideTo(matchingSlideIndex, 0);
            }
        }

        /**
         * Shows a single image zoom
         * @param imageSrc
         * @private
         */

    }, {
        key: '_showSingleImageZoom',
        value: function _showSingleImageZoom(imageSrc) {
            if (!this.$imgWrapper.children().length) {
                this.$imgWrapper.append($("<img alt='zoomed image' src='" + imageSrc + "' class='a-image'/>"));
            }
        }
    }]);

    return MProductZoom;
}(_appeaserComponentBase2.default);

// Export this so we can pick it up and import in main.js


module.exports = MProductZoom;

},{"./../../../../js/base/appeaser-component-base.js":39,"./../../../../js/base/logger.js":44,"./../../enums.js":54}],62:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _appeaserComponentBase = require('./../../../../js/base/appeaser-component-base.js');

var _appeaserComponentBase2 = _interopRequireDefault(_appeaserComponentBase);

var _Logger = require('./../../../../js/base/logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var MVideoTile = function (_AppeaserComponentBas) {
    _inherits(MVideoTile, _AppeaserComponentBas);

    /**
     * Constructor, will run before page loaded
     */
    function MVideoTile() {
        _classCallCheck(this, MVideoTile);

        var _this = _possibleConstructorReturn(this, (MVideoTile.__proto__ || Object.getPrototypeOf(MVideoTile)).apply(this, arguments));

        _Logger2.default.INFO(_this.constructor.name, ':: Constructor');

        _this._jQueryScopeBinding();
        _this._declareConstants();
        _this.subscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed
        return _this;
    }

    /**
     * Destructor, will run after page unload (or destroy)
     */


    _createClass(MVideoTile, [{
        key: 'destroy',
        value: function destroy() {
            _Logger2.default.INFO(this.constructor.name, ':: Destructor');

            this._detachDOMListeners();
            this._detachSubscribers();

            _get(MVideoTile.prototype.__proto__ || Object.getPrototypeOf(MVideoTile.prototype), 'destroy', this).call(this);
        }

        /************************************************************************************************************
         ******************************************** Internal functions ********************************************
         ************************************************************************************************************/

        /**
         * Declare class constants here
         * @private
         */

    }, {
        key: '_declareConstants',
        value: function _declareConstants() {
            this.AUTOPLAYED_VIDEO = '.a-video';
            this.VIDEO_PLAY_ICON = '.a-icon-play';
            this.SELECTOR_IFRAME = 'iframe';
        }

        /**
         * Called on onDomReady, cache DOM elements
         * @private
         */

    }, {
        key: '_cacheDOMElements',
        value: function _cacheDOMElements() {
            this.$autoplayVideo = this.$el.find(this.AUTOPLAYED_VIDEO);
            this.$videoPlayIcon = this.$el.find(this.VIDEO_PLAY_ICON);
            this.$window = $(window);
            this.$iframe = this.$el.find(this.SELECTOR_IFRAME);
        }

        /**
         * Scopes "this" to use the "this" of the outside function
         * Since JQuery creates a new function with a new "this"
         * Attach all functions that needs to be binded here
         * @private
         */

    }, {
        key: '_jQueryScopeBinding',
        value: function _jQueryScopeBinding() {
            this._onDOMReady = this._onDOMReady.bind(this);
            this._onScroll = this._onScroll.bind(this);
            this._onResize = this._onResize.bind(this);
            this._onPlayIconClick = this._onPlayIconClick.bind(this);
            this._onPause = this._onPause.bind(this);
        }

        /**
         * Attach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_attachSubscribers',
        value: function _attachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');

            this.subscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
        }

        /**
         * Detach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_detachSubscribers',
        value: function _detachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');

            this.unsubscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
            this.unsubscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
        }

        /**
         * At this point the framework is ready.
         * Add all publish events here (if any)
         * @private
         */

    }, {
        key: '_onFrameworkReady',
        value: function _onFrameworkReady() {}

        /**
         * Attach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_attachDOMListeners',
        value: function _attachDOMListeners() {
            if (this.$iframe.length) {
                this.$window.on('resize', this._onResize);
            } else if (this.$autoplayVideo.length && Modernizr.videoautoplay) {
                this.$window.on('scroll', this._onScroll);
            }

            this.$videoPlayIcon.on('click', this._onPlayIconClick);
        }

        /**
         * Detach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_detachDOMListeners',
        value: function _detachDOMListeners() {
            if (this.$iframe.length) {
                this.$window.off('resize', this._onResize);
            } else if (this.$autoplayVideo.length && Modernizr.videoautoplay) {
                this.$window.off('scroll', this._onScroll);
            }

            this.$videoPlayIcon.off('click', this._onPlayIconClick);
            this.$autoplayVideo.off('pause', this._onPause);
        }

        /**
         * Runs on DOM Ready
         * Should be used to attach DOM listeners etc
         * @private
         */

    }, {
        key: '_onDOMReady',
        value: function _onDOMReady() {
            var _this2 = this;

            _Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');
            this._cacheDOMElements();
            this._attachSubscribers();

            Modernizr.on('videoautoplay', function () {
                _this2._checkAutoPlay();
                _this2._attachDOMListeners();

                if (_this2.$iframe.length) {
                    _this2._onResize();
                } else if (_this2.$autoplayVideo.length) {
                    _this2._onScroll();
                }
            });
        }

        /************************************************************************************************************
         ****************************************** Implementation functions ****************************************
         ************************************************************************************************************/

        /**
         * Scroll event
         * @private
         */

    }, {
        key: '_onScroll',
        value: function _onScroll() {
            var scrollTop = this.$window.scrollTop(),
                elHeight = this.$el.height(),
                elOffset = this.$el.offset().top,
                windowHeight = this.$window.height();

            if (windowHeight + scrollTop > elOffset && elOffset + elHeight > scrollTop) {
                if (!this._isPlaying()) {
                    this.$autoplayVideo[0].play();
                }
            } else {
                if (this._isPlaying()) {
                    this.$autoplayVideo[0].pause();
                    this.$autoplayVideo[0].currentTime = 0;
                }
            }
        }

        /**
         * Handles play icon click
         * @private
         */

    }, {
        key: '_onPlayIconClick',
        value: function _onPlayIconClick() {
            this.$videoPlayIcon.removeClass(_Enums2.default.CLASS.IS_VISIBLE_STATE);

            this.$autoplayVideo[0].play();
        }

        /**
         * Height is hard-set for the now official Stories image ratio of 1:1.4
         * @private
         */

    }, {
        key: '_onResize',
        value: function _onResize() {
            // Calculate width with bounding rect in order to get subpixel value
            var aFormatHeight = Math.round(this.$el[0].getBoundingClientRect().width * 1.4);

            this.$el.css('height', aFormatHeight + 'px');
        }

        /**
         * Tests if the video is playing
         * @private
         */

    }, {
        key: '_isPlaying',
        value: function _isPlaying() {
            var video = this.$autoplayVideo[0];

            return video.currentTime && !video.paused && !video.ended && video.readyState > 2;
        }

        /**
         * checks if the mobile browser supports video autoplay
         * @private
         */

    }, {
        key: '_checkAutoPlay',
        value: function _checkAutoPlay() {
            if (!Modernizr.videoautoplay) {
                this.$videoPlayIcon.addClass(_Enums2.default.CLASS.IS_VISIBLE_STATE);
                this.$autoplayVideo.on('pause', this._onPause);
            }
        }

        /**
         * Handles pausing of video
         * @private
         */

    }, {
        key: '_onPause',
        value: function _onPause() {
            this.$videoPlayIcon.addClass(_Enums2.default.CLASS.IS_VISIBLE_STATE);
        }
    }]);

    return MVideoTile;
}(_appeaserComponentBase2.default);

// Export this so we can pick it up and import in main.js


module.exports = MVideoTile;

},{"./../../../../js/base/appeaser-component-base.js":39,"./../../../../js/base/logger.js":44,"./../../enums.js":54}],63:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _accordion = require('./../../../../js/base/accordion.js');

var _accordion2 = _interopRequireDefault(_accordion);

var _Enums = require('./../../enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

var _Logger = require('./../../../../js/base/logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OAccordion = function (_Accordion) {
    _inherits(OAccordion, _Accordion);

    /**
     * Constructor, will run before page loaded
     */
    function OAccordion() {
        _classCallCheck(this, OAccordion);

        return _possibleConstructorReturn(this, (OAccordion.__proto__ || Object.getPrototypeOf(OAccordion)).apply(this, arguments));
    }

    /**
     * Destructor, will run after page unload (or destroy)
     */


    _createClass(OAccordion, [{
        key: 'destroy',
        value: function destroy() {
            _get(OAccordion.prototype.__proto__ || Object.getPrototypeOf(OAccordion.prototype), 'destroy', this).call(this);
        }

        /************************************************************************************************************
         ******************************************** Internal functions ********************************************
         ************************************************************************************************************/

        /**
         * Declare class constants here
         * @private
         */

    }, {
        key: '_declareConstants',
        value: function _declareConstants() {
            _get(OAccordion.prototype.__proto__ || Object.getPrototypeOf(OAccordion.prototype), '_declareConstants', this).call(this);
            this.SELECTOR_ACCORDION_CONTENT = '.accordion-content';
            this.SELECTOR_ACCORDION = '.o-accordion';
            this.SELECTOR_HEADER = '.accordion-header';

            this.ANIMATION_DURATION = 400;
        }

        /**
         * Runs on DOM Ready
         * Should be used to attach DOM listeners etc
         * @private
         */

    }, {
        key: '_onDOMReady',
        value: function _onDOMReady() {

            this._cacheDOMElements();

            _get(OAccordion.prototype.__proto__ || Object.getPrototypeOf(OAccordion.prototype), '_onDOMReady', this).call(this);
        }

        /**
         * Caching DOM elements for performance
         * @private
         */

    }, {
        key: '_cacheDOMElements',
        value: function _cacheDOMElements() {
            this.$accordionContent = this.$el.find(this.SELECTOR_ACCORDION_CONTENT);
            this.$accordionHeader = this.$el.find(this.SELECTOR_HEADER);
        }

        /**
         * Attach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_attachDOMListeners',
        value: function _attachDOMListeners() {
            _Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');

            this.$accordionHeader.on('click', this._onClickLink);
        }

        /**
         * Detach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_detachDOMListeners',
        value: function _detachDOMListeners() {
            _Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');

            this.$accordionHeader.off('click', this._onClickLink);
        }

        /************************************************************************************************************
         ****************************************** Implementation functions ****************************************
         ************************************************************************************************************/

    }, {
        key: '_onClickLink',
        value: function _onClickLink(event) {
            event.preventDefault();

            if (this.$el.hasClass(_Enums2.default.CLASS.IS_DISABLED_STATE)) return;

            if (this.isExclusive) {
                var $otherExclusives = this.$exclusiveGroup.not(this.$el);
                $otherExclusives.find(this.SELECTOR_ACCORDION_CONTENT).slideUp(this.SLIDE_DELAY_TIME);
                $otherExclusives.removeClass(_Enums2.default.CLASS.IS_VISIBLE_STATE);
            }

            if (this.$el.hasClass(_Enums2.default.CLASS.IS_VISIBLE_STATE)) {
                this.$accordionContent.stop().slideUp(this.ANIMATION_DURATION);
                this.$el.removeClass(_Enums2.default.CLASS.IS_VISIBLE_STATE);
            } else {
                this.$el.addClass(_Enums2.default.CLASS.IS_VISIBLE_STATE);
                this.$accordionContent.stop().hide().slideDown(this.ANIMATION_DURATION);
            }
        }
    }]);

    return OAccordion;
}(_accordion2.default);

// Export this so we can pick it up and import in main.js


module.exports = OAccordion;

},{"./../../../../js/base/accordion.js":38,"./../../../../js/base/logger.js":44,"./../../enums.js":54}],64:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _index = require('common/organisms/o-address-box-edit/index');

var _index2 = _interopRequireDefault(_index);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OAddressBoxEdit = function (_BaseAddressBoxEdit) {
    _inherits(OAddressBoxEdit, _BaseAddressBoxEdit);

    /**
     * Constructor, will run before page loaded
     */
    function OAddressBoxEdit() {
        _classCallCheck(this, OAddressBoxEdit);

        return _possibleConstructorReturn(this, (OAddressBoxEdit.__proto__ || Object.getPrototypeOf(OAddressBoxEdit)).apply(this, arguments));
    }

    /**
     * Destructor, will run after page unload (or destroy)
     */


    _createClass(OAddressBoxEdit, [{
        key: 'destroy',
        value: function destroy() {
            _get(OAddressBoxEdit.prototype.__proto__ || Object.getPrototypeOf(OAddressBoxEdit.prototype), 'destroy', this).call(this);
        }

        /************************************************************************************************************
         ****************************************** Implementation functions ****************************************
         ************************************************************************************************************/

        /**
         * Overriding to get the correct display property
         * @param e
         * @private
         */

    }, {
        key: '_onEditBtnClick',
        value: function _onEditBtnClick(e) {
            var isEditing = this.isEditing;

            _get(OAddressBoxEdit.prototype.__proto__ || Object.getPrototypeOf(OAddressBoxEdit.prototype), '_onEditBtnClick', this).call(this, e);

            if (!isEditing) {
                this.$addressForm.css('display', 'flex');
            }
        }
    }]);

    return OAddressBoxEdit;
}(_index2.default);

// Export this so we can pick it up and import in main.js


module.exports = OAddressBoxEdit;

},{"common/organisms/o-address-box-edit/index":16}],65:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _index = require('themes/stories/organisms/o-slider/index');

var _index2 = _interopRequireDefault(_index);

var _Logger = require('./../../../../js/base/logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OBlogHero = function (_Slider) {
    _inherits(OBlogHero, _Slider);

    /**
     * Constructor, will run before page loaded
     */
    function OBlogHero() {
        _classCallCheck(this, OBlogHero);

        return _possibleConstructorReturn(this, (OBlogHero.__proto__ || Object.getPrototypeOf(OBlogHero)).apply(this, arguments));
    }

    /**
     * Destructor, will run after page unload (or destroy)
     */


    _createClass(OBlogHero, [{
        key: 'destroy',
        value: function destroy() {
            _get(OBlogHero.prototype.__proto__ || Object.getPrototypeOf(OBlogHero.prototype), 'destroy', this).call(this);
        }

        /************************************************************************************************************
         ******************************************** Internal functions ********************************************
         ************************************************************************************************************/

    }, {
        key: '_onDOMReady',
        value: function _onDOMReady() {
            var _this2 = this;

            _Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');

            this._attachSubscribers();
            this._cacheDOMElements();

            var color = this.$slider.css("color");

            this.settings = {
                speed: Modernizr.touchevents ? this.TOUCH_SPEED : this.SPEED,
                nextButton: _Enums2.default.SWIPER.SELECTOR_ARROW_NEXT,
                prevButton: _Enums2.default.SWIPER.SELECTOR_ARROW_PREV,
                pagination: _Enums2.default.SWIPER.SELECTOR_PAGINATION,
                paginationBulletRender: function paginationBulletRender(swiper, i, className) {
                    return '<span class=\'' + className + '\' style=\'background-color: ' + color + '\'></span>';
                },
                paginationClickable: true,
                onInit: function onInit() {
                    _this2.$el.addClass(_Enums2.default.SWIPER.CLASS_INITIALIZED);
                },
                loop: true
            };

            this._initSlider();

            this._attachDOMListeners();
        }
    }]);

    return OBlogHero;
}(_index2.default);

// Export this so we can pick it up and import in main.js


module.exports = OBlogHero;

},{"./../../../../js/base/logger.js":44,"./../../enums.js":54,"themes/stories/organisms/o-slider/index":85}],66:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _index = require('common/organisms/o-checkout/index');

var _index2 = _interopRequireDefault(_index);

var _Enums = require('./../../enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OCheckout = function (_BaseCheckout) {
    _inherits(OCheckout, _BaseCheckout);

    /**
     * Constructor, will run before page loaded
     */
    function OCheckout() {
        _classCallCheck(this, OCheckout);

        return _possibleConstructorReturn(this, (OCheckout.__proto__ || Object.getPrototypeOf(OCheckout)).apply(this, arguments));
    }

    /**
     * Destructor, will run after page unload (or destroy)
     */


    _createClass(OCheckout, [{
        key: 'destroy',
        value: function destroy() {
            _get(OCheckout.prototype.__proto__ || Object.getPrototypeOf(OCheckout.prototype), 'destroy', this).call(this);
        }

        /************************************************************************************************************
         ******************************************** Internal functions ********************************************
         ************************************************************************************************************/

        /**
         * Declare class constants here
         * @private
         */

    }, {
        key: '_declareConstants',
        value: function _declareConstants() {
            _get(OCheckout.prototype.__proto__ || Object.getPrototypeOf(OCheckout.prototype), '_declareConstants', this).call(this);

            this.SELECTOR_MAIN_AREA = '.main-area';
            this.SELECTOR_SUMMARY_SECTION = '.section-summary';

            this.CLASS_IS_CLOSING = 'is-closing';

            this.SHOW_ANIMATION_DELAY = 850;
            this.SLIDE_DURATION = 500;
            this.SLIDE_UP_DELAY = 300;
            this.SLIDE_DOWN_DELAY = 200;
            this.SCROLL_DURATION = 500;
            this.SCROLL_DELAY = 200;

            this.MOBILE_SCROLL_OFFSET = 148;
            this.TABLET_SCROLL_OFFSET = 190;
            this.DESKTOP_SCROLL_OFFSET = 220;
            this.DESKTOP_STICKY_OFFSET = 176;
        }

        /************************************************************************************************************
         ****************************************** Implementation functions ****************************************
         ************************************************************************************************************/

        /**
         * On section completed
         * @private
         */

    }, {
        key: '_onSectionCompleted',
        value: function _onSectionCompleted() {
            var _this2 = this;

            var $activeSection = this.$el.find(this.SELECTOR_ACTIVE_SECTION),
                $activeMainArea = $activeSection.find(this.SELECTOR_MAIN_AREA),
                $activeSummarySection = $activeSection.find(this.SELECTOR_SUMMARY_SECTION),
                activeMarginDiff = parseInt($activeMainArea.css('margin-bottom')) - parseInt($activeSummarySection.css('margin-bottom')),
                $nextSection = $activeSection.next(),
                $nextMainArea = $nextSection.find(this.SELECTOR_MAIN_AREA);

            $activeSection.addClass(this.CLASS_IS_CLOSING);

            $activeMainArea.css('min-height', $activeSummarySection.outerHeight() - activeMarginDiff);

            $activeMainArea.delay(this.SLIDE_UP_DELAY).slideUp(this.SLIDE_DURATION, function () {
                $activeSection.removeClass(_this2.CLASS_IS_CLOSING).addClass(_Enums2.default.CLASS.IS_CLOSED_STATE);
                $activeMainArea.css('min-height', '').css('display', '');
            });

            setTimeout(function () {
                _this2._scrollToSection($nextSection, _this2._getCurrentScrollOffset());

                $nextMainArea.delay(_this2.SLIDE_DOWN_DELAY).slideDown(_this2.SLIDE_DURATION, function () {
                    $nextSection.removeClass(_Enums2.default.CLASS.IS_DISABLED_STATE).css('display', '');
                });
            }, this.SHOW_ANIMATION_DELAY);
        }

        /**
         * @returns {number} The correct scroll offset depending on breakpoint
         * @private
         */

    }, {
        key: '_getCurrentScrollOffset',
        value: function _getCurrentScrollOffset() {
            if (Modernizr.mq(_Enums2.default.MQ.IS_MOBILE)) {
                return this.MOBILE_SCROLL_OFFSET;
            } else if (Modernizr.mq(_Enums2.default.MQ.IS_TABLET)) {
                return this.TABLET_SCROLL_OFFSET;
            } else if ($(window).scrollTop() > 0) {
                return this.DESKTOP_STICKY_OFFSET;
            } else {
                return this.DESKTOP_SCROLL_OFFSET;
            }
        }
    }]);

    return OCheckout;
}(_index2.default);

// Export this so we can pick it up and import in main.js


module.exports = OCheckout;

},{"./../../enums.js":54,"common/organisms/o-checkout/index":19}],67:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _appeaserComponentBase = require('./../../../../js/base/appeaser-component-base.js');

var _appeaserComponentBase2 = _interopRequireDefault(_appeaserComponentBase);

var _Logger = require('./../../../../js/base/logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OCountrySelector = function (_AppeaserComponentBas) {
    _inherits(OCountrySelector, _AppeaserComponentBas);

    /**
     * Constructor, will run before page loaded
     */
    function OCountrySelector() {
        _classCallCheck(this, OCountrySelector);

        var _this = _possibleConstructorReturn(this, (OCountrySelector.__proto__ || Object.getPrototypeOf(OCountrySelector)).apply(this, arguments));

        _Logger2.default.INFO(_this.constructor.name, ':: Constructor');

        _this._jQueryScopeBinding();
        _this._declareConstants();

        _this.subscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed
        return _this;
    }

    /**
     * Destructor, will run after page unload (or destroy)
     */


    _createClass(OCountrySelector, [{
        key: 'destroy',
        value: function destroy() {
            _Logger2.default.INFO(this.constructor.name, ':: Destructor');

            this._detachSubscribers();
            this._detachMQHandlers();

            _get(OCountrySelector.prototype.__proto__ || Object.getPrototypeOf(OCountrySelector.prototype), 'destroy', this).call(this);
        }

        /************************************************************************************************************
         ******************************************** Internal functions ********************************************
         ************************************************************************************************************/

        /**
         * Declare class constants here
         * @private
         */

    }, {
        key: '_declareConstants',
        value: function _declareConstants() {
            this.SELECTOR_COUNTRY_BOX = '.choose-country-box';
        }

        /**
         * Called on onDomReady, cache DOM elements
         * @private
         */

    }, {
        key: '_cacheDOMElements',
        value: function _cacheDOMElements() {
            this.$window = $(window);
            this.$countryBox = this.$el.find(this.SELECTOR_COUNTRY_BOX);
            this.countryBoxHeight = this.$countryBox.outerHeight();
        }

        /**
         * Scopes "this" to use the "this" of the outside function
         * Since JQuery creates a new function with a new "this"
         * Attach all functions that needs to be binded here
         * @private
         */

    }, {
        key: '_jQueryScopeBinding',
        value: function _jQueryScopeBinding() {
            this._onDOMReady = this._onDOMReady.bind(this);
            this._onWindowRezise = this._onWindowRezise.bind(this);
        }

        /**
         * Attach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_attachSubscribers',
        value: function _attachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');
            this.subscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
        }

        /**
         * Detach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_detachSubscribers',
        value: function _detachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');

            this.unsubscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
            this.unsubscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
        }

        /**
         * At this point the framework is ready.
         * Add all publish events here (if any)
         * @private
         */

    }, {
        key: '_onFrameworkReady',
        value: function _onFrameworkReady() {}

        /**
         * Runs on DOM Ready
         * Should be used to attach DOM listeners etc
         * @private
         */

    }, {
        key: '_onDOMReady',
        value: function _onDOMReady() {
            _Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');

            this._cacheDOMElements();
            this._attachSubscribers();

            this._attachMQHandlers();
        }
    }, {
        key: '_attachMQHandlers',
        value: function _attachMQHandlers() {
            this.MQDesktopHandler = {
                deferSetup: true,
                match: this._onDesktopMatch.bind(this),
                unMatch: this._onDesktopUnMatch.bind(this)
            };
            enquire.register(_Enums2.default.MQ.IS_DESKTOP, this.MQDesktopHandler);
        }
    }, {
        key: '_detachMQHandlers',
        value: function _detachMQHandlers() {
            enquire.unregister(_Enums2.default.MQ.IS_DESKTOP, this.MQDesktopHandler);
        }

        /************************************************************************************************************
         ****************************************** Implementation functions ****************************************
         ************************************************************************************************************/

        /**
         * Calculates the height of the window so the image always can have the correct height
         * @param options - not mandatory
         * @private
         */

    }, {
        key: '_onWindowRezise',
        value: function _onWindowRezise() {
            var height = $(document).height();

            if (height <= this.countryBoxHeight) {
                this.$el.css('height', this.countryBoxHeight);
            }
        }
    }, {
        key: '_onDesktopMatch',
        value: function _onDesktopMatch() {
            this.$window.on('resize', this._onWindowRezise);
            this._onWindowRezise();
        }
    }, {
        key: '_onDesktopUnMatch',
        value: function _onDesktopUnMatch() {
            this.$window.off('resize', this._onWindowRezise);
        }
    }]);

    return OCountrySelector;
}(_appeaserComponentBase2.default);

// Export this so we can pick it up and import in main.js


module.exports = OCountrySelector;

},{"./../../../../js/base/appeaser-component-base.js":39,"./../../../../js/base/logger.js":44,"./../../enums.js":54}],68:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _appeaserComponentBase = require('./../../../../js/base/appeaser-component-base.js');

var _appeaserComponentBase2 = _interopRequireDefault(_appeaserComponentBase);

var _Logger = require('./../../../../js/base/logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ODelivery = function (_AppeaserComponentBas) {
    _inherits(ODelivery, _AppeaserComponentBas);

    /**
     * Constructor, will run before page loaded
     */
    function ODelivery() {
        _classCallCheck(this, ODelivery);

        var _this = _possibleConstructorReturn(this, (ODelivery.__proto__ || Object.getPrototypeOf(ODelivery)).apply(this, arguments));

        _Logger2.default.INFO(_this.constructor.name, ':: Constructor');

        _this._jQueryScopeBinding();
        _this._declareConstants();
        _this.subscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed
        return _this;
    }

    /**
     * Destructor, will run after page unload (or destroy)
     */


    _createClass(ODelivery, [{
        key: 'destroy',
        value: function destroy() {
            _Logger2.default.INFO(this.constructor.name, ':: Destructor');

            this._detachDOMListeners();
            this._detachSubscribers();

            _get(ODelivery.prototype.__proto__ || Object.getPrototypeOf(ODelivery.prototype), 'destroy', this).call(this);
        }

        /************************************************************************************************************
         ******************************************** Internal functions ********************************************
         ************************************************************************************************************/

        /**
         * Declare class constants here
         * @private
         */

    }, {
        key: '_declareConstants',
        value: function _declareConstants() {
            this.SELECTOR_RADIO_BUTTON_SELECTORS = '.m-radio-button-selector .m-radio-button';
            this.SELECTOR_DELIVERY_OPTION = ".delivery-option:not(.not-available)";
            this.SELECTOR_RADIO_BUTTON = '.a-radio-button';
            this.SELECTOR_ADDRESS_DISABLE_BUTTON = '.delivery-notification .is-primary';
            this.SELECTOR_TRIGGER_CANCEL = ".delivery-change-address-section .js-cancel-change";
            this.SELECTOR_HOME_DELIVERY = '.o-home-delivery';

            this.CLASS_IS_CHANGING_ADDRESS = 'is-changing-address';

            this.CLASS_DELIVERY_OPTION_SELECTED = 'has-selected-delivery-option';
        }

        /**
         * Runs on DOM Ready
         * Should be used to attach DOM listeners etc
         * @private
         */

    }, {
        key: '_onDOMReady',
        value: function _onDOMReady() {
            _Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');

            this._cacheDOMElements();
            this._attachSubscribers();
            this._attachDOMListeners();
        }

        /**
         * Caching DOM elements for performance
         * @private
         */

    }, {
        key: '_cacheDOMElements',
        value: function _cacheDOMElements() {
            this.$radioButtonSelectors = this.$el.find(this.SELECTOR_RADIO_BUTTON_SELECTORS);
            this.$deliveryOptions = this.$el.find(this.SELECTOR_DELIVERY_OPTION);
            this.$addressDisabledButton = this.$el.find(this.SELECTOR_ADDRESS_DISABLE_BUTTON);
            this.$triggerCancel = this.$el.find(this.SELECTOR_TRIGGER_CANCEL);
            this.$homeDelivery = this.$el.find(this.SELECTOR_HOME_DELIVERY);

            this.buttonInitallyEnabled = !this.$addressDisabledButton.prop('disabled');
        }

        /**
         * Scopes "this" to use the "this" of the outside function
         * Since JQuery creates a new function with a new "this"
         * Attach all functions that needs to be binded here
         * @private
         */

    }, {
        key: '_jQueryScopeBinding',
        value: function _jQueryScopeBinding() {
            this._onRadioButtonSelectorClick = this._onRadioButtonSelectorClick.bind(this);
            this._onDeliveryOptionClick = this._onDeliveryOptionClick.bind(this);
        }

        /**
         * Attach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_attachSubscribers',
        value: function _attachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');

            this.subscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

            if (this.buttonInitallyEnabled) {
                this.subscribe(_Enums2.default.ACTION.ENABLE_DELIVERY_CONTINUE_BUTTON, this._enableDeliveryContinueButton);
                this.subscribe(_Enums2.default.ACTION.DISABLE_DELIVERY_CONTINUE_BUTTON, this._disableDeliveryContinueButton);
            }
        }

        /**
         * Detach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_detachSubscribers',
        value: function _detachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');

            this.unsubscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
            this.unsubscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

            if (!this.buttonInitallyEnabled) {
                this.unsubscribe(_Enums2.default.ACTION.ENABLE_DELIVERY_CONTINUE_BUTTON, this._enableDeliveryContinueButton);
                this.unsubscribe(_Enums2.default.ACTION.DISABLE_DELIVERY_CONTINUE_BUTTON, this._disableDeliveryContinueButton);
            }
        }

        /**
         * At this point the framework is ready.
         * Add all publish events here (if any)
         * @private
         */

    }, {
        key: '_onFrameworkReady',
        value: function _onFrameworkReady() {}

        /**
         * Attach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_attachDOMListeners',
        value: function _attachDOMListeners() {
            this.$radioButtonSelectors.on("click", this._onRadioButtonSelectorClick);
            this.$deliveryOptions.on("click", this._onDeliveryOptionClick);
        }

        /**
         * Detach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_detachDOMListeners',
        value: function _detachDOMListeners() {
            this.$radioButtonSelectors.off("click", this._onRadioButtonSelectorClick);
            this.$deliveryOptions.off("click", this._onDeliveryOptionClick);
        }

        /************************************************************************************************************
         ****************************************** Implementation functions ****************************************
         ************************************************************************************************************/

        /**
         * If click on change delivery address then continue button show disable
         * @private
         */

    }, {
        key: '_disableDeliveryContinueButton',
        value: function _disableDeliveryContinueButton() {
            this.$addressDisabledButton.attr('disabled', 'disabled');
            this.$addressDisabledButton.addClass(_Enums2.default.CLASS.IS_DISABLED_STATE);
        }

        /**
         * If click on save address and Cancel buttons then continue button enable
         * @private
         */

    }, {
        key: '_enableDeliveryContinueButton',
        value: function _enableDeliveryContinueButton() {
            this.$addressDisabledButton.removeAttr('disabled');
            this.$addressDisabledButton.removeClass(_Enums2.default.CLASS.IS_DISABLED_STATE);
        }

        /**
         * Checks if any delivery option has been selected so that we can display the continue buttons
         * @private
         */

    }, {
        key: '_onRadioButtonSelectorClick',
        value: function _onRadioButtonSelectorClick() {
            var _this2 = this;

            this.$radioButtonSelectors.find(this.SELECTOR_RADIO_BUTTON).each(function (index, element) {
                if (element.checked) {
                    _this2.$el.addClass(_this2.CLASS_DELIVERY_OPTION_SELECTED);
                    _this2.$radioButtonSelectors.off("click", _this2._onRadioButtonSelectorClick);
                    return;
                }
            });
        }

        /**
         * Trigger cancel button if user leaves the add address state view without saving
         * @private
         */

    }, {
        key: '_onDeliveryOptionClick',
        value: function _onDeliveryOptionClick() {
            if (this.$homeDelivery.hasClass(this.CLASS_IS_CHANGING_ADDRESS)) {
                this.$triggerCancel.trigger('click');
            }
        }
    }]);

    return ODelivery;
}(_appeaserComponentBase2.default);

// Export this so we can pick it up and import in main.js


module.exports = ODelivery;

},{"./../../../../js/base/appeaser-component-base.js":39,"./../../../../js/base/logger.js":44,"./../../enums.js":54}],69:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _appeaserComponentBase = require('./../../../../js/base/appeaser-component-base.js');

var _appeaserComponentBase2 = _interopRequireDefault(_appeaserComponentBase);

var _Logger = require('./../../../../js/base/logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OFilterContainer = function (_AppeaserComponentBas) {
    _inherits(OFilterContainer, _AppeaserComponentBas);

    /**
     * Constructor, will run before page loaded
     */
    function OFilterContainer() {
        _classCallCheck(this, OFilterContainer);

        var _this = _possibleConstructorReturn(this, (OFilterContainer.__proto__ || Object.getPrototypeOf(OFilterContainer)).apply(this, arguments));

        _Logger2.default.INFO(_this.constructor.name, ':: Constructor');

        _this._declareConstants();
        _this._jQueryScopeBinding();
        _this.subscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed
        return _this;
    }

    /**
     * Destructor, will run after page unload (or destroy)
     */


    _createClass(OFilterContainer, [{
        key: 'destroy',
        value: function destroy() {
            _Logger2.default.INFO(this.constructor.name, ':: Destructor');

            this._detachDOMListeners();
            this._detachSubscribers();
            this._detachMQHandlers();

            _get(OFilterContainer.prototype.__proto__ || Object.getPrototypeOf(OFilterContainer.prototype), 'destroy', this).call(this);
        }

        /************************************************************************************************************
         ******************************************** Internal functions ********************************************
         ************************************************************************************************************/

        /**
         * Declare class constants here
         * @private
         */

    }, {
        key: '_declareConstants',
        value: function _declareConstants() {
            this.SELECTOR_ICON_CLOSE = '.a-icon-close';
            this.SELECTOR_LINK_OPEN = '.filter-link';
            this.SELECTOR_FILTER_WRAPPER = '.filter-wrapper';
            this.SELECTOR_FILTER_CONTENT = '.filter-section';
            this.SELECTOR_HEADER = '.o-header';
            this.SELECTOR_SEARCH = '.o-search';

            this.CLASS_IN_SEARCH_RESULTS = 'is-in-search-results';
            this.CLASS_OVERLAY = 'is-filter-overlay';

            this.RESIZE_TIMER = 50;
        }

        /**
         * Runs on DOM Ready
         * Should be used to attach DOM listeners etc
         * @private
         */

    }, {
        key: '_onDOMReady',
        value: function _onDOMReady() {
            this.$window = $(window);
            this.$iconClose = this.$el.find(this.SELECTOR_ICON_CLOSE);
            this.$linkOpen = this.$el.find(this.SELECTOR_LINK_OPEN);
            this.$filterWrapper = this.$el.find(this.SELECTOR_FILTER_WRAPPER);
            this.$filterContent = this.$el.find(this.SELECTOR_FILTER_CONTENT);
            this.$header = $(this.SELECTOR_HEADER);
            this.$search = $(this.SELECTOR_SEARCH);

            this.isInSearchResults = this.$header.hasClass(this.CLASS_IN_SEARCH_RESULTS);

            this._attachDOMListeners();
            this._attachSubscribers();
            this._attachMQHandlers();
        }

        /**
         * Attach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_attachSubscribers',
        value: function _attachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');

            this.subscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
            this.subscribe(_Enums2.default.EVENT.ON_OVERLAY_CLICKED, this._closeFilter);
            this.subscribe(_Enums2.default.EVENT.ON_ERROR_BANNER_RESIZE, this._onErrorBannerResize);
        }

        /**
         * Detach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_detachSubscribers',
        value: function _detachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');

            this.unsubscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
            this.unsubscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
            this.unsubscribe(_Enums2.default.EVENT.ON_OVERLAY_CLICKED, this._closeFilter);
            this.unsubscribe(_Enums2.default.EVENT.ON_ERROR_BANNER_RESIZE, this._onErrorBannerResize);
        }

        /**
         * At this point the framework is ready.
         * Add all publish events here (if any)
         * @private
         */

    }, {
        key: '_onFrameworkReady',
        value: function _onFrameworkReady() {}

        /**
         * Attach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_attachDOMListeners',
        value: function _attachDOMListeners() {
            this.$iconClose.on('click', this._closeFilter);
            this.$linkOpen.on('click', this._openFilter);
            this.$window.on('scroll resize', this._makeSticky);
        }

        /**
         * Detach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_detachDOMListeners',
        value: function _detachDOMListeners() {
            this.$iconClose.off('click', this._closeFilter);
            this.$linkOpen.off('click', this._openFilter);
            this.$window.off('scroll resize', this._makeSticky);
        }
    }, {
        key: '_attachMQHandlers',
        value: function _attachMQHandlers() {

            this.MQDesktopHandler = {
                deferSetup: true,
                match: this._onDesktopMatch.bind(this)
            };

            enquire.register(_Enums2.default.MQ.IS_DESKTOP, this.MQDesktopHandler);
        }
    }, {
        key: '_detachMQHandlers',
        value: function _detachMQHandlers() {
            enquire.unregister(_Enums2.default.MQ.IS_DESKTOP, this.MQDesktopHandler);
        }

        /**
         * Scopes "this" to use the "this" of the outside function
         * Since JQuery creates a new function with a new "this"
         * Attach all functions that needs to be binded here
         * @private
         */

    }, {
        key: '_jQueryScopeBinding',
        value: function _jQueryScopeBinding() {
            this._openFilter = this._openFilter.bind(this);
            this._closeFilter = this._closeFilter.bind(this);
            this._makeSticky = this._makeSticky.bind(this);
        }

        /************************************************************************************************************
         ****************************************** Implementation functions ****************************************
         ************************************************************************************************************/

        /**
         * Displays the appropriate overlay
         * @private
         */

    }, {
        key: '_showOverlay',
        value: function _showOverlay() {
            this.publish(_Enums2.default.ACTION.SHOW_OVERLAY, {
                classes: this.CLASS_OVERLAY,
                keepScroll: true
            });
        }

        /**
         * Handles sticky logic
         * @private
         */

    }, {
        key: '_makeSticky',
        value: function _makeSticky() {
            var _this2 = this;

            setTimeout(function () {
                var threshold = _this2.$window.scrollTop();

                if (!Modernizr.mq(_Enums2.default.MQ.IS_DESKTOP)) {
                    threshold += _this2.$header.outerHeight(true);
                } else if (_this2.isInSearchResults) {
                    threshold += _this2.$search.outerHeight(true);
                } else {
                    threshold += parseInt(_this2.$header.css('margin-top'));
                }

                if (_this2.$el.offset().top < threshold) {
                    _this2.$el.addClass(_Enums2.default.CLASS.IS_STICKY);

                    if (!Modernizr.mq(_Enums2.default.MQ.IS_DESKTOP)) {
                        _this2.$filterWrapper.css('top', parseInt(_this2.$header.css('top')) + _this2.$header.outerHeight(true) + 'px');
                    } else if (_this2.isInSearchResults) {
                        _this2.$filterWrapper.css('top', _this2.$search.outerHeight(true));
                    } else {
                        _this2.$filterWrapper.css('top', _this2.$header.css('margin-top'));
                    }
                } else {
                    _this2.$el.removeClass(_Enums2.default.CLASS.IS_STICKY);
                    _this2.$filterWrapper.css('top', '');
                }
            }, this.RESIZE_TIMER);
        }

        /**
         * Opens filter
         * @private
         */

    }, {
        key: '_openFilter',
        value: function _openFilter(e) {
            e.preventDefault();

            this.$filterWrapper.addClass(_Enums2.default.CLASS.IS_OPEN_STATE);
            if (Modernizr.mq(_Enums2.default.MQ.MOBILE_AND_TABLET_RANGE)) {
                // [customizing-kjs] 필터 처음 열었을 때 스크롤 안되는 이슈 수정.
                this.publish(_Enums2.default.ACTION.ENABLE_SCROLL, { $touchScrollElement: this.$filterWrapper });
                this._showOverlay();
            }
        }

        /**
         * Close filter
         * @private
         */

    }, {
        key: '_closeFilter',
        value: function _closeFilter() {
            this.publish(_Enums2.default.EVENT.ON_FILTER_APPLY_BUTTON_CLICKED);
            if (this.$filterWrapper.hasClass(_Enums2.default.CLASS.IS_OPEN_STATE)) {
                this.publish(_Enums2.default.ACTION.ENABLE_SCROLL);
                this.publish(_Enums2.default.ACTION.HIDE_OVERLAY);
                this.$filterWrapper.removeClass(_Enums2.default.CLASS.IS_OPEN_STATE);
            }
        }

        /**
         * Handles error banner resize event.
         *
         * @param newHeight
         * @private
         */

    }, {
        key: '_onErrorBannerResize',
        value: function _onErrorBannerResize(newHeight) {
            if (!Modernizr.mq(_Enums2.default.MQ.IS_DESKTOP)) {
                this.$filterContent.css({ 'margin-top': newHeight, 'height': 'calc(100% - ' + newHeight + 'px' });
            }
        }

        /**
         * Clears styles to prepare for desktop view
         * @private
         */

    }, {
        key: '_onDesktopMatch',
        value: function _onDesktopMatch() {
            this.$filterContent.css({ 'margin-top': '', 'height': '' });
            this._closeFilter();
        }
    }]);

    return OFilterContainer;
}(_appeaserComponentBase2.default);

// Export this so we can pick it up and import in main.js


module.exports = OFilterContainer;

},{"./../../../../js/base/appeaser-component-base.js":39,"./../../../../js/base/logger.js":44,"./../../enums.js":54}],70:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _appeaserComponentBase = require('./../../../../js/base/appeaser-component-base.js');

var _appeaserComponentBase2 = _interopRequireDefault(_appeaserComponentBase);

var _Logger = require('./../../../../js/base/logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OFooter = function (_AppeaserComponentBas) {
  _inherits(OFooter, _AppeaserComponentBas);

  /**
   * Constructor, will run before page loaded
   */
  function OFooter() {
    _classCallCheck(this, OFooter);

    var _this = _possibleConstructorReturn(this, (OFooter.__proto__ || Object.getPrototypeOf(OFooter)).apply(this, arguments));

    _Logger2.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();
    _this._declareConstants();

    _this.subscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed
    return _this;
  }

  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OFooter, [{
    key: 'destroy',
    value: function destroy() {
      _Logger2.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();
      this._detachSubscribers();

      _get(OFooter.prototype.__proto__ || Object.getPrototypeOf(OFooter.prototype), 'destroy', this).call(this);
    }

    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: '_declareConstants',
    value: function _declareConstants() {
      this.CLASS_OPEN_MENU = 'has-open-menu';
      this.CLASS_OPEN_SUB_MENU = 'has-open-sub-menu';
      this.CLASS_OPEN_SEARCH = 'has-open-search';
      this.CLASS_OPEN_MINICART = 'has-open-minicart';

      this.CLASS_CLOSING_MENU = 'closing-menu';
      this.CLASS_CLOSING_SUB_MENU = 'closing-sub-menu';
      this.CLASS_CLOSING_SEARCH = 'closing-search';
      this.CLASS_CLOSING_MINICART = 'closing-minicart';

      this.MENU_CLOSE_TIME = 350;
      this.SUB_MENU_CLOSE_TIME = 500;
      this.SEARCH_CLOSE_TIME = 650;
    }

    /**
     * Called on onDomReady, cache DOM elements
     * @private
     */

  }, {
    key: '_cacheDOMElements',
    value: function _cacheDOMElements() {}

    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: '_jQueryScopeBinding',
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
    }

    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: '_attachSubscribers',
    value: function _attachSubscribers() {
      _Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
      this.subscribe(_Enums2.default.ACTION.SHOW_SEARCH, this._onSearchShow);
      this.subscribe(_Enums2.default.EVENT.ON_SEARCH_HIDDEN, this._onSearchHidden);
      this.subscribe(_Enums2.default.ACTION.OPEN_MAIN_MENU, this._onMenuOpen);
      this.subscribe(_Enums2.default.EVENT.ON_NAVIGATION_MENU_CLOSE, this._onMenuClose);
      this.subscribe(_Enums2.default.EVENT.ON_NAVIGATION_SUBMENU_SHOW, this._onSubMenuOpen);
      this.subscribe(_Enums2.default.EVENT.ON_NAVIGATION_SUBMENU_HIDE, this._onSubMenuClose);
      this.subscribe(_Enums2.default.ACTION.SHOW_MINICART, this._onMinicartShow);
      this.subscribe(_Enums2.default.EVENT.ON_MINICART_CLOSE, this._onMinicartClsoe);
    }

    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: '_detachSubscribers',
    value: function _detachSubscribers() {
      _Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
      this.unsubscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
      this.unsubscribe(_Enums2.default.ACTION.SHOW_SEARCH, this._onSearchShow);
      this.unsubscribe(_Enums2.default.EVENT.ON_SEARCH_HIDDEN, this._onSearchHidden);
      this.unsubscribe(_Enums2.default.ACTION.OPEN_MAIN_MENU, this._onMenuOpen);
      this.unsubscribe(_Enums2.default.EVENT.ON_NAVIGATION_MENU_CLOSE, this._onMenuClose);
      this.unsubscribe(_Enums2.default.EVENT.ON_NAVIGATION_SUBMENU_SHOW, this._onSubMenuOpen);
      this.unsubscribe(_Enums2.default.EVENT.ON_NAVIGATION_SUBMENU_HIDE, this._onSubMenuClose);
      this.unsubscribe(_Enums2.default.ACTION.SHOW_MINICART, this._onMinicartShow);
      this.unsubscribe(_Enums2.default.EVENT.ON_MINICART_CLOSE, this._onMinicartClsoe);
    }

    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: '_onFrameworkReady',
    value: function _onFrameworkReady() {}

    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: '_attachDOMListeners',
    value: function _attachDOMListeners() {}

    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: '_detachDOMListeners',
    value: function _detachDOMListeners() {}

    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: '_onDOMReady',
    value: function _onDOMReady() {
      _Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();
      this._attachSubscribers();
      this._attachDOMListeners();
    }

    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Handles menu opening
     * @private
     */

  }, {
    key: '_onMenuOpen',
    value: function _onMenuOpen() {
      this.$el.addClass(this.CLASS_OPEN_MENU);
    }

    /**
     * Handles menu close event
     * @private
     */

  }, {
    key: '_onMenuClose',
    value: function _onMenuClose() {
      var _this2 = this;

      this.$el.removeClass(this.CLASS_OPEN_MENU);
      this.$el.addClass(this.CLASS_CLOSING_MENU);
      setTimeout(function () {
        _this2.$el.removeClass(_this2.CLASS_CLOSING_MENU);
      }, this.MENU_CLOSE_TIME);
    }

    /**
     * Handles secondary menu opening
     * @private
     */

  }, {
    key: '_onSubMenuOpen',
    value: function _onSubMenuOpen() {
      this.$el.addClass(this.CLASS_OPEN_SUB_MENU);
    }

    /**
     * Handles secondary menu close event
     * @private
     */

  }, {
    key: '_onSubMenuClose',
    value: function _onSubMenuClose() {
      var _this3 = this;

      this.$el.removeClass(this.CLASS_OPEN_SUB_MENU);
      this.$el.addClass(this.CLASS_CLOSING_SUB_MENU);
      setTimeout(function () {
        _this3.$el.removeClass(_this3.CLASS_CLOSING_SUB_MENU);
      }, this.SUB_MENU_CLOSE_TIME);
    }

    /**
     * Handles search opening
     * @private
     */

  }, {
    key: '_onSearchShow',
    value: function _onSearchShow() {
      this.$el.addClass(this.CLASS_OPEN_SEARCH);
    }

    /**
     * Handles search closing
     * @private
     */

  }, {
    key: '_onSearchHidden',
    value: function _onSearchHidden() {
      var _this4 = this;

      this.$el.removeClass(this.CLASS_OPEN_SEARCH);
      this.$el.addClass(this.CLASS_CLOSING_SEARCH);
      setTimeout(function () {
        _this4.$el.removeClass(_this4.CLASS_CLOSING_SEARCH);
      }, this.SEARCH_CLOSE_TIME);
    }

    /**
     * Handles minicart open
     * @private
     */

  }, {
    key: '_onMinicartShow',
    value: function _onMinicartShow() {
      this.$el.addClass(this.CLASS_OPEN_MINICART);
    }

    /**
     * Handles minicart closing
     * @private
     */

  }, {
    key: '_onMinicartClsoe',
    value: function _onMinicartClsoe() {
      var _this5 = this;

      this.$el.removeClass(this.CLASS_OPEN_MINICART);
      this.$el.addClass(this.CLASS_CLOSING_MINICART);
      setTimeout(function () {
        _this5.$el.removeClass(_this5.CLASS_CLOSING_MINICART);
      }, this.SUB_MENU_CLOSE_TIME);
    }
  }]);

  return OFooter;
}(_appeaserComponentBase2.default);

// Export this so we can pick it up and import in main.js


module.exports = OFooter;

},{"./../../../../js/base/appeaser-component-base.js":39,"./../../../../js/base/logger.js":44,"./../../enums.js":54}],71:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _appeaserComponentBase = require('./../../../../js/base/appeaser-component-base.js');

var _appeaserComponentBase2 = _interopRequireDefault(_appeaserComponentBase);

var _Logger = require('./../../../../js/base/logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OHeader = function (_AppeaserComponentBas) {
    _inherits(OHeader, _AppeaserComponentBas);

    /**
     * Constructor, will run before page loaded
     */
    function OHeader() {
        _classCallCheck(this, OHeader);

        var _this = _possibleConstructorReturn(this, (OHeader.__proto__ || Object.getPrototypeOf(OHeader)).apply(this, arguments));

        _Logger2.default.INFO(_this.constructor.name, ':: Constructor');

        _this._jQueryScopeBinding();
        _this._declareConstants();

        _this.subscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed
        return _this;
    }

    /**
     * Destructor, will run after page unload (or destroy)
     */


    _createClass(OHeader, [{
        key: 'destroy',
        value: function destroy() {
            _Logger2.default.INFO(this.constructor.name, ':: Destructor');

            this._detachDOMListeners();
            this._detachSubscribers();
            this._detachMQHandlers();

            _get(OHeader.prototype.__proto__ || Object.getPrototypeOf(OHeader.prototype), 'destroy', this).call(this);
        }

        /************************************************************************************************************
         ******************************************** Internal functions ********************************************
         ************************************************************************************************************/

        /**
         * Declare class constants here
         * @private
         */

    }, {
        key: '_declareConstants',
        value: function _declareConstants() {
            this.CLASS_SCROLLED_HEADER = 'scrolled-header';
            this.CLASS_OPEN_MENU = 'has-open-menu';
            this.CLASS_OPEN_SUB_MENU = 'has-open-sub-menu';
            this.CLASS_OPEN_SEARCH = 'has-open-search';
            this.CLASS_OPEN_MINICART = 'has-open-minicart';

            this.SELECTOR_TO_TOP = '.a-icon-totop';
            this.SELECTOR_CART_ICON = '.cart-icon';
            this.SELECTOR_ICON_MENU = '.a-icon-menu';
            this.SELECTOR_SEARCH_ICON = '.a-icon-search';
            this.CLASS_IS_ANIMATING = 'is-animating';
            this.CLASS_IN_SEARCH_RESULTS = 'is-in-search-results';
            this.CLASS_CLOSING_MENU = 'closing-menu';
            this.CLASS_CLOSING_SUB_MENU = 'closing-sub-menu';
            this.CLASS_CLOSING_SEARCH = 'closing-search';
            this.CLASS_CLOSING_MINICART = 'closing-minicart';

            this.HIDE_NEW_ITEM_DURATION = 1000;
            this.MENU_CLOSE_TIME = 350;
            this.SUB_MENU_CLOSE_TIME = 500;
            this.SEARCH_CLOSE_TIME = 650;

            this.ICONS_DEFAULT_TOP = 51;
            this.ICONS_MIN_TOP = 24;

            this.MOBILE_HEIGHT = 54;
            this.TABLET_HEIGHT = 60;
        }

        /**
         * Called on onDomReady, cache DOM elements
         * @private
         */

    }, {
        key: '_cacheDOMElements',
        value: function _cacheDOMElements() {
            this.$window = $(window);
            this.$body = $("body, html");
            this.$toTop = this.$el.find(this.SELECTOR_TO_TOP);
            this.$cartIcon = this.$el.find(this.SELECTOR_CART_ICON);
            this.$iconMenu = this.$el.find(this.SELECTOR_ICON_MENU);
            this.$searchIcon = this.$el.find(this.SELECTOR_SEARCH_ICON);
        }

        /**
         * Scopes "this" to use the "this" of the outside function
         * Since JQuery creates a new function with a new "this"
         * Attach all functions that needs to be binded here
         * @private
         */

    }, {
        key: '_jQueryScopeBinding',
        value: function _jQueryScopeBinding() {
            this._onDOMReady = this._onDOMReady.bind(this);
            this._onScroll = this._onScroll.bind(this);
            this._scrollToTop = this._scrollToTop.bind(this);
            this._onIconMenuClick = this._onIconMenuClick.bind(this);
            this._setBagStatus = this._setBagStatus.bind(this);
            this._onSearchIconClick = this._onSearchIconClick.bind(this);
            this._onCartIconClick = this._onCartIconClick.bind(this);
        }

        /**
         * Attach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_attachSubscribers',
        value: function _attachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');

            this.subscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
            this.subscribe(_Enums2.default.EVENT.ON_NAVIGATION_MENU_CLOSE, this._onMenuClose);
            this.subscribe(_Enums2.default.EVENT.ON_ITEM_ADDED_TO_CART, this._setBagStatus);
            this.subscribe(_Enums2.default.EVENT.ON_SEARCH_HIDDEN, this._onSearchHidden);
            this.subscribe(_Enums2.default.EVENT.ON_NAVIGATION_SUBMENU_SHOW, this._onSubMenuOpen);
            this.subscribe(_Enums2.default.EVENT.ON_NAVIGATION_SUBMENU_HIDE, this._onSubMenuClose);
            this.subscribe(_Enums2.default.EVENT.ON_MINICART_CLOSE, this._onMinicartClose);
            this.subscribe(_Enums2.default.EVENT.ON_ERROR_BANNER_RESIZE, this._onErrorBannerResize);
        }

        /**
         * Detach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_detachSubscribers',
        value: function _detachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');

            this.unsubscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
            this.unsubscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
            this.unsubscribe(_Enums2.default.EVENT.ON_NAVIGATION_MENU_CLOSE, this._onMenuClose);
            this.unsubscribe(_Enums2.default.EVENT.ON_ITEM_ADDED_TO_CART, this._setBagStatus);
            this.unsubscribe(_Enums2.default.EVENT.ON_SEARCH_HIDDEN, this._onSearchHidden);
            this.unsubscribe(_Enums2.default.EVENT.ON_NAVIGATION_SUBMENU_SHOW, this._onSubMenuOpen);
            this.unsubscribe(_Enums2.default.EVENT.ON_NAVIGATION_SUBMENU_HIDE, this._onSubMenuClose);
            this.unsubscribe(_Enums2.default.EVENT.ON_MINICART_CLOSE, this._onMinicartClose);
            this.unsubscribe(_Enums2.default.EVENT.ON_ERROR_BANNER_RESIZE, this._onErrorBannerResize);
        }

        /**
         * At this point the framework is ready.
         * Add all publish events here (if any)
         * @private
         */

    }, {
        key: '_onFrameworkReady',
        value: function _onFrameworkReady() {
            this._attachMQHandlers();
        }

        /**
         * Attach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_attachDOMListeners',
        value: function _attachDOMListeners() {
            this.$window.on("scroll", this._onScroll);
            this.$toTop.on("click", this._scrollToTop);
            this.$iconMenu.on("click", this._onIconMenuClick);
            this.$searchIcon.on("click", this._onSearchIconClick);
            this.$cartIcon.on("click", this._onCartIconClick);
        }

        /**
         * Detach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_detachDOMListeners',
        value: function _detachDOMListeners() {
            this.$window.off("scroll", this._onScroll);
            this.$toTop.off("click", this._scrollToTop);
            this.$iconMenu.off("click", this._onIconMenuClick);
            this.$searchIcon.off("click", this._onSearchIconClick);
            this.$cartIcon.off("click", this._onCartIconClick);
        }

        /**
         * Runs on DOM Ready
         * Should be used to attach DOM listeners etc
         * @private
         */

    }, {
        key: '_onDOMReady',
        value: function _onDOMReady() {
            _Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');

            this._cacheDOMElements();
            this._attachSubscribers();
            this._attachDOMListeners();
            this._onScroll();
        }
    }, {
        key: '_attachMQHandlers',
        value: function _attachMQHandlers() {
            this.MQHandlerMobile = {
                deferSetup: true,
                match: this._onMobileMatch.bind(this),
                unmatch: this._onScroll
            };

            this.MQHandlerTablet = {
                deferSetup: true,
                match: this._onTabletMatch.bind(this),
                unmatch: this._onScroll
            };

            enquire.register(_Enums2.default.MQ.IS_MOBILE, this.MQHandlerMobile);
            enquire.register(_Enums2.default.MQ.IS_TABLET, this.MQHandlerTablet);
        }
    }, {
        key: '_detachMQHandlers',
        value: function _detachMQHandlers() {
            enquire.unregister(_Enums2.default.MQ.IS_MOBILE, this.MQHandlerMobile);
            enquire.unregister(_Enums2.default.MQ.IS_TABLET, this.MQHandlerTablet);
        }

        /************************************************************************************************************
         ****************************************** Implementation functions ****************************************
         ************************************************************************************************************/

        /**
         * On scroll adds class to header and shows/hides to top icon
         * @private
         */

    }, {
        key: '_onScroll',
        value: function _onScroll() {
            if (Modernizr.mq(_Enums2.default.MQ.IS_DESKTOP)) {
                var scrollTop = this.$window.scrollTop(),
                    topMargin = parseInt(this.$el.css('margin-top'));

                if (scrollTop > 0) {
                    this.$el.addClass(this.CLASS_SCROLLED_HEADER);

                    var iconOffset = Math.max(this.ICONS_MIN_TOP, this.ICONS_DEFAULT_TOP - scrollTop) + topMargin;
                    this.$cartIcon.css('top', iconOffset);
                    this.$searchIcon.css('top', iconOffset);
                } else {
                    this.$el.removeClass(this.CLASS_SCROLLED_HEADER);
                    this.$cartIcon.css('top', this.ICONS_DEFAULT_TOP + topMargin);
                    this.$searchIcon.css('top', this.ICONS_DEFAULT_TOP + topMargin);
                }
            } else {
                this.$cartIcon.css('top', '');
                this.$searchIcon.css('top', '');
            }
        }

        /**
         * Animates scroll to top
         * @private
         */

    }, {
        key: '_scrollToTop',
        value: function _scrollToTop() {
            this.$body.animate({
                scrollTop: 0
            }, 300);
        }

        /**
         * Publishes an event to open up the main menu
         * @private
         */

    }, {
        key: '_onIconMenuClick',
        value: function _onIconMenuClick(e) {
            e.stopPropagation();

            this.publish(_Enums2.default.ACTION.HIDE_SEARCH);

            this.$el.addClass(this.CLASS_OPEN_MENU);
            this.publish(_Enums2.default.ACTION.OPEN_MAIN_MENU);

            // [customizing-bj] 갤럭시 폰에서 메뉴 클릭시 화면 깨짐 수정
            $('html').addClass('u-overflow-hidden');
        }

        /**
         * Handles menu close event
         * @private
         */

    }, {
        key: '_onMenuClose',
        value: function _onMenuClose() {
            var _this2 = this;

            this.$el.removeClass(this.CLASS_OPEN_MENU);
            this.$el.addClass(this.CLASS_CLOSING_MENU);
            setTimeout(function () {
                _this2.$el.removeClass(_this2.CLASS_CLOSING_MENU);
            }, this.MENU_CLOSE_TIME);

            // [customizing-bj] 갤럭시 폰에서 메뉴 클릭시 화면 깨짐 수정
            $('html').removeClass('u-overflow-hidden');
        }

        /**
         * Check whether or not there are item in the bag, and if so add the has-items class.
         * @private
         */

    }, {
        key: '_setBagStatus',
        value: function _setBagStatus() {
            var _this3 = this;

            this.$cartIcon.addClass(this.CLASS_IS_ANIMATING);

            if (this.displayNewItemTimeout) {
                clearTimeout(this.displayNewItemTimeout);
                this.displayNewItemTimeout = undefined;
            }

            this.displayNewItemTimeout = setTimeout(function () {
                _this3.$cartIcon.removeClass(_this3.CLASS_IS_ANIMATING);
            }, this.HIDE_NEW_ITEM_DURATION);
        }

        /**
         * Handles click on a search icon
         * @private
         */

    }, {
        key: '_onSearchIconClick',
        value: function _onSearchIconClick(e) {
            e.stopPropagation();

            this.publish(_Enums2.default.ACTION.HIDE_NAVIGATION, true);

            if (!this.$el.hasClass(this.CLASS_OPEN_SEARCH)) {
                if (!this.$el.hasClass(this.CLASS_IN_SEARCH_RESULTS)) {
                    this.$el.addClass(this.CLASS_OPEN_SEARCH);
                }

                this.publish(_Enums2.default.ACTION.SHOW_SEARCH);
            } else {
                this.publish(_Enums2.default.ACTION.HIDE_SEARCH);
            }

            // [customizing-bj] 검색 버튼 클릭시 검색바에 포커싱 처리
            $('#inputSearchQuery').focus();
        }

        /**
         * Handles search closing
         * @private
         */

    }, {
        key: '_onSearchHidden',
        value: function _onSearchHidden() {
            var _this4 = this;

            this.$el.removeClass(this.CLASS_OPEN_SEARCH);
            this.$el.addClass(this.CLASS_CLOSING_SEARCH);
            setTimeout(function () {
                _this4.$el.removeClass(_this4.CLASS_CLOSING_SEARCH);
            }, this.SEARCH_CLOSE_TIME);
        }

        /**
         * Handles secondary menu opening
         * @private
         */

    }, {
        key: '_onSubMenuOpen',
        value: function _onSubMenuOpen() {
            this.$el.addClass(this.CLASS_OPEN_SUB_MENU);
        }

        /**
         * Handles secondary menu close event
         * @private
         */

    }, {
        key: '_onSubMenuClose',
        value: function _onSubMenuClose() {
            var _this5 = this;

            this.$el.removeClass(this.CLASS_OPEN_SUB_MENU);
            this.$el.addClass(this.CLASS_CLOSING_SUB_MENU);
            setTimeout(function () {
                _this5.$el.removeClass(_this5.CLASS_CLOSING_SUB_MENU);
            }, this.SUB_MENU_CLOSE_TIME);
        }

        /**
         * Triggers opening of minicart
         * @private
         */

    }, {
        key: '_onCartIconClick',
        value: function _onCartIconClick(e) {
            if (Modernizr.mq(_Enums2.default.MQ.IS_DESKTOP)) {
                e.preventDefault();

                // [customizing-jw] 장바구니담기 sidebar 가 열려있을 시
                if ($("#gnb_add_cart").hasClass("has-new-cart-item")) {
                	return;
                }

                this.publish(_Enums2.default.ACTION.SHOW_MINICART);
                this.$el.addClass(this.CLASS_OPEN_MINICART);
            }
        }

        /**
         * Triggers animation on minicart closing
         * @private
         */

    }, {
        key: '_onMinicartClose',
        value: function _onMinicartClose() {
            var _this6 = this;

            this.$el.removeClass(this.CLASS_OPEN_MINICART);
            this.$el.addClass(this.CLASS_CLOSING_MINICART);

            clearTimeout(this.closeTimeout);

            this.closeTimeout = setTimeout(function () {
                _this6.$el.removeClass(_this6.CLASS_CLOSING_MINICART);
            }, this.SUB_MENU_CLOSE_TIME);
        }

        /**
         * Handles error banner resize event.
         *
         * @param newHeight
         * @private
         */

    }, {
        key: '_onErrorBannerResize',
        value: function _onErrorBannerResize(newHeight) {
            this.$el.css('margin-top', newHeight);
            this._onScroll();
        }

        /**
         * Updates margin contribution for mobile
         * @private
         */

    }, {
        key: '_onMobileMatch',
        value: function _onMobileMatch() {
            this._onScroll();
            this.publish(_Enums2.default.ACTION.UPDATE_PAGE_CONTENT_MARGIN_CONTRIBUTION, {
                margin: this.MOBILE_HEIGHT,
                element: this.$el
            });
        }

        /**
         * Updates margin contribution for tablet
         * @private
         */

    }, {
        key: '_onTabletMatch',
        value: function _onTabletMatch() {
            this._onScroll();
            this.publish(_Enums2.default.ACTION.UPDATE_PAGE_CONTENT_MARGIN_CONTRIBUTION, {
                margin: this.TABLET_HEIGHT,
                element: this.$el
            });
        }
    }]);

    return OHeader;
}(_appeaserComponentBase2.default);

// Export this so we can pick it up and import in main.js


module.exports = OHeader;

},{"./../../../../js/base/appeaser-component-base.js":39,"./../../../../js/base/logger.js":44,"./../../enums.js":54}],72:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _appeaserComponentBase = require('./../../../../js/base/appeaser-component-base.js');

var _appeaserComponentBase2 = _interopRequireDefault(_appeaserComponentBase);

var _Logger = require('./../../../../js/base/logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OMainMenu = function (_AppeaserComponentBas) {
    _inherits(OMainMenu, _AppeaserComponentBas);

    /**
     * Constructor, will run before page loaded
     */
    function OMainMenu() {
        _classCallCheck(this, OMainMenu);

        var _this = _possibleConstructorReturn(this, (OMainMenu.__proto__ || Object.getPrototypeOf(OMainMenu)).apply(this, arguments));

        _Logger2.default.INFO(_this.constructor.name, ':: Constructor');

        _this._jQueryScopeBinding();
        _this._declareConstants();
        _this.subscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed
        return _this;
    }

    /**
     * Destructor, will run after page unload (or destroy)
     */


    _createClass(OMainMenu, [{
        key: 'destroy',
        value: function destroy() {
            _Logger2.default.INFO(this.constructor.name, ':: Destructor');

            this._detachMQHandlers();
            this._detachDOMListeners();
            this._detachSubscribers();

            _get(OMainMenu.prototype.__proto__ || Object.getPrototypeOf(OMainMenu.prototype), 'destroy', this).call(this);
        }

        /************************************************************************************************************
         ******************************************** Internal functions ********************************************
         ************************************************************************************************************/

        /**
         * Declare class constants here
         * @private
         */

    }, {
        key: '_declareConstants',
        value: function _declareConstants() {
            this.SELECTOR_CATEGORY_LINK = '.categories li';
            this.SELECTOR_CLOSE_ICON = '.a-icon-close';
            this.SELECTOR_SECONDARY_HEADING = '.secondary .heading';
            this.SELECTOR_SUBCATEGORY_SECTION = '.subcategory-section';
            this.SELECTOR_MY_ACCOUNT_LINK = '.sign-in-section .my-account';
            this.SELECTOR_MY_ACCOUNT_SECTION = '.my-account-section';
            this.SELECTOR_MENU_CONTENT = '.menu-content';
            this.SELECTOR_FOOTER = '.o-footer';
            this.SELECTOR_LINK = '.a-link';
            this.SELECTOR_PAGE_CONTENT = '.o-page-content';

            this.CLASS_SEARCH_RESULTS = 'search-results';
            this.CLASS_IS_SECONDARY_OPEN = 'is-showing-secondary';
            this.CLASS_IS_MAIN_MENU_OVERLAY = 'is-main-menu-overlay';
            this.CLASS_CLOSING_SECONDARY = 'is-closing-secondary';
            this.CLASS_IS_CLOSING = 'is-closing';

            this.CLOSE_ANIMATION_TIME = 350;
            this.DESKTOP_CLOSE_ANIMATION_TIME = 500;

            this.DEFAULT_TOP = 176;
            this.MIN_TOP = 92;
            this.secondaryMenuIsClosed = true;
        }

        /**
         * Runs on DOM Ready
         * Should be used to attach DOM listeners etc
         * @private
         */

    }, {
        key: '_onDOMReady',
        value: function _onDOMReady() {
            _Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');

            this._attachSubscribers();
            this._cacheDOMElements();
            this._attachDOMListeners();
            this._attachMQHandlers();

            if (this.$pageContent.hasClass(this.CLASS_SEARCH_RESULTS)) {
                this.MIN_TOP = 119;
            }

            this._onScroll();
        }
    }, {
        key: '_cacheDOMElements',
        value: function _cacheDOMElements() {
            this.$categoryLink = this.$el.find(this.SELECTOR_CATEGORY_LINK);
            this.$closeIcon = this.$el.find(this.SELECTOR_CLOSE_ICON);
            this.$secondaryHeading = this.$el.find(this.SELECTOR_SECONDARY_HEADING);
            this.$subcategories = this.$el.find(this.SELECTOR_SUBCATEGORY_SECTION);
            this.$myAccountLink = this.$el.find(this.SELECTOR_MY_ACCOUNT_LINK);
            this.$myAccountSection = this.$el.find(this.SELECTOR_MY_ACCOUNT_SECTION);
            this.$menuContent = this.$el.find(this.SELECTOR_MENU_CONTENT);
            this.$footer = $(this.SELECTOR_FOOTER);
            this.$pageContent = $(this.SELECTOR_PAGE_CONTENT);
            this.$window = $(window);
        }

        /**
         * Scopes "this" to use the "this" of the outside function
         * Since JQuery creates a new function with a new "this"
         * Attach all functions that needs to be binded here
         * @private
         */

    }, {
        key: '_jQueryScopeBinding',
        value: function _jQueryScopeBinding() {
            this._onDOMReady = this._onDOMReady.bind(this);
            this._showSecondaryLevel = this._showSecondaryLevel.bind(this);
            this._onSecondaryHeadingClick = this._onSecondaryHeadingClick.bind(this);
            this._close = this._close.bind(this);
            this._onScroll = this._onScroll.bind(this);
            this._onClick = this._onClick.bind(this);
            this._showMyAccount = this._showMyAccount.bind(this);
            this._switchingSecondaryMenu = this._switchingSecondaryMenu.bind(this);
        }

        /**
         * At this point the framework is ready.
         * Add all publish events here (if any)
         * @private
         */

    }, {
        key: '_onFrameworkReady',
        value: function _onFrameworkReady() {}

        /**
         * Attach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_attachSubscribers',
        value: function _attachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');

            this.subscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
            this.subscribe(_Enums2.default.EVENT.ON_BODY_CLICKED, this._onBodyClick);
            this.subscribe(_Enums2.default.ACTION.OPEN_MAIN_MENU, this._open);
            this.subscribe(_Enums2.default.ACTION.HIDE_NAVIGATION, this._close);
            this.subscribe(_Enums2.default.EVENT.ON_ERROR_BANNER_RESIZE, this._onErrorBannerResize);
        }

        /**
         * Detach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_detachSubscribers',
        value: function _detachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');

            this.unsubscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
            this.unsubscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
            this.unsubscribe(_Enums2.default.EVENT.ON_BODY_CLICKED, this._onBodyClick);
            this.unsubscribe(_Enums2.default.ACTION.OPEN_MAIN_MENU, this._open);
            this.unsubscribe(_Enums2.default.ACTION.HIDE_NAVIGATION, this._close);
            this.unsubscribe(_Enums2.default.EVENT.ON_ERROR_BANNER_RESIZE, this._onErrorBannerResize);
        }

        /**
         * Attach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_attachDOMListeners',
        value: function _attachDOMListeners() {
            this.$window.on("scroll", this._onScroll);
            this.$el.on('click', this._onClick);
            this.$closeIcon.on('click', this._close);
            this.$secondaryHeading.on('click', this._onSecondaryHeadingClick);
            this.$myAccountLink.on('click', this._showMyAccount);
        }

        /**
         * Detach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_detachDOMListeners',
        value: function _detachDOMListeners() {
            this.$window.off("scroll", this._onScroll);
            this.$el.off('click', this._onClick);
            this.$categoryLink.off('mouseover click', this._showSecondaryLevel);
            this.$closeIcon.off('click', this._close);
            this.$secondaryHeading.off('click', this._onSecondaryHeadingClick);
            this.$myAccountLink.off('click', this._showMyAccount);
        }
    }, {
        key: '_attachMQHandlers',
        value: function _attachMQHandlers() {
            this.MQHandlerMobileAndTablet = {
                deferSetup: true,
                match: this._mobileAndTabletMatch.bind(this)
            };

            this.MQHandlerDesktop = {
                deferSetup: true,
                match: this._desktopMatch.bind(this)
            };

            enquire.register(_Enums2.default.MQ.MOBILE_AND_TABLET_RANGE, this.MQHandlerMobileAndTablet);
            enquire.register(_Enums2.default.MQ.IS_DESKTOP, this.MQHandlerDesktop);
        }
    }, {
        key: '_detachMQHandlers',
        value: function _detachMQHandlers() {
            enquire.unregister(_Enums2.default.MQ.MOBILE_AND_TABLET_RANGE, this.MQHandlerMobileAndTablet);
            enquire.unregister(_Enums2.default.MQ.IS_DESKTOP, this.MQHandlerDesktop);
        }

        /************************************************************************************************************
         ****************************************** Implementation functions ****************************************
         ************************************************************************************************************/

        /**
         * Displays the appropriate overlay
         * @private
         */

    }, {
        key: '_showOverlay',
        value: function _showOverlay() {
            this.publish(_Enums2.default.ACTION.SHOW_OVERLAY, {
                classes: this.CLASS_IS_MAIN_MENU_OVERLAY,
                keepScroll: true
            });
        }

        /**
         * On click inside menu
         * @private
         */

    }, {
        key: '_onClick',
        value: function _onClick(e) {
            if (!$(e.target).hasClass(_Enums2.default.CLASS.OPEN_LIGHTBOX)) {
                e.stopPropagation();
            } else {
                this._close();
            }
        }

        /**
         * Closes the main menu.
         * @param force Closes the menu without animation
         * @private
         */

    }, {
        key: '_close',
        value: function _close(force) {
            var _this2 = this;

            if (this.$el.hasClass(_Enums2.default.CLASS.IS_OPEN_STATE)) {
                this.$el.removeClass(_Enums2.default.CLASS.IS_OPEN_STATE);

                this.publish(_Enums2.default.EVENT.ON_NAVIGATION_MENU_CLOSE);
                this.publish(_Enums2.default.ACTION.HIDE_OVERLAY, { animating: !force, delay: this.CLOSE_ANIMATION_TIME });

                if (force !== true) {
                    this.$el.addClass(this.CLASS_IS_CLOSING);

                    setTimeout(function () {
                        _this2.$el.removeClass(_this2.CLASS_IS_CLOSING);
                        _this2.publish(_Enums2.default.ACTION.ENABLE_SCROLL);
                    }, this.CLOSE_ANIMATION_TIME);
                } else {
                    this.publish(_Enums2.default.ACTION.ENABLE_SCROLL);
                }
            }

            this._hideSecondaryLevel(force);
        }

        /**
         * Opens the menu
         * @private
         */

    }, {
        key: '_open',
        value: function _open() {
            this.$el.addClass(_Enums2.default.CLASS.IS_OPEN_STATE);

            this.publish(_Enums2.default.ACTION.DISABLE_SCROLL, { $touchScrollElement: this.$menuContent });
            this._showOverlay();
        }

        /**
         * Changes secondary menu content
         * @private
         */

    }, {
        key: '_switchingSecondaryMenu',
        value: function _switchingSecondaryMenu(target) {
            this.$categoryLink.removeClass(_Enums2.default.CLASS.IS_SELECTED);
            this.$myAccountSection.removeClass(_Enums2.default.CLASS.IS_VISIBLE_STATE);

            var $currentCatLink = $(target.target).closest(this.SELECTOR_CATEGORY_LINK);
            $currentCatLink.addClass(_Enums2.default.CLASS.IS_SELECTED);

            this.$subcategories.removeClass(_Enums2.default.CLASS.IS_VISIBLE_STATE);
            this.$el.find(this.SELECTOR_SUBCATEGORY_SECTION + '[data-category-id=' + $currentCatLink.data('category-id') + ']').addClass(_Enums2.default.CLASS.IS_VISIBLE_STATE);
        }

        /**
         * Displays the second level of the menu.
         * @private
         */

    }, {
        key: '_showSecondaryLevel',
        value: function _showSecondaryLevel(e) {
            e.preventDefault();
            // [customizing-bj] 서브 메뉴 띄운 상태에서 검색 버튼 클릭후 다시 서브메뉴 이동시 서브메뉴 안 나오는 현상 수정 @date:2017-10-17
            if (!this.$el.hasClass(this.CLASS_IS_SECONDARY_OPEN)) {
//            if (this.secondaryMenuIsClosed) {
                // Resets scroll for the new view
                this.$menuContent.scrollTop(0);

                this.$el.addClass(this.CLASS_IS_SECONDARY_OPEN);

                this._switchingSecondaryMenu(e);

                if (Modernizr.mq(_Enums2.default.MQ.IS_DESKTOP)) {
                    this.publish(_Enums2.default.ACTION.DISABLE_SCROLL, { $touchScrollElement: this.$menuContent });
                    this._showOverlay();
                }

                this.publish(_Enums2.default.EVENT.ON_NAVIGATION_SUBMENU_SHOW);
                this.secondaryMenuIsClosed = false;
            } else {
                this._switchingSecondaryMenu(e);
            }
        }

        /**
         * Hides the second level of the menu.
         * @param force Closes the menu without animation
         * @private
         */

    }, {
        key: '_hideSecondaryLevel',
        value: function _hideSecondaryLevel(force) {
            var _this3 = this;

            if (this.$el.hasClass(this.CLASS_IS_SECONDARY_OPEN)) {
                // Resets scroll for the new view
                this.$menuContent.scrollTop(0);

                if (Modernizr.mq(_Enums2.default.MQ.IS_DESKTOP)) {
                	// [customizing-bj] 서브 메뉴 뜬 상태에서 뉴스레터 클릭시 오버레이 풀리는 현상 수정 @date:2017-10-17
                	if (!$(".o-lightbox").hasClass(_Enums2.default.CLASS.IS_OPEN_STATE)) {
	                    this.publish(_Enums2.default.ACTION.ENABLE_SCROLL);
	                    this.publish(_Enums2.default.ACTION.HIDE_OVERLAY, { animating: !force, delay: this.DESKTOP_CLOSE_ANIMATION_TIME });
                	}

                    if (force !== true) {
                        this.$el.addClass(this.CLASS_CLOSING_SECONDARY);

                        setTimeout(function () {
                            _this3.$el.removeClass(_this3.CLASS_CLOSING_SECONDARY);
                            _this3.$myAccountSection.removeClass(_Enums2.default.CLASS.IS_VISIBLE_STATE);
                            _this3.$subcategories.removeClass(_Enums2.default.CLASS.IS_VISIBLE_STATE);
                            _this3.secondaryMenuIsClosed = true;
                        }, this.DESKTOP_CLOSE_ANIMATION_TIME);
                    } else {
                        this.$myAccountSection.removeClass(_Enums2.default.CLASS.IS_VISIBLE_STATE);
                        this.$subcategories.removeClass(_Enums2.default.CLASS.IS_VISIBLE_STATE);
                    }
                } else {
                    this.$myAccountSection.removeClass(_Enums2.default.CLASS.IS_VISIBLE_STATE);
                    this.$subcategories.removeClass(_Enums2.default.CLASS.IS_VISIBLE_STATE);
                    this.secondaryMenuIsClosed = true;
                }

                this.$el.removeClass(this.CLASS_IS_SECONDARY_OPEN);
                this.$categoryLink.removeClass(_Enums2.default.CLASS.IS_SELECTED);

                this.publish(_Enums2.default.EVENT.ON_NAVIGATION_SUBMENU_HIDE);
            }
        }

        /**
         * Displays the my account info
         * @private
         */

    }, {
        key: '_showMyAccount',
        value: function _showMyAccount() {
            this.$el.addClass(this.CLASS_IS_SECONDARY_OPEN);

            this.$subcategories.removeClass(_Enums2.default.CLASS.IS_VISIBLE_STATE);
            this.$myAccountSection.addClass(_Enums2.default.CLASS.IS_VISIBLE_STATE);

            if (Modernizr.mq(_Enums2.default.MQ.IS_DESKTOP)) {
                this.publish(_Enums2.default.ACTION.DISABLE_SCROLL, { $touchScrollElement: this.$menuContent });
                this._showOverlay();
            }
        }

        /**
         * Handles click on secondary heading
         * @private
         */

    }, {
        key: '_onSecondaryHeadingClick',
        value: function _onSecondaryHeadingClick() {
            if (!Modernizr.mq(_Enums2.default.MQ.IS_DESKTOP)) {
                this._hideSecondaryLevel();
            }
        }

        /**
         * On body click event handler.
         * @private
         */

    }, {
        key: '_onBodyClick',
        value: function _onBodyClick() {
            this._close();
        }

        /**
         * Handles scroll
         * @private
         */

    }, {
        key: '_onScroll',
        value: function _onScroll() {
            var scrollTop = this.$window.scrollTop(),
                marginTop = parseInt(this.$el.css('margin-top'));

            // [customizing-bj] 메뉴와 헤더 / 필터 CSS 적용 같이 되도록 수정
            if (scrollTop > 0 && Modernizr.mq(_Enums2.default.MQ.IS_DESKTOP)) {
                var newTop = Math.max(this.MIN_TOP, this.DEFAULT_TOP - scrollTop);

                this.$el.css('top', newTop);
                this.$menuContent.css('max-height', 'calc(100% - ' + (newTop + marginTop) + 'px)');

                var footerDistance = this.$footer.offset().top - (this.$menuContent.offset().top + this.$menuContent.height());

                if (footerDistance < -100) {
                    this.$el.addClass(_Enums2.default.CLASS.IS_HIDDEN_STATE);
                    $(".o-product-filter").addClass(_Enums2.default.CLASS.IS_HIDDEN_STATE);
                    $(".o-product-sort").addClass(_Enums2.default.CLASS.IS_HIDDEN_STATE);
                    // 화면 틀어지는 현상으로 인해 검색, 장바구니 버튼은 유지
                    //$(".header-search-logo-cart-container").addClass(_Enums2.default.CLASS.IS_HIDDEN_STATE);
                } else if (footerDistance < 0) {
                    this.$el.css('opacity', 1 + footerDistance / 100).removeClass(_Enums2.default.CLASS.IS_HIDDEN_STATE);
                    $(".o-product-filter").css('opacity', 1 + footerDistance / 100).removeClass(_Enums2.default.CLASS.IS_HIDDEN_STATE);
                    $(".o-product-sort").css('opacity', 1 + footerDistance / 100).removeClass(_Enums2.default.CLASS.IS_HIDDEN_STATE);
                    // 화면 틀어지는 현상으로 인해 검색, 장바구니 버튼은 유지
                    //$(".header-search-logo-cart-container").css('opacity', 1 + footerDistance / 100).removeClass(_Enums2.default.CLASS.IS_HIDDEN_STATE);
                } else {
                    this.$el.css('opacity', '').removeClass(_Enums2.default.CLASS.IS_HIDDEN_STATE);
                    $(".o-product-filter").css('opacity', '').removeClass(_Enums2.default.CLASS.IS_HIDDEN_STATE);
                    $(".o-product-sort").css('opacity', '').removeClass(_Enums2.default.CLASS.IS_HIDDEN_STATE);
                    // 화면 틀어지는 현상으로 인해 검색, 장바구니 버튼은 유지
                    //$(".header-search-logo-cart-container").css('opacity', '').removeClass(_Enums2.default.CLASS.IS_HIDDEN_STATE);
                }
            } else {
                this.$el.css({ 'top': '', 'opacity': '' }).removeClass(_Enums2.default.CLASS.IS_HIDDEN_STATE);
                $(".o-product-filter").css({ 'top': '', 'opacity': '' }).removeClass(_Enums2.default.CLASS.IS_HIDDEN_STATE);
                $(".o-product-sort").css({ 'top': '', 'opacity': '' }).removeClass(_Enums2.default.CLASS.IS_HIDDEN_STATE);
                // 화면 틀어지는 현상으로 인해 검색, 장바구니 버튼은 유지
                //$(".header-search-logo-cart-container").css({ 'top': '', 'opacity': '' }).removeClass(_Enums2.default.CLASS.IS_HIDDEN_STATE);
                marginTop > 0 ? this.$menuContent.css('max-height', 'calc(100% - ' + marginTop + 'px') : this.$menuContent.css('max-height', '');
            }
        }

        /**
         * Resets menu listeners and state
         * @private
         */

    }, {
        key: '_mobileAndTabletMatch',
        value: function _mobileAndTabletMatch() {
            if (this.$el.hasClass(this.CLASS_IS_SECONDARY_OPEN)) {
                this.publish(_Enums2.default.ACTION.ENABLE_SCROLL);
                this.publish(_Enums2.default.ACTION.HIDE_OVERLAY);
                this._hideSecondaryLevel();
            }

            this.$categoryLink.off('mouseover', this.SELECTOR_LINK, this._showSecondaryLevel);
            this.$categoryLink.on('click', this._showSecondaryLevel);
            this.$el.css({ 'top': '', 'opacity': '', 'margin-top': '' }).removeClass(_Enums2.default.CLASS.IS_HIDDEN_STATE);
            this.$menuContent.css('max-height', '');
        }

        /**
         * Resets menu listeners and state
         * @private
         */

    }, {
        key: '_desktopMatch',
        value: function _desktopMatch() {
            this._close();
            this.$categoryLink.off('click', this._showSecondaryLevel);
            this.$categoryLink.on('mouseover', this.SELECTOR_LINK, this._showSecondaryLevel);
            this._onScroll();
        }

        /**
         * Handles error banner resize event.
         *
         * @param newHeight
         * @private
         */

    }, {
        key: '_onErrorBannerResize',
        value: function _onErrorBannerResize(newHeight) {
            this.$el.css('margin-top', newHeight);
            this._onScroll();
        }
    }]);

    return OMainMenu;
}(_appeaserComponentBase2.default);

// Export this so we can pick it up and import in main.js


module.exports = OMainMenu;

},{"./../../../../js/base/appeaser-component-base.js":39,"./../../../../js/base/logger.js":44,"./../../enums.js":54}],73:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _index = require('common/organisms/o-map/index');

var _index2 = _interopRequireDefault(_index);

var _Utils = require('./../../utils.js');

var _Utils2 = _interopRequireDefault(_Utils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OMap = function (_BaseMap) {
    _inherits(OMap, _BaseMap);

    /**
     * Constructor, will run before page loaded
     */
    function OMap() {
        _classCallCheck(this, OMap);

        return _possibleConstructorReturn(this, (OMap.__proto__ || Object.getPrototypeOf(OMap)).apply(this, arguments));
    }

    /**
     * Destructor, will run after page unload (or destroy)
     */


    _createClass(OMap, [{
        key: 'destroy',
        value: function destroy() {
            _get(OMap.prototype.__proto__ || Object.getPrototypeOf(OMap.prototype), 'destroy', this).call(this);
        }

        /************************************************************************************************************
         ******************************************** Internal functions ********************************************
         ************************************************************************************************************/

        /**
         * Declare class constants here
         * @private
         */

    }, {
        key: '_declareConstants',
        value: function _declareConstants() {
            _get(OMap.prototype.__proto__ || Object.getPrototypeOf(OMap.prototype), '_declareConstants', this).call(this);

            this.SELECTOR_INFO_BOX = '.m-info-box';
            this.SELECTOR_INFO_BOX_CONTENT = '.m-info-box .content';
            this.SELECTOR_INFO_BOX_CLOSE = '.m-info-box .a-icon-close';

            this.TEMPLATE_STORE_INFORMATION_SINGLE = '#store-information-single';
        }
    }, {
        key: '_cacheDOMElements',
        value: function _cacheDOMElements() {
            _get(OMap.prototype.__proto__ || Object.getPrototypeOf(OMap.prototype), '_cacheDOMElements', this).call(this);

            this.$infoBoxContent = this.$el.find(this.SELECTOR_INFO_BOX_CONTENT);
            this.$storeInfoSingleTemplate = $(this.TEMPLATE_STORE_INFORMATION_SINGLE);
        }

        /************************************************************************************************************
         ****************************************** Implementation functions ****************************************
         ************************************************************************************************************/

        /**
         * Opens infobox
         * @private
         */

    }, {
        key: '_openInfoBox',
        value: function _openInfoBox(marker) {

            var storeInfoTemplate = Handlebars.compile(this.$storeInfoSingleTemplate.html()),
                storeInfoContent = storeInfoTemplate(_Utils2.default.Stores.createStoreInformationDataObject(marker.data));

            this.$infoBoxContent.html(storeInfoContent);

            _get(OMap.prototype.__proto__ || Object.getPrototypeOf(OMap.prototype), '_openInfoBox', this).call(this);
        }

        /**
         * Handles a click on a marker.
         * @private
         */

    }, {
        key: '_onMarkerClick',
        value: function _onMarkerClick(marker) {
            _get(OMap.prototype.__proto__ || Object.getPrototypeOf(OMap.prototype), '_onMarkerClick', this).call(this);

            this._openInfoBox(marker);
        }
    }]);

    return OMap;
}(_index2.default);

// Export this so we can pick it up and import in main.js


module.exports = OMap;

},{"./../../utils.js":87,"common/organisms/o-map/index":27}],74:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _appeaserComponentBase = require('./../../../../js/base/appeaser-component-base.js');

var _appeaserComponentBase2 = _interopRequireDefault(_appeaserComponentBase);

var _Logger = require('./../../../../js/base/logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OMinicart = function (_AppeaserComponentBas) {
    _inherits(OMinicart, _AppeaserComponentBas);

    /**
     * Constructor, will run before page loaded
     */
    function OMinicart() {
        _classCallCheck(this, OMinicart);

        var _this = _possibleConstructorReturn(this, (OMinicart.__proto__ || Object.getPrototypeOf(OMinicart)).apply(this, arguments));

        _Logger2.default.INFO(_this.constructor.name, ':: Constructor');

        _this._jQueryScopeBinding();
        _this._declareConstants();
        _this.subscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed
        return _this;
    }

    /**
     * Destructor, will run after page unload (or destroy)
     */


    _createClass(OMinicart, [{
        key: 'destroy',
        value: function destroy() {
            _Logger2.default.INFO(this.constructor.name, ':: Destructor');

            this._detachDOMListeners();
            this._detachSubscribers();
            this._detachMQHandlers();

            _get(OMinicart.prototype.__proto__ || Object.getPrototypeOf(OMinicart.prototype), 'destroy', this).call(this);
        }

        /************************************************************************************************************
         ******************************************** Internal functions ********************************************
         ************************************************************************************************************/

        /**
         * Declare class constants here
         * @private
         */

    }, {
        key: '_declareConstants',
        value: function _declareConstants() {
            this.SELECTOR_CLOSE_ICON = '.a-icon-close';
            this.SELECTOR_PRODUCTS = '.products';

            this.CLASS_MINICART_OVERLAY = 'is-minicart-overlay';
            this.CLASS_IS_CLOSING = 'is-closing';

            this.CLOSE_ANIMATION_TIME = 500;
        }

        /**
         * Attaches MQ handlers
         * @private
         */

    }, {
        key: '_attachMQHandlers',
        value: function _attachMQHandlers() {
            this.MQMobileHandler = {
                deferSetups: false,
                match: this._close
            };

            enquire.register(_Enums2.default.MQ.MOBILE_AND_TABLET_RANGE, this.MQMobileHandler);
        }

        /**
         * Detaches MQ handlers
         * @private
         */

    }, {
        key: '_detachMQHandlers',
        value: function _detachMQHandlers() {
            enquire.unregister(_Enums2.default.MQ.MOBILE_AND_TABLET_RANGE, this.MQMobileHandler);
        }

        /**
         * Called on onDomReady, cache DOM elements
         * @private
         */

    }, {
        key: '_cacheDOMElements',
        value: function _cacheDOMElements() {
            this.$closeIcon = this.$el.find(this.SELECTOR_CLOSE_ICON);
            this.$products = this.$el.find(this.SELECTOR_PRODUCTS);
            this.$window = $(window);
        }

        /**
         * Scopes "this" to use the "this" of the outside function
         * Since JQuery creates a new function with a new "this"
         * Attach all functions that needs to be binded here
         * @private
         */

    }, {
        key: '_jQueryScopeBinding',
        value: function _jQueryScopeBinding() {
            this._onDOMReady = this._onDOMReady.bind(this);
            this._onResize = this._onResize.bind(this);
            this._close = this._close.bind(this);
        }

        /**
         * Attach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_attachSubscribers',
        value: function _attachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');

            this.subscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
            this.subscribe(_Enums2.default.ACTION.SHOW_MINICART, this._open);
            this.subscribe(_Enums2.default.ACTION.HIDE_MINICART, this._close);
            this.subscribe(_Enums2.default.EVENT.ON_OVERLAY_CLICKED, this._close);
            this.subscribe(_Enums2.default.EVENT.ON_ERROR_BANNER_RESIZE, this._onErrorBannerResize);
        }

        /**
         * Detach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_detachSubscribers',
        value: function _detachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');

            this.unsubscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
            this.unsubscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
            this.unsubscribe(_Enums2.default.ACTION.SHOW_MINICART, this._open);
            this.unsubscribe(_Enums2.default.ACTION.HIDE_MINICART, this._close);
            this.unsubscribe(_Enums2.default.EVENT.ON_OVERLAY_CLICKED, this._close);
            this.unsubscribe(_Enums2.default.EVENT.ON_ERROR_BANNER_RESIZE, this._onErrorBannerResize);
        }

        /**
         * At this point the framework is ready.
         * Add all publish events here (if any)
         * @private
         */

    }, {
        key: '_onFrameworkReady',
        value: function _onFrameworkReady() {}

        /**
         * Attach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_attachDOMListeners',
        value: function _attachDOMListeners() {
            this.$window.on('resize', this._onResize);
            this.$closeIcon.on('click', this._close);
        }

        /**
         * Detach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_detachDOMListeners',
        value: function _detachDOMListeners() {
            this.$window.off('resize', this._onResize);
            this.$closeIcon.off('click', this._close);
        }

        /**
         * Runs on DOM Ready
         * Should be used to attach DOM listeners etc
         * @private
         */

    }, {
        key: '_onDOMReady',
        value: function _onDOMReady() {
            _Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');

            this._cacheDOMElements();
            this._attachSubscribers();
            this._attachDOMListeners();
            this._attachMQHandlers();
            this._onResize();
        }

        /************************************************************************************************************
         ****************************************** Implementation functions ****************************************
         ************************************************************************************************************/

        /**
         * Re-calculates max-height of product list
         * @private
         */

    }, {
        key: '_onResize',
        value: function _onResize() {
            var _this2 = this;

            var totalChildHeight = 0;

            this.$el.children().each(function (index, el) {
                var $el = $(el);

                if (!_this2.$products.is($el)) {
                    totalChildHeight += $el.outerHeight();
                }
            });

            this.$products.css('max-height', this.$el.height() - totalChildHeight + 'px');
        }

        /**
         * Opens the minicart
         * @private
         */

    }, {
        key: '_open',
        value: function _open() {
        	// [customizing-jw] 장바구니담기 sidebar 가 열려있을 시
        	if (!$("#gnb_add_cart").hasClass("has-new-cart-item")) {
	            this.$el.addClass(_Enums2.default.CLASS.IS_OPEN_STATE);
	            this.publish(_Enums2.default.ACTION.SHOW_OVERLAY, { classes: this.CLASS_MINICART_OVERLAY });
        	}
        }

        /**
         * Closes the minicart
         * @private
         */

    }, {
        key: '_close',
        value: function _close() {
            var _this3 = this;

            if (this.$el.hasClass(_Enums2.default.CLASS.IS_OPEN_STATE)) {
                this.$el.removeClass(_Enums2.default.CLASS.IS_OPEN_STATE);
                this.$el.addClass(this.CLASS_IS_CLOSING);

                clearTimeout(this.closeTimeout);

                this.closeTimeout = setTimeout(function () {
                    _this3.$el.removeClass(_this3.CLASS_IS_CLOSING);
                }, this.CLOSE_ANIMATION_TIME);

                this.publish(_Enums2.default.ACTION.HIDE_OVERLAY, { animating: true, delay: this.CLOSE_ANIMATION_TIME });
                this.publish(_Enums2.default.EVENT.ON_MINICART_CLOSE);
            }
        }

        /**
         * Handles error banner resize event.
         *
         * @param newHeight
         * @private
         */

    }, {
        key: '_onErrorBannerResize',
        value: function _onErrorBannerResize(newHeight) {
            this.$el.css({ 'margin-top': newHeight, 'height': 'calc(100vh - ' + newHeight + 'px' });
            this._onResize();
        }
    }]);

    return OMinicart;
}(_appeaserComponentBase2.default);

// Export this so we can pick it up and import in main.js


module.exports = OMinicart;

},{"./../../../../js/base/appeaser-component-base.js":39,"./../../../../js/base/logger.js":44,"./../../enums.js":54}],75:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _index = require('common/organisms/o-olapic-gallery/index');

var _index2 = _interopRequireDefault(_index);

var _Logger = require('./../../../../js/base/logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OOlapicgallery = function (_OlapicGalleryBase) {
    _inherits(OOlapicgallery, _OlapicGalleryBase);

    /**
     * Constructor, will run before page loaded
     */
    function OOlapicgallery() {
        _classCallCheck(this, OOlapicgallery);

        var _this = _possibleConstructorReturn(this, (OOlapicgallery.__proto__ || Object.getPrototypeOf(OOlapicgallery)).apply(this, arguments));

        _Logger2.default.INFO(_this.constructor.name, ':: Constructor');

        _this._jQueryScopeBinding();
        _this._declareConstants();
        return _this;
    }

    /**
     * Destructor, will run after page unload (or destroy)
     */


    _createClass(OOlapicgallery, [{
        key: 'destroy',
        value: function destroy() {
            _Logger2.default.INFO(this.constructor.name, ':: Destructor');

            this._detachDOMListeners();
            this._detachSubscribers();

            _get(OOlapicgallery.prototype.__proto__ || Object.getPrototypeOf(OOlapicgallery.prototype), 'destroy', this).call(this);
        }

        /************************************************************************************************************
         ******************************************** Internal functions ********************************************
         ************************************************************************************************************/

        /**
         * Declare class constants here
         * @private
         */

    }, {
        key: '_declareConstants',
        value: function _declareConstants() {
            _get(OOlapicgallery.prototype.__proto__ || Object.getPrototypeOf(OOlapicgallery.prototype), '_declareConstants', this).call(this);

            this.HANDLEBAR_SOURCE = "#olapic-style-slide";

            this.PAGE_SETTINGS = {
                COLS_SM: 8,
                TOTAL_COLS_SM: 8,
                COLS_MD: 4,
                TOTAL_COLS_MD: 12,
                COLS_LG: 8,
                TOTAL_COLS_LG: 24
            };

            this.COMPONENT_SETTINGS = {
                COLS_SM: 4,
                TOTAL_COLS_SM: 8,
                COLS_MD: 3,
                TOTAL_COLS_MD: 12,
                COLS_LG: 6,
                TOTAL_COLS_LG: 24
            };
        }
    }]);

    return OOlapicgallery;
}(_index2.default);

// Export this so we can pick it up and import in main.js


module.exports = OOlapicgallery;

},{"./../../../../js/base/logger.js":44,"common/organisms/o-olapic-gallery/index":29}],76:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _index = require('common/organisms/o-page-content/index');

var _index2 = _interopRequireDefault(_index);

var _Enums = require('./../../enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OPageContent = function (_BasePageContent) {
    _inherits(OPageContent, _BasePageContent);

    /**
     * Constructor, will run before page loaded
     */
    function OPageContent() {
        _classCallCheck(this, OPageContent);

        return _possibleConstructorReturn(this, (OPageContent.__proto__ || Object.getPrototypeOf(OPageContent)).apply(this, arguments));
    }

    /**
     * Destructor, will run after page unload (or destroy)
     */


    _createClass(OPageContent, [{
        key: 'destroy',
        value: function destroy() {
            _get(OPageContent.prototype.__proto__ || Object.getPrototypeOf(OPageContent.prototype), 'destroy', this).call(this);
        }

        /************************************************************************************************************
         ******************************************** Internal functions ********************************************
         ************************************************************************************************************/

        /**
         * Runs on DOM Ready
         * Should be used to attach DOM listeners etc
         * @private
         */

    }, {
        key: '_onDOMReady',
        value: function _onDOMReady() {
            _get(OPageContent.prototype.__proto__ || Object.getPrototypeOf(OPageContent.prototype), '_onDOMReady', this).call(this);

            this._attachMQHandlers();
        }
    }, {
        key: '_attachMQHandlers',
        value: function _attachMQHandlers() {
            this.MQHandlerDesktop = {
                deferSetup: true,
                match: this._onDesktopMatch.bind(this),
                unmath: this._onDesktopUnMatch.bind(this)
            };

            enquire.register(_Enums2.default.MQ.IS_DESKTOP, this.MQHandlerDesktop);
        }
    }, {
        key: '_detachMQHandlers',
        value: function _detachMQHandlers() {
            enquire.unregister(_Enums2.default.MQ.IS_DESKTOP, this.MQHandlerDesktop);
        }

        /************************************************************************************************************
         ****************************************** Implementation functions ****************************************
         ************************************************************************************************************/

        /**
         * Calls parent page content margin function if we are not in desktop
         * @param args
         * @private
         */

    }, {
        key: '_updateMarginMap',
        value: function _updateMarginMap(args) {
            _get(OPageContent.prototype.__proto__ || Object.getPrototypeOf(OPageContent.prototype), '_updateMarginMap', this).call(this, args);

            if (Modernizr.mq(_Enums2.default.MQ.IS_DESKTOP)) {
                this.$el.css('margin-top', '');
            }
        }

        /**
         * Resets margin on desktop match
         * @private
         */

    }, {
        key: '_onDesktopMatch',
        value: function _onDesktopMatch() {
            this.$el.css('margin-top', '');
        }

        /**
         * Adds margin from margin map when going back to tablet or mobile
         * @private
         */

    }, {
        key: '_onDesktopUnMatch',
        value: function _onDesktopUnMatch() {
            this.$el.css('margin-top', this.totalMargin);
        }
    }]);

    return OPageContent;
}(_index2.default);

// Export this so we can pick it up and import in main.js


module.exports = OPageContent;

},{"./../../enums.js":54,"common/organisms/o-page-content/index":32}],77:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _index = require('common/organisms/o-page/index');

var _index2 = _interopRequireDefault(_index);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OPage = function (_PageBase) {
  _inherits(OPage, _PageBase);

  /**
   * Constructor, will run before page loaded
   */
  function OPage() {
    _classCallCheck(this, OPage);

    return _possibleConstructorReturn(this, (OPage.__proto__ || Object.getPrototypeOf(OPage)).apply(this, arguments));
  }

  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OPage, [{
    key: 'destroy',
    value: function destroy() {
      _get(OPage.prototype.__proto__ || Object.getPrototypeOf(OPage.prototype), 'destroy', this).call(this);
    }

    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: '_declareConstants',
    value: function _declareConstants() {
      _get(OPage.prototype.__proto__ || Object.getPrototypeOf(OPage.prototype), '_declareConstants', this).call(this);

      this.ORIENTATION_TIMEOUT = 50;
    }

    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: '_jQueryScopeBinding',
    value: function _jQueryScopeBinding() {
      _get(OPage.prototype.__proto__ || Object.getPrototypeOf(OPage.prototype), '_jQueryScopeBinding', this).call(this);

      this._onOrientationChange = this._onOrientationChange.bind(this);
    }

    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: '_attachDOMListeners',
    value: function _attachDOMListeners() {
      _get(OPage.prototype.__proto__ || Object.getPrototypeOf(OPage.prototype), '_attachDOMListeners', this).call(this);

      this.$window.on('orientationchange', this._onOrientationChange);
    }

    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: '_detachDOMListeners',
    value: function _detachDOMListeners() {
      _get(OPage.prototype.__proto__ || Object.getPrototypeOf(OPage.prototype), '_detachDOMListeners', this).call(this);

      this.$window.off('orientationchange', this._onOrientationChange);
    }

    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Handles the fact that iPhone Safari does not re-render properly on orientation change
     * @private
     */

  }, {
    key: '_onOrientationChange',
    value: function _onOrientationChange() {
      var _this2 = this;

      this.$body.css('display', 'none');

      clearTimeout(this.orientationTimer);

      this.orientationTimer = setTimeout(function () {
        _this2.$body.css('display', 'block');
      }, this.ORIENTATION_TIMEOUT);
    }
  }]);

  return OPage;
}(_index2.default);

// Export this so we can pick it up and import in main.js


module.exports = OPage;

},{"common/organisms/o-page/index":33}],78:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _index = require('common/organisms/o-pickup-location/index');

var _index2 = _interopRequireDefault(_index);

var _Logger = require('./../../../../js/base/logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OPickUpLocation = function (_BasePickUpLocation) {
  _inherits(OPickUpLocation, _BasePickUpLocation);

  /**
   * Constructor, will run before page loaded
   */
  function OPickUpLocation() {
    _classCallCheck(this, OPickUpLocation);

    return _possibleConstructorReturn(this, (OPickUpLocation.__proto__ || Object.getPrototypeOf(OPickUpLocation)).apply(this, arguments));
  }

  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OPickUpLocation, [{
    key: 'destroy',
    value: function destroy() {
      _get(OPickUpLocation.prototype.__proto__ || Object.getPrototypeOf(OPickUpLocation.prototype), 'destroy', this).call(this);
    }

    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: '_declareConstants',
    value: function _declareConstants() {
      _get(OPickUpLocation.prototype.__proto__ || Object.getPrototypeOf(OPickUpLocation.prototype), '_declareConstants', this).call(this);

      this.SELECTOR_TOGGLE_LINK = '.toggle-link';

      this.CLASS_MAP_VIEW = 'show-map';

      this.DATA_MAP_TOGGLE = 'map';
    }

    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: '_onDOMReady',
    value: function _onDOMReady() {
      _Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();
      _get(OPickUpLocation.prototype.__proto__ || Object.getPrototypeOf(OPickUpLocation.prototype), '_onDOMReady', this).call(this);
    }

    /**
     * Caching DOM elements for performance
     * @private
     */

  }, {
    key: '_cacheDOMElements',
    value: function _cacheDOMElements() {
      this.$toggleLink = this.$el.find(this.SELECTOR_TOGGLE_LINK);
    }

    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: '_jQueryScopeBinding',
    value: function _jQueryScopeBinding() {
      _get(OPickUpLocation.prototype.__proto__ || Object.getPrototypeOf(OPickUpLocation.prototype), '_jQueryScopeBinding', this).call(this);
      this._onToggleLinkClick = this._onToggleLinkClick.bind(this);
    }

    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: '_onFrameworkReady',
    value: function _onFrameworkReady() {}

    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: '_attachDOMListeners',
    value: function _attachDOMListeners() {
      _get(OPickUpLocation.prototype.__proto__ || Object.getPrototypeOf(OPickUpLocation.prototype), '_attachDOMListeners', this).call(this);

      this.$toggleLink.on('click', this._onToggleLinkClick);
    }

    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: '_detachDOMListeners',
    value: function _detachDOMListeners() {
      _get(OPickUpLocation.prototype.__proto__ || Object.getPrototypeOf(OPickUpLocation.prototype), '_detachDOMListeners', this).call(this);

      this.$toggleLink.off('click', this._onToggleLinkClick);
    }

    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Handles click on toggle link
     * @param event
     * @private
     */

  }, {
    key: '_onToggleLinkClick',
    value: function _onToggleLinkClick(event) {
      event.preventDefault();

      var $clickedLink = $(event.target);

      this.$toggleLink.removeClass(_Enums2.default.CLASS.IS_ACTIVE_STATE);
      $clickedLink.addClass(_Enums2.default.CLASS.IS_ACTIVE_STATE);

      if ($clickedLink.data("toggle") == this.DATA_MAP_TOGGLE) {
        this.$el.addClass(this.CLASS_MAP_VIEW);
      } else {
        this.$el.removeClass(this.CLASS_MAP_VIEW);
      }
    }
  }]);

  return OPickUpLocation;
}(_index2.default);

// Export this so we can pick it up and import in main.js


module.exports = OPickUpLocation;

},{"./../../../../js/base/logger.js":44,"./../../enums.js":54,"common/organisms/o-pickup-location/index":35}],79:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _index = require('../o-filter-container/index');

var _index2 = _interopRequireDefault(_index);

var _Enums = require('./../../enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OProductFilter = function (_OFilterContainer) {
    _inherits(OProductFilter, _OFilterContainer);

    /**
     * Constructor, will run before page loaded
     */
    function OProductFilter() {
        _classCallCheck(this, OProductFilter);

        return _possibleConstructorReturn(this, (OProductFilter.__proto__ || Object.getPrototypeOf(OProductFilter)).apply(this, arguments));
    }

    /**
     * Destructor, will run after page unload (or destroy)
     */


    _createClass(OProductFilter, [{
        key: 'destroy',
        value: function destroy() {
            _get(OProductFilter.prototype.__proto__ || Object.getPrototypeOf(OProductFilter.prototype), 'destroy', this).call(this);
        }

        /************************************************************************************************************
         ******************************************** Internal functions ********************************************
         ************************************************************************************************************/

        /**
         * Declare class constants here
         * @private
         */

    }, {
        key: '_declareConstants',
        value: function _declareConstants() {
            _get(OProductFilter.prototype.__proto__ || Object.getPrototypeOf(OProductFilter.prototype), '_declareConstants', this).call(this);

            this.SELECTOR_BUTTON_APPLY = '.a-button.is-primary';
            this.SELECTOR_CLEAR = '.js-clear';

            this.CLASS_HAS_APPLIED_FILTERS = 'has-applied-filters';
        }

        /**
         * Runs on DOM Ready
         * Should be used to attach DOM listeners etc
         * @private
         */

    }, {
        key: '_onDOMReady',
        value: function _onDOMReady() {
            this.$buttonApply = this.$el.find(this.SELECTOR_BUTTON_APPLY);
            this.$clear = this.$el.find(this.SELECTOR_CLEAR);

            this.appliedFilters = [];

            _get(OProductFilter.prototype.__proto__ || Object.getPrototypeOf(OProductFilter.prototype), '_onDOMReady', this).call(this);
        }

        /**
         * Attach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_attachSubscribers',
        value: function _attachSubscribers() {
            _get(OProductFilter.prototype.__proto__ || Object.getPrototypeOf(OProductFilter.prototype), '_attachSubscribers', this).call(this);

            this.subscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
            this.subscribe(_Enums2.default.EVENT.ON_FILTER_SELECTED, this._onFilterSelected);
            this.subscribe(_Enums2.default.EVENT.ON_FILTER_DESELECTED, this._onFilterDeSelected);
        }

        /**
         * Detach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_detachSubscribers',
        value: function _detachSubscribers() {
            _get(OProductFilter.prototype.__proto__ || Object.getPrototypeOf(OProductFilter.prototype), '_detachSubscribers', this).call(this);

            this.unsubscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
            this.unsubscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
            this.unsubscribe(_Enums2.default.EVENT.ON_FILTER_SELECTED, this._onFilterSelected);
            this.unsubscribe(_Enums2.default.EVENT.ON_FILTER_DESELECTED, this._onFilterDeSelected);
        }

        /**
         * Attach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_attachDOMListeners',
        value: function _attachDOMListeners() {
            _get(OProductFilter.prototype.__proto__ || Object.getPrototypeOf(OProductFilter.prototype), '_attachDOMListeners', this).call(this);

            this.$clear.on('click', this._onClear);
            this.$buttonApply.on('click', this._closeFilter);
        }

        /**
         * Detach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_detachDOMListeners',
        value: function _detachDOMListeners() {
            _get(OProductFilter.prototype.__proto__ || Object.getPrototypeOf(OProductFilter.prototype), '_detachDOMListeners', this).call(this);

            this.$clear.off('click', this._onClear);
            this.$buttonApply.off('click', this._closeFilter);
        }

        /**
         * Scopes "this" to use the "this" of the outside function
         * Since JQuery creates a new function with a new "this"
         * Attach all functions that needs to be binded here
         * @private
         */

    }, {
        key: '_jQueryScopeBinding',
        value: function _jQueryScopeBinding() {
            _get(OProductFilter.prototype.__proto__ || Object.getPrototypeOf(OProductFilter.prototype), '_jQueryScopeBinding', this).call(this);

            this._onClear = this._onClear.bind(this);
        }

        /************************************************************************************************************
         ****************************************** Implementation functions ****************************************
         ************************************************************************************************************/

        /**
         * Handles a filter selection event
         * @param filter
         * @private
         */

    }, {
        key: '_onFilterSelected',
        value: function _onFilterSelected(filter) {
            if (this.appliedFilters.indexOf(filter) < 0) {
                this.appliedFilters.push(filter);
            }
            // [customizing-bj] 정렬 필터 클릭시 Clear 버튼 노출 안되도록 수정
            if (filter.$optionsWrapper.attr('id') == undefined || filter.$optionsWrapper.attr('id') != 'sort-filter') {
        		this._setFiltersAppliedState();
        	}
        }

        /**
         * Handles a filter deselection event
         * @param filter
         * @private
         */

    }, {
        key: '_onFilterDeSelected',
        value: function _onFilterDeSelected(filter) {
            this.appliedFilters.splice(this.appliedFilters.indexOf(filter), 1);

            if (!this.appliedFilters.length) {
                this._setFiltersNotAppliedState();
            }
        }

        /**
         * Handles clear link/button click
         * @param e
         * @private
         */

    }, {
        key: '_onClear',
        value: function _onClear(e) {
            e.preventDefault();

            this.publish(_Enums2.default.EVENT.ON_FILTER_CLEAR_BUTTON_CLICKED);
            this.publish(_Enums2.default.ACTION.CLEAR_FILTERS);
            this._setFiltersNotAppliedState();
        }

        /**
         * Indicates that filters has been applied and shows/enables clear button
         * @private
         */

    }, {
        key: '_setFiltersAppliedState',
        value: function _setFiltersAppliedState() {
            this.$el.addClass(this.CLASS_HAS_APPLIED_FILTERS);
            this.$clear.removeClass(_Enums2.default.CLASS.IS_DISABLED_STATE).removeAttr("disabled");
        }

        /**
         * Indicates that no filters has been applied and hides/disables clear button
         * @private
         */

    }, {
        key: '_setFiltersNotAppliedState',
        value: function _setFiltersNotAppliedState() {
            this.$el.removeClass(this.CLASS_HAS_APPLIED_FILTERS);
            this.$clear.addClass(_Enums2.default.CLASS.IS_DISABLED_STATE).attr("disabled", true);
        }
    }]);

    return OProductFilter;
}(_index2.default);

// Export this so we can pick it up and import in main.js


module.exports = OProductFilter;

},{"../o-filter-container/index":69,"./../../enums.js":54}],80:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _appeaserComponentBase = require('./../../../../js/base/appeaser-component-base.js');

var _appeaserComponentBase2 = _interopRequireDefault(_appeaserComponentBase);

var _Logger = require('./../../../../js/base/logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OProductGallery = function (_AppeaserComponentBas) {
    _inherits(OProductGallery, _AppeaserComponentBas);

    /**
     * Constructor, will run before page loaded
     */
    function OProductGallery() {
        _classCallCheck(this, OProductGallery);

        var _this = _possibleConstructorReturn(this, (OProductGallery.__proto__ || Object.getPrototypeOf(OProductGallery)).apply(this, arguments));

        _Logger2.default.INFO(_this.constructor.name, ':: Constructor');

        _this._jQueryScopeBinding();
        _this._declareConstants();
        _this.subscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed
        return _this;
    }

    /**
     * Destructor, will run after page unload (or destroy)
     */


    _createClass(OProductGallery, [{
        key: 'destroy',
        value: function destroy() {
            _Logger2.default.INFO(this.constructor.name, ':: Destructor');

            this._detachDOMListeners();
            this._detachSubscribers();

            if (this.numSlides == 2) {
                this._detachMQHandlers();
            }

            _get(OProductGallery.prototype.__proto__ || Object.getPrototypeOf(OProductGallery.prototype), 'destroy', this).call(this);
        }

        /************************************************************************************************************
         ******************************************** Internal functions ********************************************
         ************************************************************************************************************/

        /**
         * Declare class constants here
         * @private
         */

    }, {
        key: '_declareConstants',
        value: function _declareConstants() {
            this.SELECTOR_SLIDER = '.slider';
            this.SELECTOR_O_SLIDER = '.o-slider';
            this.SELECTOR_SLIDER_WRAPPER = '.swiper-wrapper';
            this.SELECTOR_SLIDE = '.swiper-slide';
            this.SELECTOR_ZOOM_IMAGE = '.zoom-image';

            this.CLASS_HAS_ONE_IMAGE = 'has-one-image';

            this.SPEED = 750;
            this.TOUCH_SPEED = 300;
        }

        /**
         * Runs on DOM Ready
         * Should be used to attach DOM listeners etc
         * @private
         */

    }, {
        key: '_onDOMReady',
        value: function _onDOMReady() {
            var _this2 = this;

            _Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');

            this._attachSubscribers();
            this._cacheDOMElements();
            this._attachDOMListeners();

            this.sliderSettings = {
                speed: Modernizr.touchevents ? this.TOUCH_SPEED : this.SPEED,
                slidesPerView: 2,
                spaceBetween: 8,
                nextButton: _Enums2.default.SWIPER.SELECTOR_ARROW_NEXT,
                prevButton: _Enums2.default.SWIPER.SELECTOR_ARROW_PREV,
                pagination: _Enums2.default.SWIPER.SELECTOR_PAGINATION,
                paginationClickable: true,
                loop: true,
                onInit: function onInit() {
                    _this2.$oSlider.addClass(_Enums2.default.SWIPER.CLASS_INITIALIZED);
                },
                breakpoints: {
                    767: {
                        slidesPerView: 1,
                        spaceBetween: 0
                    }
                }
            };

            this.allZoomSources = [];

            this.$zoomImages.each(function (index, element) {
                _this2.allZoomSources.push($(element).attr('src'));
            });

            this.numSlides = this.$sliderWrapper.children().length;

            if (this.numSlides > 2) {
                this._initSlider();
            } else if (this.numSlides == 2) {
                this._attachMQHandlers();
            } else {
                this.$oSlider.addClass(_Enums2.default.CLASS.IS_DISABLED_STATE);
                this.$oSlider.addClass(this.CLASS_HAS_ONE_IMAGE);
            }
        }
    }, {
        key: '_cacheDOMElements',
        value: function _cacheDOMElements() {
            this.$oSlider = this.$el.find(this.SELECTOR_O_SLIDER);
            this.$slider = this.$el.find(this.SELECTOR_SLIDER);
            this.$slide = this.$el.find(this.SELECTOR_SLIDE);
            this.$sliderWrapper = this.$el.find(this.SELECTOR_SLIDER_WRAPPER);
            this.$zoomImages = this.$el.find(this.SELECTOR_ZOOM_IMAGE);
        }

        /**
         * Scopes "this" to use the "this" of the outside function
         * Since JQuery creates a new function with a  new "this"
         * Attach all functions that needs to be binded here
         * @private
         */

    }, {
        key: '_jQueryScopeBinding',
        value: function _jQueryScopeBinding() {
            this._onDOMReady = this._onDOMReady.bind(this);

            this._refresh = this._refresh.bind(this);
            this._onSliderImageClick = this._onSliderImageClick.bind(this);
            this._initSlider = this._initSlider.bind(this);
            this._destroySlider = this._destroySlider.bind(this);
            this._onSlideMouseMove = this._onSlideMouseMove.bind(this);
            this._onSlideMouseLeave = this._onSlideMouseLeave.bind(this);
        }

        /**
         * At this point the framework is ready.
         * Add all publish events here (if any)
         * @private
         */

    }, {
        key: '_onFrameworkReady',
        value: function _onFrameworkReady() {}

        /**
         * Attach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_attachSubscribers',
        value: function _attachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');

            this.subscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
        }

        /**
         * Detach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_detachSubscribers',
        value: function _detachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');

            this.unsubscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
            this.unsubscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
        }

        /**
         * Attach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_attachDOMListeners',
        value: function _attachDOMListeners() {
            this.$slide.on('click', this._onSliderImageClick);
            this.$slide.on('mousemove', this._onSlideMouseMove);
            this.$slide.on('mouseleave', this._onSlideMouseLeave);
        }

        /**
         * Detach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_detachDOMListeners',
        value: function _detachDOMListeners() {
            this.$slide.off('click', this._onSliderImageClick);
            this.$slide.off('mousemove', this._onSlideMouseMove);
            this.$slide.off('mouseleave', this._onSlideMouseLeave);
        }

        /**
         * Attach media query handlers
         * @private
         */

    }, {
        key: '_attachMQHandlers',
        value: function _attachMQHandlers() {
            this.MQMobileHandler = {
                match: this._initSlider
            };

            this.MQMediumHandler = {
                match: this._destroySlider
            };

            enquire.register(_Enums2.default.MQ.IS_MOBILE, this.MQMobileHandler);
            enquire.register(_Enums2.default.MQ.TABLET_AND_DESKTOP_RANGE, this.MQMediumHandler);
        }

        /**
         * Detach media query handlers
         * @private
         */

    }, {
        key: '_detachMQHandlers',
        value: function _detachMQHandlers() {
            enquire.unregister(_Enums2.default.MQ.IS_MOBILE, this.MQMobileHandler);
            enquire.unregister(_Enums2.default.MQ.TABLET_AND_DESKTOP_RANGE, this.MQMediumHandler);
        }

        /************************************************************************************************************
         ****************************************** Implementation functions ****************************************
         ************************************************************************************************************/

        /**
         * Init gallery slider
         * @private
         */

    }, {
        key: '_initSlider',
        value: function _initSlider() {
            this.$oSlider.removeClass(_Enums2.default.CLASS.IS_DISABLED_STATE);

            this.$slider.addClass(_Enums2.default.SWIPER.CLASS_CONTAINER);

            // Add arrows and pagination
            this.$slider.append("<div class='" + _Enums2.default.SWIPER.CLASS_ARROW_NEXT + "'></div>").append("<div class='" + _Enums2.default.SWIPER.CLASS_ARROW_PREV + "'></div>").append("<div class='" + _Enums2.default.SWIPER.CLASS_PAGINATION + "'></div>");

            this.slider = new Swiper(this.$slider, this.sliderSettings);

            // Redo event binding to pick up cloned slides
            this._detachDOMListeners();
            this.$slide = this.$el.find(this.SELECTOR_SLIDE);
            this._attachDOMListeners();
        }
    }, {
        key: '_refresh',
        value: function _refresh() {
            if (this.slider) {
                this.slider.update();
            }
        }

        /**
         * Destroys the slider
         * @private
         */

    }, {
        key: '_destroySlider',
        value: function _destroySlider() {
            this.$oSlider.addClass(_Enums2.default.CLASS.IS_DISABLED_STATE);

            if (this.slider) {
                this.slider.destroy(true, true);
                this.slider = undefined;
            }
        }

        /**
         * Shows the slider image thumbnail enlarged in the main image
         * @param event
         * @private
         */

    }, {
        key: '_onSliderImageClick',
        value: function _onSliderImageClick(event) {
            var $targetSlide = $(event.currentTarget),
                $zoomImage = $targetSlide.find(this.SELECTOR_ZOOM_IMAGE);

            this.publish(_Enums2.default.ACTION.SHOW_ZOOMED_IMAGE, {
                currentSrc: $zoomImage.attr('src'),
                allSources: this.allZoomSources
            });
        }

        /**
         * Handles hovering on slider image
         * @private
         */

    }, {
        key: '_onSlideMouseMove',
        value: function _onSlideMouseMove(event) {
            var $targetSlide = $(event.currentTarget),
                $zoomImage = $targetSlide.find(this.SELECTOR_ZOOM_IMAGE);

            $zoomImage.addClass(_Enums2.default.CLASS.IS_VISIBLE_STATE);

            // Calculate scroll offsets based on image width and height
            var mouseInsideX = event.clientX - $targetSlide[0].getBoundingClientRect().left,
                mouseInsideY = event.clientY - $targetSlide[0].getBoundingClientRect().top,
                xPercentageOffset = mouseInsideX / $targetSlide.width(),
                yPercentageOffset = mouseInsideY / $targetSlide.height(),
                xOffset = -($zoomImage.width() - $targetSlide.width()) * xPercentageOffset,
                yOffset = -($zoomImage.height() - $targetSlide.height()) * yPercentageOffset;

            // Move image with the calculated offsets
            $zoomImage.css('left', xOffset);
            $zoomImage.css('top', yOffset);
        }
    }, {
        key: '_onSlideMouseLeave',
        value: function _onSlideMouseLeave(event) {
            var $target = $(event.currentTarget),
                $zoomImage = $target.find(this.SELECTOR_ZOOM_IMAGE);

            $zoomImage.removeClass(_Enums2.default.CLASS.IS_VISIBLE_STATE);
        }
    }]);

    return OProductGallery;
}(_appeaserComponentBase2.default);

// Export this so we can pick it up and import in main.js


module.exports = OProductGallery;

},{"./../../../../js/base/appeaser-component-base.js":39,"./../../../../js/base/logger.js":44,"./../../enums.js":54}],81:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _appeaserComponentBase = require('./../../../../js/base/appeaser-component-base.js');

var _appeaserComponentBase2 = _interopRequireDefault(_appeaserComponentBase);

var _Logger = require('./../../../../js/base/logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Utils = require('./../../utils.js');

var _Utils2 = _interopRequireDefault(_Utils);

var _Enums = require('./../../enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OProductInformation = function (_AppeaserComponentBas) {
    _inherits(OProductInformation, _AppeaserComponentBas);

    /**
     * Constructor, will run before page loaded
     */
    function OProductInformation() {
        _classCallCheck(this, OProductInformation);

        var _this = _possibleConstructorReturn(this, (OProductInformation.__proto__ || Object.getPrototypeOf(OProductInformation)).apply(this, arguments));

        _Logger2.default.INFO(_this.constructor.name, ':: Constructor');

        _this._jQueryScopeBinding();
        _this._declareConstants();

        _this.subscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed
        return _this;
    }

    /**
     * Destructor, will run after page unload (or destroy)
     */


    _createClass(OProductInformation, [{
        key: 'destroy',
        value: function destroy() {
            _Logger2.default.INFO(this.constructor.name, ':: Destructor');

            this._detachDOMListeners();
            this._detachSubscribers();

            _get(OProductInformation.prototype.__proto__ || Object.getPrototypeOf(OProductInformation.prototype), 'destroy', this).call(this);
        }

        /************************************************************************************************************
         ******************************************** Internal functions ********************************************
         ************************************************************************************************************/

        /**
         * Declare class constants here
         * @private
         */

    }, {
        key: '_declareConstants',
        value: function _declareConstants() {

            this.SELECTOR_PDP_FORM = '.o-form.add-to-cart';
            this.SELECTOR_DROPDOWN_SIZE = '.size-dropdown';
            this.SELECTOR_DROPDOWN = '.m-dropdown';
            this.SELECTOR_BTN_ADD_TO_BAG = '.a-button.add-to-bag';
            this.SELECTOR_BTN_IS_DISABLED = '.a-button.is-disabled';

            this.CLASS_HAS_SELECTED_OPTION = 'is-filled';
            this.CLASS_HAS_OVERLAY = 'has-overlay';

            this.ERROR_MESSAGE_TIMEOUT = 4000;
        }

        /**
         * Called on onDomReady, cache DOM elements
         * @private
         */

    }, {
        key: '_cacheDOMElements',
        value: function _cacheDOMElements() {
            this.$addToCartForm = this.$el.find(this.SELECTOR_PDP_FORM);
            this.$dropdownSize = this.$el.find(this.SELECTOR_DROPDOWN_SIZE);
            this.$dropdown = this.$el.find(this.SELECTOR_DROPDOWN);
            this.$btnAddToBag = this.$el.find(this.SELECTOR_BTN_ADD_TO_BAG);
        }

        /**
         * Scopes "this" to use the "this" of the outside function
         * Since JQuery creates a new function with a new "this"
         * Attach all functions that needs to be binded here
         * @private
         */

    }, {
        key: '_jQueryScopeBinding',
        value: function _jQueryScopeBinding() {
            this._onDOMReady = this._onDOMReady.bind(this);
            this._onDropdownOptionChosen = this._onDropdownOptionChosen.bind(this);
            this._onAddToCartSubmit = this._onAddToCartSubmit.bind(this);
            this._onDropdownOpen = this._onDropdownOpen.bind(this);
        }

        /**
         * Attach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_attachSubscribers',
        value: function _attachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');

            this.subscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
            this.subscribe(_Enums2.default.EVENT.ON_DROPDOWN_OPTION_CHOSEN, this._onDropdownOptionChosen);
            this.subscribe(_Enums2.default.EVENT.ON_DROPDOWN_OPEN, this._onDropdownOpen);
            this.subscribe(_Enums2.default.EVENT.ON_DROPDOWN_CLOSED, this._onDropdownOpen);
        }

        /**
         * Detach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_detachSubscribers',
        value: function _detachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');

            this.unsubscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
            this.unsubscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
            this.unsubscribe(_Enums2.default.EVENT.ON_DROPDOWN_OPTION_CHOSEN, this._onDropdownOptionChosen);
            this.unsubscribe(_Enums2.default.EVENT.ON_DROPDOWN_OPEN, this._onDropdownOpen);
            this.unsubscribe(_Enums2.default.EVENT.ON_DROPDOWN_CLOSED, this._onDropdownOpen);
        }

        /**
         * At this point the framework is ready.
         * Add all publish events here (if any)
         * @private
         */

    }, {
        key: '_onFrameworkReady',
        value: function _onFrameworkReady() {}

        /**
         * Attach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_attachDOMListeners',
        value: function _attachDOMListeners() {
            this.$addToCartForm.on("submit", this._onAddToCartSubmit);
        }

        /**
         * Detach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_detachDOMListeners',
        value: function _detachDOMListeners() {
            this.$addToCartForm.off("submit", this._onAddToCartSubmit);
        }

        /**
         * Runs on DOM Ready
         * Should be used to attach DOM listeners etc
         * @private
         */

    }, {
        key: '_onDOMReady',
        value: function _onDOMReady() {
            _Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');

            this._cacheDOMElements();
            this._attachSubscribers();
            this._attachDOMListeners();
        }

        /************************************************************************************************************
         ****************************************** Implementation functions ****************************************
         ************************************************************************************************************/

        /**
         * Shows/hides the overlay depending on whether or not a dropdown is open.
         * @private
         */

    }, {
        key: '_setOverlayState',
        value: function _setOverlayState() {
            this.$el.toggleClass(this.CLASS_HAS_OVERLAY);
        }

        /**
         * ON_DROPDOWN_OPEN callback
         * @private
         */

    }, {
        key: '_onDropdownOpen',
        value: function _onDropdownOpen() {
            this._setOverlayState();
        }

        /**
         * On addToCartSubmit
         * @param e
         * @private
         */

    }, {
        key: '_onAddToCartSubmit',
        value: function _onAddToCartSubmit(e) {
        	console.log("_onAddToCartSubmit");
        	// [customizing-bj] 장바구니 담기 관련 수정
            itemPtc.addCart(this.$btnAddToBag.attr('data-btn-position'));

            var _this2 = this;

            e.preventDefault();
            e.stopPropagation();
            var $form = $(e.currentTarget),
                formData = _Utils2.default.Form.getData($form);

            if (this.$btnAddToBag.hasClass(_Enums2.default.CLASS.IS_DISABLED_STATE)) {
            	this.$el.addClass(_Enums2.default.CLASS.HAS_ERROR);

                setTimeout(function () {
                    _this2.$el.removeClass(_Enums2.default.CLASS.HAS_ERROR);
                }, this.ERROR_MESSAGE_TIMEOUT);
            } else {
                this.$el.removeClass(_Enums2.default.CLASS.HAS_ERROR);
                this.publish(_Enums2.default.ACTION.ADD_ITEM_TO_CART, formData);
            }
        }

        /**
         * On dropdown option chosen callback
         * @param $dropdown - The dropdown that triggered the event.
         * @private
         */

    }, {
        key: '_onDropdownOptionChosen',
        value: function _onDropdownOptionChosen($dropdown) {

            if (!this.$dropdownSize.is($dropdown)) return;

            this.$dropdownSize.addClass(this.CLASS_HAS_SELECTED_OPTION);

            if (this.$btnAddToBag.hasClass(_Enums2.default.CLASS.IS_DISABLED_STATE)) {
                this.$btnAddToBag.removeClass(_Enums2.default.CLASS.IS_DISABLED_STATE);
            }
        }
    }]);

    return OProductInformation;
}(_appeaserComponentBase2.default);

// Export this so we can pick it up and import in main.js


module.exports = OProductInformation;

},{"./../../../../js/base/appeaser-component-base.js":39,"./../../../../js/base/logger.js":44,"./../../enums.js":54,"./../../utils.js":87}],82:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _index = require('../o-filter-container/index');

var _index2 = _interopRequireDefault(_index);

var _Enums = require('./../../enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OProductSort = function (_OFilterContainer) {
    _inherits(OProductSort, _OFilterContainer);

    /**
     * Constructor, will run before page loaded
     */
    function OProductSort() {
        _classCallCheck(this, OProductSort);

        return _possibleConstructorReturn(this, (OProductSort.__proto__ || Object.getPrototypeOf(OProductSort)).apply(this, arguments));
    }

    /**
     * Destructor, will run after page unload (or destroy)
     */


    _createClass(OProductSort, [{
        key: 'destroy',
        value: function destroy() {
            _get(OProductSort.prototype.__proto__ || Object.getPrototypeOf(OProductSort.prototype), 'destroy', this).call(this);
        }

        /************************************************************************************************************
         ******************************************** Internal functions ********************************************
         ************************************************************************************************************/

        /**
         * Declare class constants here
         * @private
         */

    }, {
        key: '_declareConstants',
        value: function _declareConstants() {
            _get(OProductSort.prototype.__proto__ || Object.getPrototypeOf(OProductSort.prototype), '_declareConstants', this).call(this);

            this.SELECTOR_LINK_OPEN = '.product-sort-link';
            this.SELECTOR_FILTER_WRAPPER = '.product-sort-wrapper';
            this.SELECTOR_FILTER_CONTENT = '.product-sort-section';
            this.SELECTOR_DROPDOWN = '.m-dropdown';

            this.CLASS_HAS_VALUE = 'has-value';
            this.CLASS_HAS_OPTION_CHOSEN = 'has-option-chosen';
            this.CLASS_IN_SEARCH_RESULTS = 'is-in-search-results';
            this.CLASS_OVERLAY = 'is-product-sort-overlay';
        }

        /**
         * Runs on DOM Ready
         * Should be used to attach DOM listeners etc
         * @private
         */

    }, {
        key: '_onDOMReady',
        value: function _onDOMReady() {
            this.$dropdown = this.$el.find(this.SELECTOR_DROPDOWN);

            _get(OProductSort.prototype.__proto__ || Object.getPrototypeOf(OProductSort.prototype), '_onDOMReady', this).call(this);
        }

        /**
         * Attach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_attachSubscribers',
        value: function _attachSubscribers() {
            _get(OProductSort.prototype.__proto__ || Object.getPrototypeOf(OProductSort.prototype), '_attachSubscribers', this).call(this);

            this.subscribe(_Enums2.default.EVENT.ON_DROPDOWN_CLOSED, this._onDropdownClose);
            this.subscribe(_Enums2.default.EVENT.ON_DROPDOWN_OPTION_CHOSEN, this._onDropdownOptionChosen);
        }

        /**
         * Detach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_detachSubscribers',
        value: function _detachSubscribers() {
            _get(OProductSort.prototype.__proto__ || Object.getPrototypeOf(OProductSort.prototype), '_detachSubscribers', this).call(this);

            this.unsubscribe(_Enums2.default.EVENT.ON_DROPDOWN_CLOSED, this._onDropdownClose);
            this.unsubscribe(_Enums2.default.EVENT.ON_DROPDOWN_OPTION_CHOSEN, this._onDropdownOptionChosen);
        }

        /************************************************************************************************************
         ****************************************** Implementation functions ****************************************
         ************************************************************************************************************/

        /**
         * Acts on dropdown close
         * @private
         */

    }, {
        key: '_onDropdownClose',
        value: function _onDropdownClose($closingDropdown) {
            if (this.$dropdown.is($closingDropdown)) {
                this._closeFilter();
            }
        }

        /**
         * Acts when dropdown option is chosen
         * @private
         */

    }, {
        key: '_onDropdownOptionChosen',
        value: function _onDropdownOptionChosen() {
            if (!this.$dropdown.hasClass(this.CLASS_HAS_OPTION_CHOSEN)) {
                this.$el.addClass(this.CLASS_HAS_OPTION_CHOSEN);
            }
        }

        /**
         * Opens filter
         * @private
         */

    }, {
        key: '_openFilter',
        value: function _openFilter(e) {
            e.stopPropagation();

            _get(OProductSort.prototype.__proto__ || Object.getPrototypeOf(OProductSort.prototype), '_openFilter', this).call(this, e);

            if (Modernizr.mq(_Enums2.default.MQ.MOBILE_AND_TABLET_RANGE)) {
                this.publish(_Enums2.default.ACTION.OPEN_DROPDOWN, this.$dropdown);
            }
        }

        /**
         * Close filter
         * @private
         */

    }, {
        key: '_closeFilter',
        value: function _closeFilter() {
            _get(OProductSort.prototype.__proto__ || Object.getPrototypeOf(OProductSort.prototype), '_closeFilter', this).call(this);

            if (this.$dropdown.hasClass(this.CLASS_HAS_VALUE)) {
                this.$el.addClass(this.CLASS_HAS_VALUE);
            }
        }
    }]);

    return OProductSort;
}(_index2.default);

// Export this so we can pick it up and import in main.js


module.exports = OProductSort;

},{"../o-filter-container/index":69,"./../../enums.js":54}],83:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _appeaserComponentBase = require('./../../../../js/base/appeaser-component-base.js');

var _appeaserComponentBase2 = _interopRequireDefault(_appeaserComponentBase);

var _Logger = require('./../../../../js/base/logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OQuickBuy = function (_AppeaserComponentBas) {
  _inherits(OQuickBuy, _AppeaserComponentBas);

  /**
   * Constructor, will run before page loaded
   */
  function OQuickBuy() {
    _classCallCheck(this, OQuickBuy);

    var _this = _possibleConstructorReturn(this, (OQuickBuy.__proto__ || Object.getPrototypeOf(OQuickBuy)).apply(this, arguments));

    _Logger2.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();
    _this._declareConstants();
    _this.subscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed
    return _this;
  }

  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OQuickBuy, [{
    key: 'destroy',
    value: function destroy() {
      _Logger2.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();
      this._detachSubscribers();
      this._detachMQHandlers();

      _get(OQuickBuy.prototype.__proto__ || Object.getPrototypeOf(OQuickBuy.prototype), 'destroy', this).call(this);
    }

    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Attaches MQ handlers
     * @private
     */

  }, {
    key: '_attachMQHandlers',
    value: function _attachMQHandlers() {
      this.MQMediumHandler = {
        deferSetups: false,
        unmatch: this._close.bind(this),
        destroy: function destroy() {}
      };

      enquire.register(_Enums2.default.MQ.IS_DESKTOP, this.MQMediumHandler);
    }

    /**
     * Detaches MQ handlers
     * @private
     */

  }, {
    key: '_detachMQHandlers',
    value: function _detachMQHandlers() {
      enquire.unregister(_Enums2.default.MQ.IS_DESKTOP, this.MQMediumHandler);
    }

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: '_declareConstants',
    value: function _declareConstants() {}

    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: '_onDOMReady',
    value: function _onDOMReady() {
      _Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();

      this._attachSubscribers();
      this._attachDOMListeners();
      this._attachMQHandlers();
    }

    /**
     * Caching DOM elements for performance
     * @private
     */

  }, {
    key: '_cacheDOMElements',
    value: function _cacheDOMElements() {}

    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: '_jQueryScopeBinding',
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
    }

    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: '_attachSubscribers',
    value: function _attachSubscribers() {
      _Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
      this.subscribe(_Enums2.default.EVENT.ON_ITEM_ADDED_TO_CART, this._close);
    }

    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: '_detachSubscribers',
    value: function _detachSubscribers() {
      _Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
      this.unsubscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
      this.unsubscribe(_Enums2.default.EVENT.ON_ITEM_ADDED_TO_CART, this._close);
    }

    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: '_onFrameworkReady',
    value: function _onFrameworkReady() {}

    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: '_attachDOMListeners',
    value: function _attachDOMListeners() {}

    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: '_detachDOMListeners',
    value: function _detachDOMListeners() {}

    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Closes the containing lightbox
     * @private
     */

  }, {
    key: '_close',
    value: function _close() {
      this.publish(_Enums2.default.ACTION.HIDE_LIGHTBOX);
    }
  }]);

  return OQuickBuy;
}(_appeaserComponentBase2.default);

// Export this so we can pick it up and import in main.js


module.exports = OQuickBuy;

},{"./../../../../js/base/appeaser-component-base.js":39,"./../../../../js/base/logger.js":44,"./../../enums.js":54}],84:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _appeaserComponentBase = require('./../../../../js/base/appeaser-component-base.js');

var _appeaserComponentBase2 = _interopRequireDefault(_appeaserComponentBase);

var _Logger = require('./../../../../js/base/logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OSearch = function (_AppeaserComponentBas) {
    _inherits(OSearch, _AppeaserComponentBas);

    /**
     * Constructor, will run before page loaded
     */
    function OSearch() {
        _classCallCheck(this, OSearch);

        var _this = _possibleConstructorReturn(this, (OSearch.__proto__ || Object.getPrototypeOf(OSearch)).apply(this, arguments));

        _Logger2.default.INFO(_this.constructor.name, ':: Constructor');

        _this._declareConstants();
        _this._jQueryScopeBinding();
        _this.subscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed
        return _this;
    }

    /**
     * Destructor, will run after page unload (or destroy)
     */


    _createClass(OSearch, [{
        key: 'destroy',
        value: function destroy() {
            _Logger2.default.INFO(this.constructor.name, ':: Destructor');

            this._detachMQHandlers();
            this._detachDOMListeners();
            this._detachSubscribers();

            if (this.$el.hasClass(this.CLASS_IN_SEARCH_RESULTS)) {
                this._detachMQHandlers();
            }

            _get(OSearch.prototype.__proto__ || Object.getPrototypeOf(OSearch.prototype), 'destroy', this).call(this);
        }

        /************************************************************************************************************
         ******************************************** Internal functions ********************************************
         ************************************************************************************************************/

        /**
         * Declare class constants here
         * @private
         */

    }, {
        key: '_declareConstants',
        value: function _declareConstants() {
            // Selectors
            this.SELECTOR_SEARCH_FIELD = '.a-textarea';
            this.SELECTOR_CLOSE_BUTTON = '.a-icon-close';
            this.SELECTOR_RESULT_LIST = '.suggestions';
            this.SELECTOR_CLEAR_BUTTON = '.clear-button';
            this.SELECTOR_SEARCH_FORM = '.search-form';

            this.HANDLEBAR_SEARCH_TEMPLATE = '#search-suggestion-content';

            // Classes
            this.CLASS_IN_SEARCH_RESULTS = 'is-in-search-results';
            this.CLASS_IS_CLOSING = 'is-closing';
            this.CLASS_MENU_OPEN = 'has-open-menu';

            this.DESKTOP_CLOSE_TIME = 650;

            this.MENU_CLOSE_TIME = 350;

            this.DEFAULT_PADDING = 46;
            this.MIN_PADDING = 24;
        }

        /**
         * Runs on DOM Ready
         * Should be used to attach DOM listeners etc
         * @private
         */

    }, {
        key: '_onDOMReady',
        value: function _onDOMReady() {
            _Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');

            this._cacheDOMElements();
            this._attachSubscribers();
            this._attachDOMListeners();
            this._attachMQHandlers();
            this._searchHeaderInitialSetup();
        }

        /**
         * Called on onDomReady, cache DOM elements
         * @private
         */

    }, {
        key: '_cacheDOMElements',
        value: function _cacheDOMElements() {
            this.$window = $(window);
            this.$searchField = this.$el.find(this.SELECTOR_SEARCH_FIELD);
            this.$closeButton = this.$el.find(this.SELECTOR_CLOSE_BUTTON);
            this.$resultList = this.$el.find(this.SELECTOR_RESULT_LIST);
            this.$clearButton = this.$el.find(this.SELECTOR_CLEAR_BUTTON);
            this.minCharacters = this.$el.data('min-characters');
            this.$handlebarSearchTemplate = $(this.HANDLEBAR_SEARCH_TEMPLATE).html();
        }

        /**
         * At this point the framework is ready.
         * Add all publish events here (if any)
         * @private
         */

    }, {
        key: '_onFrameworkReady',
        value: function _onFrameworkReady() {}

        /**
         * Scopes "this" to use the "this" of the outside function
         * Since JQuery creates a new function with a new "this"
         * Attach all functions that needs to be binded here
         * @private
         */

    }, {
        key: '_jQueryScopeBinding',
        value: function _jQueryScopeBinding() {
            this._onDOMReady = this._onDOMReady.bind(this);
            this._onSearchValueKeyUp = this._onSearchValueKeyUp.bind(this);
            this._onShowSearch = this._onShowSearch.bind(this);
            this._onHideSearch = this._onHideSearch.bind(this);
            this._onClearResults = this._onClearResults.bind(this);
            this._onScroll = this._onScroll.bind(this);
            this._onKeyDown = this._onKeyDown.bind(this);
            this._onSearchInputFocus = this._onSearchInputFocus.bind(this);
            this._onSearchInputBlur = this._onSearchInputBlur.bind(this);
            this._onClearButtonClick = this._onClearButtonClick.bind(this);
            this._onMenuOpen = this._onMenuOpen.bind(this);
            this._onMenuClose = this._onMenuClose.bind(this);
            this._searchHeaderInitialSetup = this._searchHeaderInitialSetup.bind(this);
        }

        /**
         * Attach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_attachSubscribers',
        value: function _attachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');

            this.subscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
            this.subscribe(_Enums2.default.ACTION.SHOW_SEARCH, this._onShowSearch);
            this.subscribe(_Enums2.default.ACTION.HIDE_SEARCH, this._onHideSearch);
            this.subscribe(_Enums2.default.EVENT.ON_OVERLAY_CLICKED, this._onHideSearch);
            this.subscribe(_Enums2.default.EVENT.ON_SHOW_SEARCH_SUGGESTIONS, this._showSearchSuggestions);
            this.subscribe(_Enums2.default.ACTION.OPEN_MAIN_MENU, this._onMenuOpen);
            this.subscribe(_Enums2.default.EVENT.ON_NAVIGATION_MENU_CLOSE, this._onMenuClose);
            this.subscribe(_Enums2.default.EVENT.ON_ERROR_BANNER_RESIZE, this._onErrorBannerResize);
            this.subscribe(_Enums2.default.EVENT.ON_KEY_DOWN, this._onKeyDown);
        }

        /**
         * Detach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_detachSubscribers',
        value: function _detachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');

            this.unsubscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
            this.unsubscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
            this.unsubscribe(_Enums2.default.ACTION.SHOW_SEARCH, this._onShowSearch);
            this.unsubscribe(_Enums2.default.ACTION.HIDE_SEARCH, this._onHideSearch);
            this.unsubscribe(_Enums2.default.EVENT.ON_OVERLAY_CLICKED, this._onHideSearch);
            this.unsubscribe(_Enums2.default.EVENT.ON_SHOW_SEARCH_SUGGESTIONS, this._showSearchSuggestions);
            this.unsubscribe(_Enums2.default.ACTION.OPEN_MAIN_MENU, this._onMenuOpen);
            this.unsubscribe(_Enums2.default.EVENT.ON_NAVIGATION_MENU_CLOSE, this._onMenuClose);
            this.unsubscribe(_Enums2.default.EVENT.ON_ERROR_BANNER_RESIZE, this._onErrorBannerResize);
            this.unsubscribe(_Enums2.default.EVENT.ON_KEY_DOWN, this._onKeyDown);
        }

        /**
         * Attach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_attachDOMListeners',
        value: function _attachDOMListeners() {
            this.$searchField.on('keyup', this._onSearchValueKeyUp);
            this.$closeButton.on('click', this._onHideSearch);
            this.$searchField.on('focus', this._onSearchInputFocus);
            this.$searchField.on('blur', this._onSearchInputBlur);
            this.$clearButton.on('click', this._onClearButtonClick);
        }

        /**
         * Detach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_detachDOMListeners',
        value: function _detachDOMListeners() {
            this.$searchField.off('keyup', this._onSearchValueKeyUp);
            this.$closeButton.off('click', this._onHideSearch);
            this.$searchField.off('focus', this._onSearchInputFocus);
            this.$searchField.off('blur', this._onSearchInputBlur);
            this.$clearButton.off('click', this._onClearButtonClick);
        }
    }, {
        key: '_attachMQHandlers',
        value: function _attachMQHandlers() {
            this.MQHandlerDesktop = {
                deferSetup: true,
                match: this._desktopMatch.bind(this),
                unmatch: this._desktopUnmatch.bind(this)
            };

            enquire.register(_Enums2.default.MQ.IS_DESKTOP, this.MQHandlerDesktop);
        }
    }, {
        key: '_detachMQHandlers',
        value: function _detachMQHandlers() {
            enquire.unregister(_Enums2.default.MQ.IS_DESKTOP, this.MQHandlerDesktop);
        }

        /************************************************************************************************************
         ****************************************** Implementation functions ****************************************
         ************************************************************************************************************/

        /**
         * Adds class if needed
         * @private
         */

    }, {
        key: '_searchHeaderInitialSetup',
        value: function _searchHeaderInitialSetup() {
            if (this.$el.hasClass(this.CLASS_IN_SEARCH_RESULTS) && this.$searchField.val()) {
                this.$el.addClass(_Enums2.default.CLASS.HAS_TEXT);
            }
        }

        /**
         * Clears search suggestions
         * @private
         */

    }, {
        key: '_onClearResults',
        value: function _onClearResults() {
            this.$resultList.empty();
            this.$el.removeClass(_Enums2.default.CLASS.HAS_RESULTS);
        }

        /**
         * Handles input field focus
         * @private
         */

    }, {
        key: '_onSearchInputFocus',
        value: function _onSearchInputFocus() {
            this.$el.addClass(_Enums2.default.CLASS.IS_ACTIVE_STATE);
        }

        /**
         * Handles input field blur
         * @private
         */

    }, {
        key: '_onSearchInputBlur',
        value: function _onSearchInputBlur() {
            this.$el.removeClass(_Enums2.default.CLASS.IS_ACTIVE_STATE);
        }

        /**
         * Handles clear button click
         * @private
         */

    }, {
        key: '_onClearButtonClick',
        value: function _onClearButtonClick() {
            this.$searchField.val('').focus();
            this.$el.removeClass(_Enums2.default.CLASS.HAS_TEXT);
        }

        /**
         * Prevents return key press from making a new line
         * @param e
         * @private
         */

    }, {
        key: '_onKeyDown',
        value: function _onKeyDown(e) {
            if (event.target.type == "textarea" && e.keyCode == _Enums2.default.KEYSTROKE.ENTER) {
                e.preventDefault();
            }
        }

        /**
         * Shows search
         * @param callback - sets focus on the input field when animation is done.
         * @private
         */

    }, {
        key: '_onShowSearch',
        value: function _onShowSearch() {
            // [customizing-kjs] 검색 버튼 클릭시 top으로 가는 기능 제거.
            // $(window).scrollTop(0);

            this.$searchField.focus();

            if (!this.$el.hasClass(this.CLASS_IN_SEARCH_RESULTS)) {
                this.$el.addClass(_Enums2.default.CLASS.IS_OPEN_STATE);
                this.publish(_Enums2.default.ACTION.SHOW_OVERLAY, { classes: 'is-search-overlay' });
                this.publish(_Enums2.default.EVENT.ON_SEARCH_ACTIVE);
            }
        }

        /**
         * Hides search
         * @private
         */

    }, {
        key: '_onHideSearch',
        value: function _onHideSearch() {
            var _this2 = this;

            if (this.$el.hasClass(_Enums2.default.CLASS.IS_OPEN_STATE)) {

                this.$el.removeClass(_Enums2.default.CLASS.IS_OPEN_STATE);

                if (Modernizr.mq(_Enums2.default.MQ.IS_DESKTOP)) {
                    this.$el.addClass(this.CLASS_IS_CLOSING);
                    this.publish(_Enums2.default.ACTION.HIDE_OVERLAY, { animating: true, delay: this.DESKTOP_CLOSE_TIME });

                    setTimeout(function () {
                        _this2.$el.removeClass(_this2.CLASS_IS_CLOSING);
                    }, this.DESKTOP_CLOSE_TIME);
                } else {
                    this.publish(_Enums2.default.ACTION.HIDE_OVERLAY);
                }

                this.publish(_Enums2.default.EVENT.ON_SEARCH_HIDDEN);
            }
        }

        /**
         * Handles key up in search
         * @param e
         * @private
         */

    }, {
        key: '_onSearchValueKeyUp',
        value: function _onSearchValueKeyUp(e) {
            var _this3 = this;

            var search_string = this.$searchField.val().trim();
            if (search_string) {
                this.$el.addClass(_Enums2.default.CLASS.HAS_TEXT);

                if (search_string.length >= this.minCharacters || e.keyCode == _Enums2.default.KEYSTROKE.ENTER) {

                    clearTimeout(this.TRIGGER_SEARCH_TIMEOUT);
                    this.TRIGGER_SEARCH_TIMEOUT = setTimeout(function () {
                        _this3.publish(_Enums2.default.ACTION.GET_SEARCH_SUGGESTIONS, search_string.toLowerCase());
                    }, this.SEARCH_TIMER);
                    this.SEARCH_TIMER = 150;
                } else {
                    this.SEARCH_TIMER = 0;
                    this._onClearResults();
                }
            } else {
                this.$el.removeClass(_Enums2.default.CLASS.HAS_TEXT);
                this._onClearResults();
            }
        }

        /**
         * Presents the auto suggestions. It's triggered by the "ON_SHOW_SEARCH_SUGGESTIONS"-event.
         * @param searchSuggestions - A json object containing the search suggestions.
         * Example:
         * [
         *      {
         *          "suggestion" : "example suggestion 1",
         *          "url" : "example url 1"
         *      },
         *      {
         *          "suggestion" : "example suggestion 2",
         *          "url" : "example url 2"
         *      }
         * ]
         * @private
         */

    }, {
        key: '_showSearchSuggestions',
        value: function _showSearchSuggestions(searchSuggestions) {

            searchSuggestions = searchSuggestions.slice(0, 5);

            this.$resultList.empty();

            this.$el.addClass(_Enums2.default.CLASS.HAS_RESULTS);

            var template = Handlebars.compile(this.$handlebarSearchTemplate),
                suggestions = template({ "content": searchSuggestions });

            this.$resultList.html(suggestions);
        }

        /**
         * Handles scroll
         * @private
         */

    }, {
        key: '_onScroll',
        value: function _onScroll() {
            var scrollTop = this.$window.scrollTop();

            if (scrollTop > 0) {
                var newPadding = Math.max(this.MIN_PADDING, this.DEFAULT_PADDING - scrollTop);

                this.$el.css('padding-top', newPadding);
            } else {
                this.$el.css('padding-top', '');
            }
        }
    }, {
        key: '_desktopMatch',
        value: function _desktopMatch() {
            if (this.$el.hasClass(this.CLASS_IN_SEARCH_RESULTS)) {
                this.$window.on("scroll", this._onScroll);
                this._onScroll();
                this.$searchField.attr("wrap", "off").attr("rows", "1");
            } else {
                this.$searchField.attr("wrap", null).attr("rows", "5");
            }
        }
    }, {
        key: '_desktopUnmatch',
        value: function _desktopUnmatch() {
            if (this.$el.hasClass(this.CLASS_IN_SEARCH_RESULTS)) {
                this.$window.off("scroll", this._onScroll);
                this.$el.css({ 'padding-top': '', 'margin-top': '' });
            }
            this.$searchField.attr("wrap", "off").attr("rows", "1");
        }

        /**
         * Handles menu opening
         * @private
         */

    }, {
        key: '_onMenuOpen',
        value: function _onMenuOpen() {
            this.$el.addClass(this.CLASS_MENU_OPEN);
        }

        /**
         * Handles menu closing
         * @private
         */

    }, {
        key: '_onMenuClose',
        value: function _onMenuClose() {
            this.$el.removeClass(this.CLASS_MENU_OPEN);
        }

        /**
         * Handles error banner resize event.
         *
         * @param newHeight
         * @private
         */

    }, {
        key: '_onErrorBannerResize',
        value: function _onErrorBannerResize(newHeight) {
            if (Modernizr.mq(_Enums2.default.MQ.IS_DESKTOP)) {
                this.$el.css('margin-top', newHeight);
            }
        }
    }]);

    return OSearch;
}(_appeaserComponentBase2.default);

// Export this so we can pick it up and import in main.js


module.exports = OSearch;

},{"./../../../../js/base/appeaser-component-base.js":39,"./../../../../js/base/logger.js":44,"./../../enums.js":54}],85:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _appeaserComponentBase = require('./../../../../js/base/appeaser-component-base.js');

var _appeaserComponentBase2 = _interopRequireDefault(_appeaserComponentBase);

var _Logger = require('./../../../../js/base/logger.js');

var _Logger2 = _interopRequireDefault(_Logger);

var _Enums = require('./../../enums.js');

var _Enums2 = _interopRequireDefault(_Enums);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OSlider = function (_AppeaserComponentBas) {
    _inherits(OSlider, _AppeaserComponentBas);

    /**
     * Constructor, will run before page loaded
     */
    function OSlider() {
        _classCallCheck(this, OSlider);

        var _this = _possibleConstructorReturn(this, (OSlider.__proto__ || Object.getPrototypeOf(OSlider)).apply(this, arguments));

        _Logger2.default.INFO(_this.constructor.name, ':: Constructor');

        _this._jQueryScopeBinding();
        _this._declareConstants();
        _this.subscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed
        return _this;
    }

    /**
     * Destructor, will run after page unload (or destroy)
     */


    _createClass(OSlider, [{
        key: 'destroy',
        value: function destroy() {
            _Logger2.default.INFO(this.constructor.name, ':: Destructor');

            this._detachDOMListeners();
            this._detachSubscribers();

            _get(OSlider.prototype.__proto__ || Object.getPrototypeOf(OSlider.prototype), 'destroy', this).call(this);
        }

        /************************************************************************************************************
         ******************************************** Internal functions ********************************************
         ************************************************************************************************************/

        /**
         * Declare class constants here
         * @private
         */

    }, {
        key: '_declareConstants',
        value: function _declareConstants() {
            this.SELECTOR_SLIDER = '.slider';
            this.SELECTOR_CLONED_COMPONENTS = '.swiper-slide-duplicate, .swiper-slide-duplicate *[data-component-id]';
            this.SELECTOR_SLIDER_CONTENT = '.slider .product-image, .slider .a-picture, .slider .a-image, .slider .a-video';
            this.SELECTOR_ARROW = '.swiper-arrow';

            this.DATA_DESKTOP_SLIDES = 'slides-desktop';
            this.DATA_TABLET_SLIDES = 'slides-tablet';
            this.DATA_MOBILE_SLIDES = 'slides-mobile';

            this.SPEED = 1500;
            this.TOUCH_SPEED = 300;
        }

        /**
         * Runs on DOM Ready
         * Should be used to attach DOM listeners etc
         * @private
         */

    }, {
        key: '_onDOMReady',
        value: function _onDOMReady() {
            var _this2 = this;

            _Logger2.default.INFO(this.constructor.name, ':: _onDOMReady');

            this._attachSubscribers();
            this._cacheDOMElements();

            var color = this.$slider.css("color");

            this.settings = {
                speed: Modernizr.touchevents ? this.TOUCH_SPEED : this.SPEED,
                slidesPerView: this.$el.data(this.DATA_DESKTOP_SLIDES),
                slidesPerGroup: this.$el.data(this.DATA_DESKTOP_SLIDES),
                nextButton: _Enums2.default.SWIPER.SELECTOR_ARROW_NEXT,
                prevButton: _Enums2.default.SWIPER.SELECTOR_ARROW_PREV,
                pagination: _Enums2.default.SWIPER.SELECTOR_PAGINATION,
                paginationBulletRender: function paginationBulletRender(swiper, i, className) {
                    return '<span class=\'' + className + '\' style=\'background-color: ' + color + '\'></span>';
                },
                paginationClickable: true,
                loop: true,
                autoplay: this.$el.data('slick-autoplay') ? this.$el.data('slick-autoplay-speed') ? this.$el.data('slick-autoplay-speed') : 4000 : null,
                onInit: function onInit() {
                    _this2.$el.addClass(_Enums2.default.SWIPER.CLASS_INITIALIZED);
                },
                onImagesReady: this._adjustPositions,
                breakpoints: {
                    767: {
                        slidesPerView: this.$el.data(this.DATA_MOBILE_SLIDES),
                        slidesPerGroup: this.$el.data(this.DATA_MOBILE_SLIDES)
                    },
                    1024: {
                        slidesPerView: this.$el.data(this.DATA_TABLET_SLIDES),
                        slidesPerGroup: this.$el.data(this.DATA_TABLET_SLIDES)
                    }
                }
            };

            var amountOfSlides = this.$slider.children().length;

            this._sliderSetUp();
            this._attachMQHandlers(amountOfSlides);

            this._attachDOMListeners();
        }
    }, {
        key: '_cacheDOMElements',
        value: function _cacheDOMElements() {
            this.$slider = this.$el.find(this.SELECTOR_SLIDER);
        }

        /**
         * Scopes "this" to use the "this" of the outside function
         * Since JQuery creates a new function with a new "this"
         * Attach all functions that needs to be binded here
         * @private
         */

    }, {
        key: '_jQueryScopeBinding',
        value: function _jQueryScopeBinding() {
            this._onDOMReady = this._onDOMReady.bind(this);

            this._refresh = this._refresh.bind(this);
            this._initCloneSlides = this._initCloneSlides.bind(this);
            this._adjustPositions = this._adjustPositions.bind(this);
            this._initSlider = this._initSlider.bind(this);
            this._destroySlider = this._destroySlider.bind(this);
            this._onDisabledResize = this._onDisabledResize.bind(this);
        }

        /**
         * At this point the framework is ready.
         * Add all publish events here (if any)
         * @private
         */

    }, {
        key: '_onFrameworkReady',
        value: function _onFrameworkReady() {}

        /**
         * Attach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_attachSubscribers',
        value: function _attachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _attachSubscribers');

            this.subscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
            this.subscribe(_Enums2.default.EVENT.ON_PAGE_CONTENT_SHOW, this._refresh);
            this.subscribe(_Enums2.default.ACTION.RE_INITIALIZE_SLIDER, this._reInit);
        }

        /**
         * Detach Event Subscribers within JS (Enums.js)
         * @private
         */

    }, {
        key: '_detachSubscribers',
        value: function _detachSubscribers() {
            _Logger2.default.INFO(this.constructor.name, ':: _detachSubscribers');

            this.unsubscribe(_Enums2.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
            this.unsubscribe(_Enums2.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
            this.unsubscribe(_Enums2.default.EVENT.ON_PAGE_CONTENT_SHOW, this._refresh);
            this.unsubscribe(_Enums2.default.ACTION.RE_INITIALIZE_SLIDER, this._reInit);
        }

        /**
         * Attach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_attachDOMListeners',
        value: function _attachDOMListeners() {
            $(window).on('resize', this._adjustPositions);
        }

        /**
         * Detach EventListeners in the DOM
         * @private
         */

    }, {
        key: '_detachDOMListeners',
        value: function _detachDOMListeners() {
            $(window).off('resize', this._adjustPositions);
            $(window).off('resize', this._onDisabledResize);
        }

        /**
         * Attach media query handlers
         * @private
         */

    }, {
        key: '_attachMQHandlers',
        value: function _attachMQHandlers(amountOfSlides) {
            this.MQMobileHandler = {
                match: amountOfSlides > this.$el.data(this.DATA_MOBILE_SLIDES) ? this._initSlider : this._destroySlider
            };

            this.MQMediumHandler = {
                match: amountOfSlides > this.$el.data(this.DATA_TABLET_SLIDES) ? this._initSlider : this._destroySlider
            };

            this.MQDesktopHandler = {
                match: amountOfSlides > this.$el.data(this.DATA_DESKTOP_SLIDES) ? this._initSlider : this._destroySlider
            };

            enquire.register(_Enums2.default.MQ.IS_MOBILE, this.MQMobileHandler);
            enquire.register(_Enums2.default.MQ.IS_TABLET, this.MQMediumHandler);
            enquire.register(_Enums2.default.MQ.IS_DESKTOP, this.MQDesktopHandler);
        }

        /**
         * Detach media query handlers
         * @private
         */

    }, {
        key: '_detachMQHandlers',
        value: function _detachMQHandlers() {
            enquire.unregister(_Enums2.default.MQ.IS_MOBILE, this.MQMobileHandler);
            enquire.unregister(_Enums2.default.MQ.IS_TABLET, this.MQMediumHandler);
            enquire.unregister(_Enums2.default.MQ.IS_DESKTOP, this.MQDesktopHandler);
        }

        /************************************************************************************************************
         ****************************************** Implementation functions ****************************************
         ************************************************************************************************************/

        /**
         * Initializes the slider
         * @private
         */

    }, {
        key: '_initSlider',
        value: function _initSlider() {
            this.$el.removeClass(_Enums2.default.CLASS.IS_DISABLED_STATE);

            if (!this.slider) {
                if (this.disabledListenerAttached) {
                    $(window).off('resize', this._onDisabledResize);
                    this.disabledListenerAttached = false;
                }

                this.slider = new Swiper(this.$slider, this.settings);
                this._initCloneSlides();
                this._adjustPositions();
            }
        }

        /**
         * Destroys the slider
         * @private
         */

    }, {
        key: '_destroySlider',
        value: function _destroySlider() {
            this.$el.addClass(_Enums2.default.CLASS.IS_DISABLED_STATE);

            if (!this.disabledListenerAttached) {
                this._onDisabledResize();
                $(window).on('resize', this._onDisabledResize);
                this.disabledListenerAttached = true;
            }

            if (this.slider) {
                this.slider.destroy(true, true);
                this.slider = undefined;
            }
        }

        /**
         * Sets up slider HTML
         * @private
         */

    }, {
        key: '_sliderSetUp',
        value: function _sliderSetUp() {
            this.$slider.addClass(_Enums2.default.SWIPER.CLASS_CONTAINER);

            // Wrap the slides
            this.$slider.children().addClass(_Enums2.default.SWIPER.CLASS_SLIDE).wrapAll("<div class='" + _Enums2.default.SWIPER.CLASS_WRAPPER + "'></div>");

            // Add arrows and pagination
            this.$slider.append("<div class='" + _Enums2.default.SWIPER.CLASS_ARROW_NEXT + "'></div>").append("<div class='" + _Enums2.default.SWIPER.CLASS_ARROW_PREV + "'></div>").append("<div class='" + _Enums2.default.SWIPER.CLASS_PAGINATION + "'></div>");

            this.$arrow = this.$el.find(this.SELECTOR_ARROW);
        }
    }, {
        key: '_refresh',
        value: function _refresh() {
            if (this.slider) {
                this.slider.update();
                this._adjustPositions();
            }
        }

        /**
         * Re-initializes slider
         * @private
         */

    }, {
        key: '_reInit',
        value: function _reInit($slider) {
            if (this.$slider.is($slider)) {
                if (this.slider) {
                    this.slider.destroy(true, true);
                    this.slider = undefined;
                }

                this.$el.find(_Enums2.default.SWIPER.SELECTOR_SWIPER_WRAPPER).contents().unwrap();
                var amountOfSlides = this.$slider.children().length;

                this.$slider.find('> *:not(' + _Enums2.default.SWIPER.SELECTOR_SWIPER_CONTROLS + ')').addClass(_Enums2.default.SWIPER.CLASS_SLIDE).wrapAll("<div class='" + _Enums2.default.SWIPER.CLASS_WRAPPER + "'></div>");

                this._detachMQHandlers();
                this._attachMQHandlers(amountOfSlides);
            }
        }

        /**
         * Adjusts the width of the slides when disabled
         * @private
         */

    }, {
        key: '_onDisabledResize',
        value: function _onDisabledResize() {
            var amountOfSlides = this.$el.data(this.DATA_DESKTOP_SLIDES);

            if (Modernizr.mq(_Enums2.default.MQ.IS_MOBILE)) {
                amountOfSlides = this.$el.data(this.DATA_MOBILE_SLIDES);
            } else if (Modernizr.mq(_Enums2.default.MQ.IS_TABLET)) {
                amountOfSlides = this.$el.data(this.DATA_TABLET_SLIDES);
            }

            this.$el.find(_Enums2.default.SWIPER.SELECTOR_SLIDE).css('width', this.$slider.width() / amountOfSlides);
        }

        /**
         * When infinite option is true swiper will clone slides.
         * We need to initialize our scripts for these clones in order to avoid ugly transitions.
         * @private
         */

    }, {
        key: '_initCloneSlides',
        value: function _initCloneSlides() {
            this.$slider.find(this.SELECTOR_CLONED_COMPONENTS).removeAttr('data-component-id');
            this.scan();
        }

        /**
         * Adjusts the position of the pagination and arrows according to the image height
         * @private
         */

    }, {
        key: '_adjustPositions',
        value: function _adjustPositions() {
            if (this.$arrow) {
                var arrowHeight = this.$el.find(this.SELECTOR_ARROW).outerHeight();
                var contentHeight = this.$el.find(this.SELECTOR_SLIDER_CONTENT).first().outerHeight() - arrowHeight;
                this.$arrow.css('top', contentHeight / 2);
            }
        }
    }]);

    return OSlider;
}(_appeaserComponentBase2.default);

// Export this so we can pick it up and import in main.js


module.exports = OSlider;

},{"./../../../../js/base/appeaser-component-base.js":39,"./../../../../js/base/logger.js":44,"./../../enums.js":54}],86:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _storeLocator = require('js/base/store-locator');

var _storeLocator2 = _interopRequireDefault(_storeLocator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OStoreLocator = function (_StoreLocator) {
    _inherits(OStoreLocator, _StoreLocator);

    function OStoreLocator() {
        _classCallCheck(this, OStoreLocator);

        return _possibleConstructorReturn(this, (OStoreLocator.__proto__ || Object.getPrototypeOf(OStoreLocator)).apply(this, arguments));
    }

    _createClass(OStoreLocator, [{
        key: '_declareConstants',


        /************************************************************************************************************
         ******************************************** Internal functions ********************************************
         ************************************************************************************************************/

        /**
         * Declare class constants here
         * @private
         */
        value: function _declareConstants() {
            this.SELECTOR_STORES = '.stores';
            this.SELECTOR_STORE_COUNT = '.a-label.store-count';
            this.SELECTOR_TOOLTIP_BOX = '.tooltip-box';

            this.TEMPLATE_TOOLTIP = '#store-tooltip';
            this.TEMPLATE_STORE_INFORMATION_GRID = '#store-information-grid';

            this.CURRENT_COUNTRY = null;
            this.CURRENT_STORES = null;

            this.ITEMS_PER_ROW_DESKTOP = 4;
            this.ITEMS_PER_ROW_TABLET = 2;

            this.TOOLTIP_VERTICAL_OFFSET = 86;
            this.TOOLTIP_HORIZONTAL_OFFSET = 8;
            this.TOOLTIP_HAS_FLEXIBLE_HEIGHT = false;

            this.RESPONSE_TYPE = '?_type=json';

            this.MQDesktop = {
                match: this._adjustStoreInfoGrid,
                unmatch: this._adjustStoreInfoGrid
            };
        }
    }, {
        key: '_cacheDOMElements',
        value: function _cacheDOMElements() {

            _get(OStoreLocator.prototype.__proto__ || Object.getPrototypeOf(OStoreLocator.prototype), '_cacheDOMElements', this).call(this);

            this.$countryDropDown = $('.m-dropdown-filter#countries');
            this.$countryDropDownInput = $('.m-dropdown-filter#countries .a-input');
            this.$cityDropDown = $('.m-dropdown-filter#cities');
            this.$cityDropDownInput = $('.m-dropdown-filter#cities .a-input');
            this.$tooltipBox = this.$el.find(this.SELECTOR_TOOLTIP_BOX);

            this.$mapObject = $('#map');
        }

        /************************************************************************************************************
         ****************************************** Implementation functions ****************************************
         ************************************************************************************************************/

        /**
         * Appends information about each store below the map.
         * @param stores - Store data
         * @private
         */

    }, {
        key: '_populateStoreInformation',
        value: function _populateStoreInformation(stores) {

            var self = this;

            // clear
            this.$storeInfoContainer.html('');

            // sort store list
            stores.sort(function (a, b) {

                if (a.city > b.city) {
                    return 1;
                } else if (a.city < b.city) {
                    return -1;
                }

                return 0;
            });

            var storeInfoTemplate = Handlebars.compile(self.$storeInfoGridTemplate.html());
            this.$storeInfoContainer.append(storeInfoTemplate(stores));
        }
    }]);

    return OStoreLocator;
}(_storeLocator2.default);

// Export this so we can pick it up and import in main.js


module.exports = OStoreLocator;

},{"js/base/store-locator":48}],87:[function(require,module,exports){
"use strict";

var _BaseUtils = require('./../../js/base/utils.js');

var _BaseUtils2 = _interopRequireDefault(_BaseUtils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Utils = $.extend({}, _BaseUtils2.default, {
    Markers: {
        iconHover: function iconHover() {
            return {
                url: "/etc/designs/appeaser/stories/clientlibs/pattern-lib/images/a-icon-pin-pink.svg",
                size: new google.maps.Size(17, 27),
                origin: new google.maps.Point(0, 0),
                anchor: new google.maps.Point(0, 27)
            };
        },

        icon: function icon() {
            return {
                url: "/etc/designs/appeaser/stories/clientlibs/pattern-lib/images/store.svg",
                size: new google.maps.Size(17, 27),
                origin: new google.maps.Point(0, 0),
                anchor: new google.maps.Point(0, 27)
            };
        }
    }
});

module.exports = Utils;

},{"./../../js/base/utils.js":49}]},{},[5,55,51,52])
